<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>nest 邮箱</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E9%82%AE%E7%AE%B1/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E9%82%AE%E7%AE%B1/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>授权码 <code>邮箱授权码</code></p><h2 id="安装邮箱模块"><a href="#安装邮箱模块" class="headerlink" title="安装邮箱模块"></a>安装邮箱模块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save @nestjs-modules/mailer nodemailer</span><br></pre></td></tr></table></figure><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="module"><a href="#module" class="headerlink" title="module"></a>module</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// email.module.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">EmailService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./email.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">EmailController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./email.controller&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">EmailController</span>],</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">EmailService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">EmailModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// email.controller.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Controller</span>, <span class="title class_">Get</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">EmailService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./email.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiTags</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiTags</span>(<span class="string">&quot;email&quot;</span>)</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;email&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">EmailController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> emailService: EmailService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Get</span>()</span><br><span class="line">    <span class="title function_">sendEmail</span>(): <span class="built_in">string</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">emailService</span>.<span class="title function_">sendEmail</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="service"><a href="#service" class="headerlink" title="service"></a>service</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// email.service.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MailerService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs-modules/mailer&quot;</span>;</span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">EmailService</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> mailerService: MailerService</span>) &#123;&#125;</span><br><span class="line">    <span class="title function_">sendEmail</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">mailerService</span>.<span class="title function_">sendMail</span>(&#123;</span><br><span class="line">            <span class="attr">to</span>: <span class="string">&quot;904116587@qq.com&quot;</span>,</span><br><span class="line">            <span class="attr">from</span>: <span class="string">&quot;1690312648@qq.com&quot;</span>,</span><br><span class="line">            <span class="attr">subject</span>: <span class="string">&quot;subject&quot;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="app-module-ts-（重要）"><a href="#app-module-ts-（重要）" class="headerlink" title="app.module.ts （重要）"></a>app.module.ts （重要）</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MailerModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs-modules/mailer&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">EmailModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./modules/email/email.module&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">imports</span>: [</span><br><span class="line">        <span class="title class_">EmailModule</span>,</span><br><span class="line">        <span class="title class_">MailerModule</span>.<span class="title function_">forRoot</span>(&#123;</span><br><span class="line">            <span class="attr">transport</span>: <span class="string">&quot;smtps://1690312648@qq.com:xqqpdxmqsuvjcgci@smtp.qq.com&quot;</span>,</span><br><span class="line">            <span class="attr">defaults</span>: &#123;</span><br><span class="line">                <span class="attr">from</span>: <span class="string">&#x27;&quot;nest-email&quot; &lt;1690312648@qq.com&gt;&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">AppController</span>],</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">AppService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="发送邮件"><a href="#发送邮件" class="headerlink" title="发送邮件"></a>发送邮件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/email</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs 中间件</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E4%B8%AD%E9%97%B4%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>中间件是在路由处理程序之前调用的函数。中间件函数可以访问请求和响应对象，以及 next()应用程序请求-响应周期中的中间件函数。下一个中间件函数通常由一个名为 的变量表示 next。</p><ol><li>创建一个中间件</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// logger.middleware.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span>, <span class="title class_">NestMiddleware</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Request</span>, <span class="title class_">Response</span>, <span class="title class_">NextFunction</span> &#125; <span class="keyword">from</span> <span class="string">&quot;express&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">LoggerMiddleware</span> <span class="keyword">implements</span> <span class="title class_">NestMiddleware</span> &#123;</span><br><span class="line">    <span class="title function_">use</span>(<span class="params">req: Request, res: Response, next: NextFunction</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Request...&quot;</span>);</span><br><span class="line">        <span class="title function_">next</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>使用中间件</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.module.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span>, <span class="title class_">NestModule</span>, <span class="title class_">MiddlewareConsumer</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LoggerMiddleware</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./common/middleware/logger.middleware&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CatsModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./cats/cats.module&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">imports</span>: [<span class="title class_">CatsModule</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> <span class="keyword">implements</span> <span class="title class_">NestModule</span> &#123;</span><br><span class="line">    <span class="title function_">configure</span>(<span class="params">consumer: MiddlewareConsumer</span>) &#123;</span><br><span class="line">        consumer.<span class="title function_">apply</span>(<span class="title class_">LoggerMiddleware</span>).<span class="title function_">forRoutes</span>(<span class="string">&quot;cats&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs 装饰器</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E8%A3%85%E9%A5%B0%E5%99%A8/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E8%A3%85%E9%A5%B0%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    <span class="title class_">Controller</span>,</span><br><span class="line">    <span class="title class_">Get</span>,</span><br><span class="line">    <span class="title class_">Post</span>,</span><br><span class="line">    <span class="title class_">Body</span>,</span><br><span class="line">    <span class="title class_">Patch</span>,</span><br><span class="line">    <span class="title class_">Param</span>,</span><br><span class="line">    <span class="title class_">Delete</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UserService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./user.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/create-user.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UpdateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/update-user.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiTags</span>, <span class="title class_">ApiOperation</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// swagger 标签分类</span></span><br><span class="line"><span class="meta">@ApiTags</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="comment">// 将装饰的class 装饰成controller</span></span><br><span class="line"><span class="comment">// 路径 http://localhost3000/user</span></span><br><span class="line"><span class="comment">// 括号里是路由</span></span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="comment">// 使用依赖注入的方式引入 service</span></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> userService: UserService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(&#123;</span><br><span class="line">        <span class="attr">summary</span>: <span class="string">&quot;添加用户&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方法装饰器，将controller里的方法装饰成路由，并且以请求方法调用</span></span><br><span class="line">    <span class="comment">// @Post post调用 http://localhost3000/user</span></span><br><span class="line">    <span class="comment">// 以下方法装饰器同理</span></span><br><span class="line">    <span class="meta">@Post</span>()</span><br><span class="line">    <span class="comment">// @Body() 使用装饰器装饰 http 请求体参数</span></span><br><span class="line">    <span class="comment">// CreateUserDto ts 参数类型约束</span></span><br><span class="line">    <span class="title function_">create</span>(<span class="params"><span class="meta">@Body</span>() createUserDto: CreateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">create</span>(createUserDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @Get get调用 http://localhost3000/user</span></span><br><span class="line">    <span class="meta">@Get</span>()</span><br><span class="line">    <span class="title function_">findAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">findAll</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @Get get调用 http://localhost3000/user/123</span></span><br><span class="line">    <span class="meta">@Get</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">findOne</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">findOne</span>(+id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Patch</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">update</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span>, <span class="meta">@Body</span>() updateUserDto: UpdateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">update</span>(+id, updateUserDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">remove</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">remove</span>(+id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自定义路径</span></span><br><span class="line">    <span class="comment">// 和上面 @Get(&#x27;:id&#x27;) 装饰的方法会冲突</span></span><br><span class="line">    <span class="comment">// @Get(&#x27;/customPath&#x27;)</span></span><br><span class="line">    <span class="comment">// customPath() &#123;</span></span><br><span class="line">    <span class="comment">//   return this.userService.customPath();</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs dto (Data Transfer Object) 数据传输对象</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/dto/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/dto/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ul><li>对接口的参数进行约束</li><li>dto 是做表示层（展示给用户）的，而实体是数据对象（表）</li><li>dto 是面向对象的，实体是面向数据库的。</li><li>数据传输对象，这个对象封装你需要传输的数据 在 M，V，C 这三个层传递</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /src/user/dto/create-user.dto.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiProperty</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用swagger和ts配合使用，对参数进行约束及说明</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">CreateUserDto</span> &#123;</span><br><span class="line">    <span class="comment">// 对属性在swagger里进行说明</span></span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123; <span class="attr">description</span>: <span class="string">&quot;邮箱&quot;</span> &#125;)</span><br><span class="line">    <span class="comment">// 配置只读属性，在接口使用时，不允许修改</span></span><br><span class="line">    <span class="keyword">readonly</span> <span class="attr">email</span>: <span class="built_in">string</span>; <span class="comment">// 只读</span></span><br><span class="line">    <span class="comment">// 配置默认值</span></span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123; <span class="attr">description</span>: <span class="string">&quot;密码&quot;</span>, <span class="attr">default</span>: <span class="string">&quot;123456&quot;</span> &#125;)</span><br><span class="line">    <span class="attr">password</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123; <span class="attr">description</span>: <span class="string">&quot;用户名&quot;</span>, <span class="attr">default</span>: <span class="string">&quot;用户名&quot;</span> &#125;)</span><br><span class="line">    <span class="attr">username</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /src/user/user.controller.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/create-user.dto&quot;</span>;</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> userService: UserService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Post</span>()</span><br><span class="line">    <span class="comment">// @Body()装饰器 将从客户端获取到的参数赋给 createUserDto</span></span><br><span class="line">    <span class="comment">// CreateUserDto 用于约束 createUserDto里的属性值</span></span><br><span class="line">    <span class="title function_">create</span>(<span class="params"><span class="meta">@Body</span>() createUserDto: CreateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">create</span>(createUserDto);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="可选更新"><a href="#可选更新" class="headerlink" title="可选更新"></a>可选更新</h2><ul><li><p>在构建输入验证类型（也称为 DTO）时，在同一类型上构建创建和更新变体通常很有用。例如，创建变体可能需要所有字段，而更新变体可能使所有字段都是可选的。</p></li><li><p>Nest 提供了 PartialType()实用功能来简化此任务并最大限度地减少样板文件。</p></li><li><p>该 PartialType()函数返回一个类型（类），其中输入类型的所有属性都设置为可选</p></li><li><p><code>CreateUserDto</code> 里属性都是必选的，使用 <code>PartialType()</code>函数设置为可选</p></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// update-user.dto.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PartialType</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/mapped-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./create-user.dto&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UpdateUserDto</span> <span class="keyword">extends</span> <span class="title class_ inherited__">PartialType</span>(<span class="title class_">CreateUserDto</span>) &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs dto和entities</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/dto%E5%92%8Centities/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/dto%E5%92%8Centities/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ul><li>dto 是面对前端的，和前端打交道，检验前端传递的数据</li><li>entities 是面对数据库的，和数据库打交道，检验从数据库返回的数据</li><li>实体，nestjs 对象和数据库的映射关系</li></ul><h2 id="dto-文件"><a href="#dto-文件" class="headerlink" title="dto 文件"></a>dto 文件</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">IsInt</span>, <span class="title class_">IsString</span> &#125; <span class="keyword">from</span> <span class="string">&quot;class-validator&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">CreateCatDto</span> &#123;</span><br><span class="line">    <span class="meta">@IsString</span>()</span><br><span class="line">    <span class="keyword">readonly</span> <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@IsInt</span>()</span><br><span class="line">    <span class="keyword">readonly</span> <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@IsString</span>()</span><br><span class="line">    <span class="keyword">readonly</span> <span class="attr">breed</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="entity-文件"><a href="#entity-文件" class="headerlink" title="entity 文件"></a>entity 文件</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiProperty</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Cat</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The name of the Cat</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@example</span> <span class="variable">Kitty</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123; <span class="attr">example</span>: <span class="number">1</span>, <span class="attr">description</span>: <span class="string">&quot;The age of the Cat&quot;</span> &#125;)</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123;</span><br><span class="line">        <span class="attr">example</span>: <span class="string">&quot;Maine Coon&quot;</span>,</span><br><span class="line">        <span class="attr">description</span>: <span class="string">&quot;The breed of the Cat&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="attr">breed</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在-controller-中使用"><a href="#在-controller-中使用" class="headerlink" title="在 controller 中使用"></a>在 controller 中使用</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Body</span>, <span class="title class_">Controller</span>, <span class="title class_">Get</span>, <span class="title class_">Param</span>, <span class="title class_">Post</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    <span class="title class_">ApiBearerAuth</span>,</span><br><span class="line">    <span class="title class_">ApiOperation</span>,</span><br><span class="line">    <span class="title class_">ApiResponse</span>,</span><br><span class="line">    <span class="title class_">ApiTags</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CatsService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./cats.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateCatDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/create-cat.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Cat</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./entities/cat.entity&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiBearerAuth</span>()</span><br><span class="line"><span class="meta">@ApiTags</span>(<span class="string">&quot;cats&quot;</span>)</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;cats&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">CatsController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> catsService: CatsService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Post</span>()</span><br><span class="line">    <span class="meta">@ApiOperation</span>(&#123; <span class="attr">summary</span>: <span class="string">&quot;Create cat&quot;</span> &#125;)</span><br><span class="line">    <span class="meta">@ApiResponse</span>(&#123; <span class="attr">status</span>: <span class="number">403</span>, <span class="attr">description</span>: <span class="string">&quot;Forbidden.&quot;</span> &#125;)</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">create</span>(<span class="meta">@Body</span>() <span class="attr">createCatDto</span>: <span class="title class_">CreateCatDto</span>): <span class="title class_">Promise</span>&lt;<span class="title class_">Cat</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">catsService</span>.<span class="title function_">create</span>(createCatDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Get</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="meta">@ApiResponse</span>(&#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="attr">description</span>: <span class="string">&quot;The found record&quot;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">Cat</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="title function_">findOne</span>(<span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) <span class="attr">id</span>: <span class="built_in">string</span>): <span class="title class_">Cat</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">catsService</span>.<span class="title function_">findOne</span>(+id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs使用jwt</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/jwt/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/jwt/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="nestjs-jwt-验证文档"><a href="#nestjs-jwt-验证文档" class="headerlink" title="nestjs jwt 验证文档"></a><a href="https://docs.nestjs.com/security/authentication#authentication">nestjs jwt 验证文档</a></h2><h2 id="安装相关依赖"><a href="#安装相关依赖" class="headerlink" title="安装相关依赖"></a>安装相关依赖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install --save @nestjs/passport passport passport-local</span><br><span class="line">npm install --save-dev @types/passport-local</span><br><span class="line"></span><br><span class="line">npm install --save @nestjs/jwt passport-jwt</span><br><span class="line">npm install --save-dev @types/passport-jwt</span><br></pre></td></tr></table></figure><h2 id="创建-auth-模块"><a href="#创建-auth-模块" class="headerlink" title="创建 auth 模块"></a>创建 auth 模块</h2><ul><li>&#x2F;modules&#x2F;auth</li><li>登录验证相关代码</li></ul><h2 id="创建-jwt-密钥"><a href="#创建-jwt-密钥" class="headerlink" title="创建 jwt 密钥"></a>创建 jwt 密钥</h2><p>&#x2F;modules&#x2F;auth&#x2F;constants.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> jwtConstants = &#123;</span><br><span class="line">    <span class="attr">secret</span>: <span class="string">&quot;secretKey&quot;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="创建local-strategy-ts，用于无需-token-验证"><a href="#创建local-strategy-ts，用于无需-token-验证" class="headerlink" title="创建local.strategy.ts，用于无需 token 验证"></a>创建<code>local.strategy.ts</code>，用于无需 token 验证</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Strategy</span> &#125; <span class="keyword">from</span> <span class="string">&quot;passport-local&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PassportStrategy</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/passport&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span>, <span class="title class_">UnauthorizedException</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./auth.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">LocalStrategy</span> <span class="keyword">extends</span> <span class="title class_ inherited__">PassportStrategy</span>(<span class="title class_">Strategy</span>) &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> authService: AuthService</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">validate</span>(<span class="attr">username</span>: <span class="built_in">string</span>, <span class="attr">password</span>: <span class="built_in">string</span>): <span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">authService</span>.<span class="title function_">validateUser</span>(username, password);</span><br><span class="line">        <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnauthorizedException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建jwt-strategy-ts，用于需要-token-校验"><a href="#创建jwt-strategy-ts，用于需要-token-校验" class="headerlink" title="创建jwt.strategy.ts，用于需要 token 校验"></a>创建<code>jwt.strategy.ts</code>，用于需要 token 校验</h2><ul><li>jwtFromRequest: 提供从 Request. 我们将使用在 API 请求的 Authorization 标头中提供不记名令牌的标准方法。此处描述了其他选项。</li><li>ignoreExpiration：为了明确起见，我们选择默认 false 设置，它将确保 JWT 未过期的责任委托给 Passport 模块。这意味着如果我们的路由提供了过期的 JWT，请求将被拒绝并 401 Unauthorized 发送响应。Passport 可以方便地自动为我们处理这个问题。</li><li>secretOrKey：我们正在使用权宜之计选项，即提供对称密钥来签署令牌。其他选项，例如 PEM 编码的公钥，可能更适合生产应用程序（请参阅此处了解更多信息）。无论如何，如前所述，不要公开揭露这个秘密。</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ExtractJwt</span>, <span class="title class_">Strategy</span> &#125; <span class="keyword">from</span> <span class="string">&quot;passport-jwt&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PassportStrategy</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/passport&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; jwtConstants &#125; <span class="keyword">from</span> <span class="string">&quot;./constants&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">JwtStrategy</span> <span class="keyword">extends</span> <span class="title class_ inherited__">PassportStrategy</span>(<span class="title class_">Strategy</span>) &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(&#123;</span><br><span class="line">            <span class="attr">jwtFromRequest</span>: <span class="title class_">ExtractJwt</span>.<span class="title function_">fromAuthHeaderAsBearerToken</span>(),</span><br><span class="line">            <span class="attr">ignoreExpiration</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">secretOrKey</span>: jwtConstants.<span class="property">secret</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解密token，获取token里的数据</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">validate</span>(<span class="params">payload: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> payload;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建身份守卫"><a href="#创建身份守卫" class="headerlink" title="创建身份守卫"></a>创建身份守卫</h2><ul><li>用于指定路由是 local 还是 jwt</li><li>jwt 需要 token 验证</li><li>local 无需验证</li></ul><h3 id="jwt-auth-guard-ts-，jwt-验证守卫"><a href="#jwt-auth-guard-ts-，jwt-验证守卫" class="headerlink" title="jwt-auth.guard.ts ，jwt 验证守卫"></a><code>jwt-auth.guard.ts</code> ，jwt 验证守卫</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthGuard</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/passport&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">JwtAuthGuard</span> <span class="keyword">extends</span> <span class="title class_ inherited__">AuthGuard</span>(<span class="string">&quot;jwt&quot;</span>) &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="local-auth-guard-ts，本地守卫"><a href="#local-auth-guard-ts，本地守卫" class="headerlink" title="local-auth.guard.ts，本地守卫"></a><code>local-auth.guard.ts</code>，本地守卫</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthGuard</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/passport&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">LocalAuthGuard</span> <span class="keyword">extends</span> <span class="title class_ inherited__">AuthGuard</span>(<span class="string">&quot;local&quot;</span>) &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-具体看auth-controller-ts"><a href="#使用-具体看auth-controller-ts" class="headerlink" title="使用,具体看auth.controller.ts"></a>使用,具体看<code>auth.controller.ts</code></h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AuthController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> authService: AuthService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不使用守卫文件，使用自带的守卫</span></span><br><span class="line">    <span class="meta">@UseGuards</span>(<span class="title class_">AuthGuard</span>(<span class="string">&quot;local&quot;</span>))</span><br><span class="line">    <span class="comment">// @UseGuards(LocalAuthGuard)</span></span><br><span class="line">    <span class="meta">@Post</span>(<span class="string">&quot;login&quot;</span>)</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params"><span class="meta">@Request</span>() req</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">authService</span>.<span class="title function_">login</span>(req.<span class="property">user</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用守卫文件</span></span><br><span class="line">    <span class="meta">@UseGuards</span>(<span class="title class_">JwtAuthGuard</span>)</span><br><span class="line">    <span class="meta">@Get</span>(<span class="string">&quot;profile&quot;</span>)</span><br><span class="line">    <span class="title function_">getProfile</span>(<span class="params"><span class="meta">@Query</span>() req</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> req;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建-service，auth-service-ts"><a href="#创建-service，auth-service-ts" class="headerlink" title="创建 service，auth.service.ts"></a>创建 service，<code>auth.service.ts</code></h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">JwtService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/jwt&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AuthService</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> jwtService: JwtService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">validateUser</span>(<span class="attr">username</span>: <span class="built_in">string</span>, <span class="attr">pass</span>: <span class="built_in">string</span>): <span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> user = &#123; <span class="attr">name</span>: <span class="string">&quot;name&quot;</span>, <span class="attr">password</span>: <span class="string">&quot;123&quot;</span> &#125;;</span><br><span class="line">        <span class="keyword">if</span> (user &amp;&amp; user.<span class="property">password</span> === pass) &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; password, ...result &#125; = user;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">user: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> payload = &#123; <span class="attr">username</span>: user.<span class="property">username</span>, <span class="attr">sub</span>: user.<span class="property">userId</span> &#125;;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">access_token</span>: <span class="variable language_">this</span>.<span class="property">jwtService</span>.<span class="title function_">sign</span>(payload),</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建-controller，auth-controller-ts"><a href="#创建-controller，auth-controller-ts" class="headerlink" title="创建 controller，auth.controller.ts"></a>创建 controller，<code>auth.controller.ts</code></h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    <span class="title class_">Controller</span>,</span><br><span class="line">    <span class="title class_">Get</span>,</span><br><span class="line">    <span class="title class_">Request</span>,</span><br><span class="line">    <span class="title class_">Post</span>,</span><br><span class="line">    <span class="title class_">UseGuards</span>,</span><br><span class="line">    <span class="title class_">Query</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthGuard</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/passport&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">JwtAuthGuard</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./jwt-auth.guard&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LocalAuthGuard</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./local-auth.guard&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./auth.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;auth&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AuthController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> authService: AuthService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不校验</span></span><br><span class="line">    <span class="meta">@UseGuards</span>(<span class="title class_">AuthGuard</span>(<span class="string">&quot;local&quot;</span>))</span><br><span class="line">    <span class="comment">// @UseGuards(LocalAuthGuard)</span></span><br><span class="line">    <span class="meta">@Post</span>(<span class="string">&quot;login&quot;</span>)</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params"><span class="meta">@Request</span>() req</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">authService</span>.<span class="title function_">login</span>(req.<span class="property">user</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//需token</span></span><br><span class="line">    <span class="meta">@UseGuards</span>(<span class="title class_">JwtAuthGuard</span>)</span><br><span class="line">    <span class="meta">@Get</span>(<span class="string">&quot;profile&quot;</span>)</span><br><span class="line">    <span class="title function_">getProfile</span>(<span class="params"><span class="meta">@Query</span>() req</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> req;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建-module，auth-module-ts"><a href="#创建-module，auth-module-ts" class="headerlink" title="创建 module，auth.module.ts"></a>创建 module，<code>auth.module.ts</code></h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PassportModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/passport&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">JwtModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/jwt&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./auth.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./auth.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; jwtConstants &#125; <span class="keyword">from</span> <span class="string">&quot;./constants&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">JwtStrategy</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./jwt.strategy&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LocalStrategy</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./local.strategy&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">imports</span>: [</span><br><span class="line">        <span class="title class_">PassportModule</span>,</span><br><span class="line">        <span class="comment">// 注册</span></span><br><span class="line">        <span class="title class_">JwtModule</span>.<span class="title function_">register</span>(&#123;</span><br><span class="line">            <span class="comment">// jwt密钥</span></span><br><span class="line">            <span class="attr">secret</span>: jwtConstants.<span class="property">secret</span>,</span><br><span class="line">            <span class="comment">// token过期时间</span></span><br><span class="line">            <span class="attr">signOptions</span>: &#123; <span class="attr">expiresIn</span>: <span class="string">&quot;360s&quot;</span> &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// 重要！！！</span></span><br><span class="line">    <span class="comment">// JwtStrategy, LocalStrategy 这两个2文件必须引入</span></span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">AuthService</span>, <span class="title class_">JwtStrategy</span>, <span class="title class_">LocalStrategy</span>],</span><br><span class="line">    <span class="attr">exports</span>: [<span class="title class_">AuthService</span>],</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">AuthController</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AuthModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="在app-module-ts，中引入"><a href="#在app-module-ts，中引入" class="headerlink" title="在app.module.ts，中引入"></a>在<code>app.module.ts</code>，中引入</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./modules/auth/auth.module&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">imports</span>: [<span class="title class_">AuthModule</span>],</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">AppController</span>],</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">AppService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs 模块</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E6%A8%A1%E5%9D%97/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>app.module.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">VideoModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./video/video.module&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UserModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./user/user.module&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// nest 中的模块装饰器</span></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="comment">// 引入子模块</span></span><br><span class="line">    <span class="attr">imports</span>: [<span class="title class_">VideoModule</span>, <span class="title class_">UserModule</span>],</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">AppController</span>],</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">AppService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs Providers依赖注入</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/Providers%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/Providers%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ul><li>所有使用 <code>@Injectable()</code> ，装饰的类，想使用都必须在<code>module.ts</code>，里注册。<ul><li><code>@Module(&#123;providers: [AuthService, JwtStrategy, LocalStrategy],&#125;)</code></li></ul></li><li>废话：提供者是 Nest 的一个基本概念。许多基本的 Nest 类可以被视为提供者——服务、存储库、工厂、助手等等。提供者的主要思想是它可以作为依赖注入；这意味着对象之间可以创建各种关系，并且“连接”对象实例的功能在很大程度上可以委托给 Nest 运行时系统。</li></ul><h2 id="创建一个提供者-provider-一般是-Services-文件"><a href="#创建一个提供者-provider-一般是-Services-文件" class="headerlink" title="创建一个提供者(provider) 一般是 Services 文件"></a>创建一个提供者(provider) 一般是 Services 文件</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// cats.service.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Cat</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./interfaces/cat.interface&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">CatsService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="attr">cats</span>: <span class="title class_">Cat</span>[] = [];</span><br><span class="line"></span><br><span class="line">    <span class="title function_">create</span>(<span class="params">cat: Cat</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cats</span>.<span class="title function_">push</span>(cat);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">findAll</span>(): <span class="title class_">Cat</span>[] &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">cats</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在模块中注册"><a href="#在模块中注册" class="headerlink" title="在模块中注册"></a>在模块中注册</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.module.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CatsController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./cats/cats.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CatsService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./cats/cats.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">CatsController</span>],</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">CatsService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="在-controller-里使用"><a href="#在-controller-里使用" class="headerlink" title="在 controller 里使用"></a>在 controller 里使用</h2><ul><li>创建一个 interface(非必须)</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// interfaces / cat.interface.ts;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">Cat</span> &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="attr">breed</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Controller</span>, <span class="title class_">Get</span>, <span class="title class_">Post</span>, <span class="title class_">Body</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateCatDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/create-cat.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CatsService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./cats.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Cat</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./interfaces/cat.interface&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;cats&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">CatsController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> catsService: CatsService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Post</span>()</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">create</span>(<span class="params"><span class="meta">@Body</span>() createCatDto: CreateCatDto</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">catsService</span>.<span class="title function_">create</span>(createCatDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Get</span>()</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">findAll</span>(): <span class="title class_">Promise</span>&lt;<span class="title class_">Cat</span>[]&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">catsService</span>.<span class="title function_">findAll</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注"><a href="#注" class="headerlink" title="注"></a>注</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> catsService: CatsService</span>) &#123;&#125;</span><br></pre></td></tr></table></figure><p><code>CatsService</code> 是通过类构造函数注入的。注意 <code>private</code> 语法的使用。这种简写方式允许我们 <code>catsService</code> 在同一位置立即声明和初始化成员。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs swagger</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/swagger/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/swagger/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="main-ts-配置-swagger"><a href="#main-ts-配置-swagger" class="headerlink" title="main.ts 配置 swagger"></a>main.ts 配置 swagger</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">NestFactory</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/core&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">SwaggerModule</span>, <span class="title class_">DocumentBuilder</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.module&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">bootstrap</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 创建nest应用 （引入根模块）</span></span><br><span class="line">    <span class="keyword">const</span> app = <span class="keyword">await</span> <span class="title class_">NestFactory</span>.<span class="title function_">create</span>(<span class="title class_">AppModule</span>);</span><br><span class="line">    <span class="comment">// 创建swagger接口文档及接口测试</span></span><br><span class="line">    <span class="keyword">const</span> options = <span class="keyword">new</span> <span class="title class_">DocumentBuilder</span>()</span><br><span class="line">        .<span class="title function_">setTitle</span>(<span class="string">&quot;接口文档标题&quot;</span>)</span><br><span class="line">        .<span class="title function_">setDescription</span>(<span class="string">&quot;描述&quot;</span>)</span><br><span class="line">        .<span class="title function_">setVersion</span>(<span class="string">&quot;1.0&quot;</span>)</span><br><span class="line">        .<span class="title function_">build</span>();</span><br><span class="line">    <span class="keyword">const</span> <span class="variable language_">document</span> = <span class="title class_">SwaggerModule</span>.<span class="title function_">createDocument</span>(app, options);</span><br><span class="line">    <span class="title class_">SwaggerModule</span>.<span class="title function_">setup</span>(<span class="string">&quot;docs&quot;</span>, app, <span class="variable language_">document</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> app.<span class="title function_">listen</span>(<span class="number">3000</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;http://localhost:3000&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">bootstrap</span>();</span><br></pre></td></tr></table></figure><h2 id="设置-swagger-元素"><a href="#设置-swagger-元素" class="headerlink" title="设置 swagger 元素"></a>设置 swagger 元素</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiTags</span>, <span class="title class_">ApiOperation</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"><span class="comment">// 设置 controller 标签 ApiTags</span></span><br><span class="line"><span class="meta">@ApiTags</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="comment">// 设置接口属性 ApiOperation</span></span><br><span class="line">    <span class="comment">// ApiOperation 传入一个对象</span></span><br><span class="line">    <span class="meta">@ApiOperation</span>(&#123;</span><br><span class="line">        <span class="attr">summary</span>: <span class="string">&quot;添加用户&quot;</span>, <span class="comment">// 描述</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="meta">@Post</span>()</span><br><span class="line">    <span class="title function_">create</span>(<span class="params"><span class="meta">@Body</span>() createUserDto: CreateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">create</span>(createUserDto);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="具体使用"><a href="#具体使用" class="headerlink" title="具体使用"></a>具体使用</h2><ul><li>controller</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    <span class="title class_">Controller</span>,</span><br><span class="line">    <span class="title class_">Get</span>,</span><br><span class="line">    <span class="title class_">Post</span>,</span><br><span class="line">    <span class="title class_">Body</span>,</span><br><span class="line">    <span class="title class_">Patch</span>,</span><br><span class="line">    <span class="title class_">Param</span>,</span><br><span class="line">    <span class="title class_">Delete</span>,</span><br><span class="line">    <span class="title class_">Query</span>,</span><br><span class="line">    <span class="title class_">Headers</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    <span class="title class_">ApiQuery</span>,</span><br><span class="line">    <span class="title class_">ApiTags</span>,</span><br><span class="line">    <span class="title class_">ApiOperation</span>,</span><br><span class="line">    <span class="title class_">ApiResponse</span>,</span><br><span class="line">    <span class="title class_">ApiBody</span>,</span><br><span class="line">    <span class="title class_">ApiParam</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UserService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./user.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/create-user.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UpdateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/update-user.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">User</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./entities/user.entity&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiTags</span>(<span class="string">&quot;User&quot;</span>)</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> userService: UserService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Get</span>()</span><br><span class="line">    <span class="meta">@ApiQuery</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;id&quot;</span>, <span class="attr">required</span>: <span class="literal">false</span>, <span class="attr">description</span>: <span class="string">&quot;用户id&quot;</span> &#125;)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(&#123; <span class="attr">summary</span>: <span class="string">&quot;根据Query查询&quot;</span> &#125;)</span><br><span class="line">    <span class="meta">@ApiResponse</span>(&#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="attr">description</span>: <span class="string">&quot;返回用户信息&quot;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">User</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="title function_">findByQuery</span>(<span class="params"><span class="meta">@Query</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span>, <span class="meta">@Headers</span>() &#123; authorization &#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">findByQuery</span>(+id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiBody</span>(&#123; <span class="attr">description</span>: <span class="string">&quot;填写创建内容&quot;</span> &#125;)</span><br><span class="line">    <span class="meta">@Post</span>()</span><br><span class="line">    <span class="title function_">create</span>(<span class="params"><span class="meta">@Body</span>() createUserDto: CreateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">create</span>(createUserDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(&#123; <span class="attr">summary</span>: <span class="string">&quot;查询所有用户&quot;</span> &#125;)</span><br><span class="line">    <span class="meta">@Get</span>(<span class="string">&quot;all&quot;</span>)</span><br><span class="line">    <span class="title function_">findAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">findAll</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 下面几个必须包含id的方法，可以不加 @ApiParam，因为swagger默认加上了</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// @ApiParam(&#123; name: &#x27;id&#x27; &#125;)</span></span><br><span class="line">    <span class="meta">@Get</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">findOne</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">findOne</span>(+id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @ApiParam(&#123; name: &#x27;id&#x27; &#125;)</span></span><br><span class="line">    <span class="meta">@ApiBody</span>(&#123; <span class="attr">description</span>: <span class="string">&quot;填写更新内容&quot;</span> &#125;)</span><br><span class="line">    <span class="meta">@Patch</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">update</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span>, <span class="meta">@Body</span>() updateUserDto: UpdateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">update</span>(+id, updateUserDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @ApiParam(&#123; name: &#x27;id&#x27; &#125;)</span></span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">remove</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">remove</span>(+id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>entity</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiProperty</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123; <span class="attr">example</span>: <span class="string">&quot;张三&quot;</span>, <span class="attr">description</span>: <span class="string">&quot;名字&quot;</span> &#125;)</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123; <span class="attr">example</span>: <span class="number">1</span>, <span class="attr">description</span>: <span class="string">&quot;年龄&quot;</span> &#125;)</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123;</span><br><span class="line">        <span class="attr">example</span>: <span class="string">&quot;品种&quot;</span>,</span><br><span class="line">        <span class="attr">description</span>: <span class="string">&quot;白人&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="attr">breed</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs typeorm基本使用</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/orm/typeorm%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/orm/typeorm%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// database.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; join &#125; <span class="keyword">from</span> <span class="string">&quot;path&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;mysql&quot;</span>,</span><br><span class="line">    <span class="attr">host</span>: <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">    <span class="attr">port</span>: <span class="number">3306</span>,</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&quot;youwei&quot;</span>,</span><br><span class="line">    <span class="attr">database</span>: <span class="string">&quot;nest&quot;</span>,</span><br><span class="line">    <span class="comment">// 实体，nestjs对象和数据库的映射关系</span></span><br><span class="line">    <span class="attr">entities</span>: [<span class="title function_">join</span>(__dirname, <span class="string">&quot;../&quot;</span>, <span class="string">&quot;**/**.entity&#123;.ts,.js&#125;&quot;</span>)],</span><br><span class="line">    <span class="comment">// synchronize可以让数据库根据实体类自动生成表及元数据（严禁在生产环境中使用,会破坏表结构）</span></span><br><span class="line">    <span class="attr">synchronize</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Column</span>, <span class="title class_">Entity</span>, <span class="title class_">PrimaryGeneratedColumn</span> &#125; <span class="keyword">from</span> <span class="string">&quot;typeorm&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认表名为class名称的小写，也可以通过设置@Entity(‘coffee’)来定义表名</span></span><br><span class="line"><span class="meta">@Entity</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;user-by-mysql&quot;</span> &#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserByMysql</span> &#123;</span><br><span class="line">    <span class="meta">@PrimaryGeneratedColumn</span>()</span><br><span class="line">    <span class="attr">id</span>: <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column</span>(&#123; <span class="attr">length</span>: <span class="number">20</span> &#125;)</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column</span>(<span class="string">&quot;varchar&quot;</span>)</span><br><span class="line">    <span class="attr">password</span>: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column</span>()</span><br><span class="line">    <span class="attr">status</span>: <span class="built_in">boolean</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><h3 id="错误-1"><a href="#错误-1" class="headerlink" title="错误 1"></a>错误 1</h3><p>如果有报下面的错误。导致这个错误的原因是，目前，最新的 mysql 模块并未完全支持 MySQL 8 的“caching_sha2_password”加密方式，而“caching_sha2_password”在 MySQL 8 中是默认的加密方式。因此，下面的方式命令是默认已经使用了“caching_sha2_password”加密方式，该账号、密码无法在 mysql 模块中使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client</span><br></pre></td></tr></table></figure><p>解决方法是从新修改用户 root 的密码，并指定 mysql 模块能够支持的加密方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><h3 id="错误-2"><a href="#错误-2" class="headerlink" title="错误 2"></a>错误 2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Nest can&#x27;t resolve dependencies of the TypeOrmCoreModule (TypeOrmModuleOptions, ?). Please make sure that the argument ModuleRef at index [1] is available in the TypeOrmCoreModule context.</span><br></pre></td></tr></table></figure><ul><li>把<code>@nestjs/typeorm</code>和<code>typeorm</code>，降级</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;@nestjs/typeorm&quot;: &quot;^7.0.0&quot;,</span><br><span class="line">&quot;typeorm&quot;: &quot;^0.2.24&quot;</span><br></pre></td></tr></table></figure><p><a href="https://docs.nestjs.com/techniques/database#database">看文档</a><br><a href="https://www.bilibili.com/video/BV1bQ4y1A77L?p=13&vd_source=1849c61e1da64155e8d0f1ff99761382">看视频</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typeorm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodejs常用工具库</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%BA%93/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="密码加密"><a href="#密码加密" class="headerlink" title="密码加密"></a>密码加密</h2><ol><li><p>bcrypt</p><ul><li><p>加密</p><ul><li><p>hash （异步）</p></li><li><p>hashSync （同步）第一个为加密的值（密码），第二个为加密的等级</p></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bcrypt = <span class="built_in">require</span>(<span class="string">&quot;bcrypt&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">UserSchema</span> = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">username</span>: &#123; </span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">unique</span>: <span class="literal">true</span>, <span class="comment">//限唯一值</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">password</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="title function_">set</span>(<span class="params">value</span>) &#123; <span class="comment">//在这里使用 bcrypt.hashSync 加密（散列）密码</span></span><br><span class="line">      <span class="keyword">return</span> bcrypt.<span class="title function_">hashSync</span>(value, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//加密后 $2b$04$ziX.qnWtqjnnwrYjTEG.tuYGmQXCgK8PjjFn3VjWJo/2pBpaqTye6</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = mongoose.<span class="title function_">model</span>(<span class="string">&quot;User&quot;</span>, <span class="title class_">UserSchema</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; <span class="title class_">User</span> &#125;;</span><br></pre></td></tr></table></figure><ul><li><p>​对比</p><ul><li>compare （异步）</li><li>compareSync（同步） 第一个为接口传入，第二个为数据库取出。返回<code>boolean</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/api/login&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, password &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123;</span><br><span class="line">    username,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">422</span>).<span class="title function_">send</span>(&#123; <span class="attr">msg</span>: <span class="string">&quot;用户名不存在&quot;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> isPasswordValid = bcrypt.<span class="title function_">compareSync</span>(password, user.<span class="property">password</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(isPasswordValid);<span class="comment">// true/false</span></span><br><span class="line">  res.<span class="title function_">send</span>(user);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="token"><a href="#token" class="headerlink" title="token"></a>token</h2><ol><li><p>jsonwebtoken</p><ul><li><p>jwt.sign({ id: String(user._id) }, SECRET,option)  第一个参数为id等可以查找对应用户的数据（对象）</p><p>第二个为<code>SECRET</code>一般放在.env等被gitignore忽略的文件中，第三个为配置项（过期时间等）：<code>&#123;expiresIn:3600&#125;</code>,第四个为回调函数</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&quot;jsonwebtoken&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SECRET</span> = <span class="string">&quot;secret&quot;</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/api/login&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, password &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="comment">//查询用户</span></span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123;</span><br><span class="line">    username,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//用户是否存在</span></span><br><span class="line">  <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">422</span>).<span class="title function_">send</span>(&#123; <span class="attr">msg</span>: <span class="string">&quot;用户名不存在&quot;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//校验密码</span></span><br><span class="line">  <span class="keyword">const</span> isPasswordValid = bcrypt.<span class="title function_">compareSync</span>(password, user.<span class="property">password</span>);</span><br><span class="line">  <span class="keyword">if</span> (!isPasswordValid) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">422</span>).<span class="title function_">send</span>(&#123; <span class="attr">msg</span>: <span class="string">&quot;密码无效&quot;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//生成token</span></span><br><span class="line">  <span class="keyword">const</span> token = jwt.<span class="title function_">sign</span>(&#123; <span class="attr">id</span>: <span class="title class_">String</span>(user.<span class="property">_id</span>) &#125;, <span class="variable constant_">SECRET</span>); <span class="comment">//eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyNGE2MmNmYjNmMDg4MmUyMmY1NmMyMiIsImlhdCI6MTY0OTA0OTM0OX0.O0poGl9KpakXAN9v0CDDiJXrEGqNpzRTYjppkn9Uvs8</span></span><br><span class="line">  </span><br><span class="line">    res.<span class="title function_">send</span>(&#123;</span><br><span class="line">    user,</span><br><span class="line">    token,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jwt.verify(token, SECRET) 第一个参数为前端传来的<code>token</code>，第二个为<code>SECRET</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&quot;jsonwebtoken&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SECRET</span> = <span class="string">&quot;secret&quot;</span>;</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/api/profile&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line"> <span class="keyword">let</span> authorization = req.<span class="property">headers</span>.<span class="property">authorization</span>;</span><br><span class="line"> <span class="keyword">const</span> token = <span class="title class_">String</span>(authorization).<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>)[<span class="number">1</span>];</span><br><span class="line"> <span class="comment">// const tokenVerify = jwt.verify(token, SECRET); //&#123; id: &#x27;624a62cfb3f0882e22f56c22&#x27;, iat: 1649049349 &#125;</span></span><br><span class="line"> <span class="keyword">const</span> &#123; id &#125; = jwt.<span class="title function_">verify</span>(token, <span class="variable constant_">SECRET</span>);</span><br><span class="line"> <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findById</span>(id);</span><br><span class="line"> res.<span class="title function_">send</span>(user);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>验证token是否过期并规定哪些路由不用验证，需要npm 引入 express-jwt</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> expressJwt = <span class="built_in">require</span>(<span class="string">&#x27;express-jwt&#x27;</span>)</span><br><span class="line"><span class="comment">// app.use(</span></span><br><span class="line"><span class="comment">//   expressJwt(&#123;</span></span><br><span class="line"><span class="comment">//     secret: &quot;mes_qdhd_mobile_xhykjyxgs&quot;,</span></span><br><span class="line"><span class="comment">//   &#125;).unless(&#123;</span></span><br><span class="line"><span class="comment">//     path: [&quot;/login&quot;], //除了这个地址，其他的URL都需要验证</span></span><br><span class="line"><span class="comment">//   &#125;)</span></span><br><span class="line"><span class="comment">// );</span></span><br></pre></td></tr></table></figure></li><li><p>passport &amp; passport-jwt</p><ol><li>具体使用看这个项目<code>https://gitee.com/youwei997/nodejs-element-wuhaiyang</code></li></ol></li></ol><h2 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h2><ol><li><p>cors</p></li><li><p>手动封装跨域中间件</p><ol><li>接口形式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置跨域访问</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>,<span class="keyword">function</span>(<span class="params">req,res,next</span>)&#123;</span><br><span class="line">    <span class="comment">//设置允许跨域的域名，*代表允许任意域名跨域</span></span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>,<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    <span class="comment">//允许的header类型</span></span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>,<span class="string">&quot;content-type&quot;</span>);</span><br><span class="line">    <span class="comment">//跨域允许的请求方式 </span></span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Access-Control-Allow-Methods&quot;</span>,<span class="string">&quot;DELETE,PUT,POST,GET,OPTIONS&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">method</span>.<span class="title function_">toLowerCase</span>() == <span class="string">&#x27;options&#x27;</span>)</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="number">200</span>);  <span class="comment">//让options尝试请求快速结束</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="title function_">next</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>全局中间件形式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义跨域中间件</span></span><br><span class="line"><span class="keyword">var</span> allowCors = <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, req.<span class="property">headers</span>.<span class="property">origin</span>);</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span>, <span class="string">&#x27;GET,PUT,POST,DELETE,OPTIONS&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class="string">&#x27;Content-Type&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span>,<span class="string">&#x27;true&#x27;</span>);</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">&#125;;</span><br><span class="line">app.<span class="title function_">use</span>(allowCors);<span class="comment">//使用跨域中间件</span></span><br></pre></td></tr></table></figure></li><li><p>cors 第三方中间件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>()); <span class="comment">//允许跨域</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务端启动&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><h2 id="参数解析"><a href="#参数解析" class="headerlink" title="参数解析"></a>参数解析</h2><ol><li><strong>内置</strong> <code>express.json &amp; express.urlencoded(&#123; extended: false &#125;)</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;)); <span class="comment">//x-www-form-urlencoded</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>()); <span class="comment">//使用ui框架，发送纯json时有用，或者postman body raw。使用postman x-www-form-urlencoded无效</span></span><br></pre></td></tr></table></figure><ol start="2"><li><strong>第三方</strong> body-parser</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&quot;body-parser&quot;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>());</span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nodejs原生获取参数</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E5%8E%9F%E7%94%9F%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E5%8E%9F%E7%94%9F%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//req.body</span></span><br><span class="line"><span class="comment">//包含了提交数据的键值对在请求的body中，默认是underfined,</span></span><br><span class="line">解析body不是nodejs默认提供的，你需要载入body-parser中间件才可以使用req.<span class="property">body</span>；</span><br><span class="line">此方法通常用来解析<span class="variable constant_">POST</span>请求中的数据</span><br><span class="line"></span><br><span class="line"><span class="comment">//原生获取参数</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line">app.<span class="title function_">createServer</span>(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">method</span>);</span><br><span class="line">  <span class="keyword">if</span>(req.<span class="property">method</span> === <span class="string">&#x27;POST&#x27;</span>)&#123;</span><br><span class="line">  <span class="comment">//数据格式</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;content-type&#x27;</span>,req.<span class="property">headers</span>[<span class="string">&#x27;content-type&#x27;</span>])</span><br><span class="line">      <span class="comment">//接收数据</span></span><br><span class="line">      <span class="keyword">let</span> postData = <span class="string">&#x27;&#x27;</span></span><br><span class="line">      req.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,<span class="function"><span class="params">chunk</span>=&gt;</span>&#123;</span><br><span class="line">          postData+=chunk.<span class="title function_">toString</span>()</span><br><span class="line">      &#125;)</span><br><span class="line">      req.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(postData)</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">3000</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//req.query</span></span><br><span class="line"><span class="comment">//包含在路由中每个查询字符串参数属性的对象。如果没有，默认为&#123;&#125;</span></span><br><span class="line"><span class="comment">// GET /search?q=tobi+ferret</span></span><br><span class="line">req.<span class="property">query</span>.<span class="property">q</span></span><br><span class="line"><span class="comment">// =&gt; &quot;tobi ferret&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// GET /shoes?order=desc&amp;shoe[color]=blue&amp;shoe[type]=converse</span></span><br><span class="line">req.<span class="property">query</span>.<span class="property">order</span></span><br><span class="line"><span class="comment">// =&gt; &quot;desc&quot;</span></span><br><span class="line">req.<span class="property">query</span>.<span class="property">shoe</span>.<span class="property">color</span></span><br><span class="line"><span class="comment">// =&gt; &quot;blue&quot;</span></span><br><span class="line">req.<span class="property">query</span>.<span class="property">shoe</span>.<span class="property">type</span></span><br><span class="line"><span class="comment">// =&gt; &quot;converse&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//req.params</span></span><br><span class="line"><span class="comment">//包含映射到指定的路线“参数”属性的对象。</span></span><br><span class="line">例如，如果你有route/user/：name，那么“name”属性可作为req.<span class="property">params</span>.<span class="property">name</span>。</span><br><span class="line">该对象默认为&#123;&#125;。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nodejs跨域</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E8%B7%A8%E5%9F%9F/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E8%B7%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="koa"><a href="#koa" class="headerlink" title="koa"></a>koa</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置跨域访问</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    ctx.<span class="title function_">set</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">    ctx.<span class="title function_">set</span>(<span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class="string">&#x27;Content-Type,Content-Length,Authorization,Accept,X-Requested-With&#x27;</span>)</span><br><span class="line">    ctx.<span class="title function_">set</span>(<span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span>, <span class="string">&#x27;PUT,POST,GET,DELETE,OPTIONS&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (ctx.<span class="property">method</span> == <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">        ctx.<span class="property">body</span> = <span class="number">200</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">next</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="express"><a href="#express" class="headerlink" title="express"></a>express</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置跨域访问</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&#x27;*&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="string">&quot;X-Requested-With&quot;</span>);</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Access-Control-Allow-Methods&quot;</span>,<span class="string">&quot;PUT,POST,GET,DELETE,OPTIONS&quot;</span>);</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;X-Powered-By&quot;</span>,<span class="string">&#x27; 3.2.1&#x27;</span>)</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>koa洋葱模型</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/koa%E6%B4%8B%E8%91%B1%E6%A8%A1%E5%9E%8B/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/koa%E6%B4%8B%E8%91%B1%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//洋葱模型</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Koa</span>=<span class="built_in">require</span>(<span class="string">&#x27;koa&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app=<span class="keyword">new</span> <span class="title class_">Koa</span>();</span><br><span class="line">app.<span class="title function_">use</span>(<span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第一1&#x27;</span>);</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">next</span>(); <span class="comment">// 调用下一个middleware</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第一2&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第二1&#x27;</span>);</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">next</span>(); <span class="comment">// 调用下一个middleware</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第二2&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第三1&#x27;</span>);</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第三2&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">输出顺序：</span><br><span class="line">第一<span class="number">1</span></span><br><span class="line">第二<span class="number">1</span></span><br><span class="line">第三<span class="number">1</span></span><br><span class="line">第三<span class="number">2</span></span><br><span class="line">第二<span class="number">2</span></span><br><span class="line">第一<span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> koa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongoose，findOne查询使用变量做字段名</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/mongoose%EF%BC%8CfindOne%E6%9F%A5%E8%AF%A2%E4%BD%BF%E7%94%A8%E5%8F%98%E9%87%8F%E5%81%9A%E5%AD%97%E6%AE%B5%E5%90%8D/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/mongoose%EF%BC%8CfindOne%E6%9F%A5%E8%AF%A2%E4%BD%BF%E7%94%A8%E5%8F%98%E9%87%8F%E5%81%9A%E5%AD%97%E6%AE%B5%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ol><li>使用新建对象<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">validateCustom</span> = <span class="keyword">async</span> (<span class="params">type, val</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> obj = &#123;&#125;;</span><br><span class="line">  obj[type] = val;</span><br><span class="line">  <span class="keyword">const</span> validate = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(obj);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 同上</span></span><br><span class="line">  <span class="comment">// const validate = await User.findOne(&#123; [type]: val &#125;);</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (validate) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>使用where<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">validateCustom</span> = <span class="keyword">async</span> (<span class="params">type, val</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> validate = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">find</span>().<span class="title function_">where</span>(type, val);</span><br><span class="line">  <span class="keyword">if</span> (validate.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongoose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云点播上传视频入门</title>
      <link href="/2023/11/11/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0/%E8%85%BE%E8%AE%AF%E4%BA%91%E7%82%B9%E6%92%AD%E4%B8%8A%E4%BC%A0%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8/"/>
      <url>/2023/11/11/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0/%E8%85%BE%E8%AE%AF%E4%BA%91%E7%82%B9%E6%92%AD%E4%B8%8A%E4%BC%A0%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>## 前端- 前端使用的`vue3`- 需要安装 `vod-js-sdk-v6`<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TcVod</span> <span class="keyword">from</span> <span class="string">&quot;vod-js-sdk-v6&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">inputChange</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> tcVod = <span class="keyword">new</span> <span class="title class_">TcVod</span>(&#123;</span><br><span class="line">    <span class="attr">getSignature</span>: getSignature, <span class="comment">// 获取上传签名的函数</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> vUploader = tcVod.<span class="title function_">upload</span>(&#123;</span><br><span class="line">    <span class="comment">// 腾讯云-初始化上传功能</span></span><br><span class="line">    <span class="attr">mediaFile</span>: e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>],</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  vUploader.<span class="title function_">done</span>().<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 上传完成回调</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取签名  这里的签名请求是由后端提供的，只需要拿到后端给的签名请求即可</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getVodSignature</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="string">&quot;http://localhost:3000/api/video/getvod&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">fetch</span>(url)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> data);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//必须以函数的形式返回  sdk参数限制</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getSignature</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">getVodSignature</span>();</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;inputChange&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="后端-返回签名"><a href="#后端-返回签名" class="headerlink" title="后端 返回签名"></a>后端 返回签名</h2><ul><li>使用<code>nodejs express</code>框架</li><li><code>querystring</code>和<code>crypto</code>是<code>node</code>自带的模块，无需安装<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> querystring = <span class="built_in">require</span>(<span class="string">&quot;querystring&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&quot;crypto&quot;</span>);</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">getvod</span> = <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 腾讯云生成签名文档 https://cloud.tencent.com/document/product/266/10638</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> querystring = <span class="built_in">require</span>(<span class="string">&quot;querystring&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line">    <span class="comment">// 确定 app 的云 API 密钥</span></span><br><span class="line">    <span class="keyword">const</span> secret_id = <span class="string">&quot;这里填secret_id&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> secret_key = <span class="string">&quot;这里填secret_key&quot;</span>;</span><br><span class="line">    <span class="comment">// 确定签名的当前时间和失效时间</span></span><br><span class="line">    <span class="keyword">const</span> current = <span class="built_in">parseInt</span>((<span class="keyword">new</span> <span class="title class_">Date</span>()).<span class="title function_">getTime</span>() / <span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">const</span> expired = current + <span class="number">86400</span>;  <span class="comment">// 签名有效期：1天</span></span><br><span class="line">    <span class="comment">// 向参数列表填入参数</span></span><br><span class="line">    <span class="keyword">const</span> arg_list = &#123;</span><br><span class="line">        <span class="attr">secretId</span>: secret_id,</span><br><span class="line">        <span class="attr">currentTimeStamp</span>: current,</span><br><span class="line">        <span class="attr">expireTime</span>: expired,</span><br><span class="line">        <span class="attr">random</span>: <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, <span class="number">32</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 计算签名</span></span><br><span class="line">    <span class="keyword">const</span> orignal = querystring.<span class="title function_">stringify</span>(arg_list);</span><br><span class="line">    <span class="keyword">const</span> orignal_buffer = <span class="keyword">new</span> <span class="title class_">Buffer</span>(orignal, <span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> hmac = crypto.<span class="title function_">createHmac</span>(<span class="string">&quot;sha1&quot;</span>, secret_key);</span><br><span class="line">    <span class="keyword">const</span> hmac_buffer = hmac.<span class="title function_">update</span>(orignal_buffer).<span class="title function_">digest</span>();</span><br><span class="line">    <span class="keyword">const</span> signature = <span class="title class_">Buffer</span>.<span class="title function_">concat</span>([hmac_buffer, orignal_buffer]).<span class="title function_">toString</span>(<span class="string">&quot;base64&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(signature);</span><br><span class="line">    res.<span class="title function_">json</span>(signature)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="点击上传"><a href="#点击上传" class="headerlink" title="点击上传"></a>点击上传</h2><ul><li>没有报错就是上传成功</li><li>在<a href="https://console.cloud.tencent.com/vod/media">腾讯云点播控制台查看上传的视频</a><br><img src="https://img-blog.csdnimg.cn/2d9056e36798484a89d26563e23c2f9a.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> 第三方平台 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>nodejs入门</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E5%85%A5%E9%97%A8/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>web 服务 如何处理一个请求</p></blockquote><h2 id="url–-网络–-dns-解析–-目标服务器"><a href="#url–-网络–-dns-解析–-目标服务器" class="headerlink" title="url–&gt;网络–&gt;dns 解析–&gt;目标服务器"></a>url–&gt;网络–&gt;dns 解析–&gt;目标服务器</h2><ol><li>如何响应这个请求 –&gt; 路由&#x2F;&#x2F;规则</li></ol><h2 id="Express"><a href="#Express" class="headerlink" title="Express"></a>Express</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);  </span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();  </span><br><span class="line"><span class="comment">//app --&gt; application --&gt; web服务的实例  </span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;  </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务器启动成功&quot;</span>);  </span><br><span class="line">&#125;);  </span><br></pre></td></tr></table></figure><h2 id="请求的方法来区分"><a href="#请求的方法来区分" class="headerlink" title="请求的方法来区分"></a>请求的方法来区分</h2><ol><li>get  </li><li>post  </li><li>put  </li><li>delete  </li><li>…</li></ol><h2 id="通过-uri-–-路径"><a href="#通过-uri-–-路径" class="headerlink" title="通过 uri –&gt; 路径"></a>通过 uri –&gt; 路径</h2><p><code>/user/getList</code>  </p><h3 id="需要定义一个-api-路由，需要满足客户端，无论什么请求方式，请求方法或-uri-都可以得到响应"><a href="#需要定义一个-api-路由，需要满足客户端，无论什么请求方式，请求方法或-uri-都可以得到响应" class="headerlink" title="需要定义一个 api&#x2F;路由，需要满足客户端，无论什么请求方式，请求方法或 uri 都可以得到响应"></a>需要定义一个 api&#x2F;路由，需要满足客户端，无论什么请求方式，请求方法或 uri 都可以得到响应</h3><ol><li>使用 app.all</li></ol><ul><li>任何请求方法都响应</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/demo&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;  </span><br><span class="line">  res.<span class="title function_">json</span>(&#123;  </span><br><span class="line">    <span class="attr">msg</span>: <span class="string">&quot;任何请求方法都响应&quot;</span>,  </span><br><span class="line">    <span class="attr">method</span>: req.<span class="property">method</span>,  </span><br><span class="line">  &#125;);  </span><br><span class="line">&#125;);  </span><br></pre></td></tr></table></figure><ul><li>任何请求方法及任何 uri 都响应</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用通配符  </span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;  </span><br><span class="line">  res.<span class="title function_">json</span>(&#123;    <span class="attr">msg</span>: <span class="string">&quot;任何请求方法及任何uri都响应&quot;</span>,  </span><br><span class="line">    <span class="attr">method</span>: req.<span class="property">method</span>,    <span class="attr">uri</span>: req.<span class="property">path</span>,  &#125;);&#125;);  </span><br></pre></td></tr></table></figure><ol start="2"><li>使用中间件，无论客户端使用任何 uri，服务端都可以响应 （日志）</li></ol><ul><li>使用中间件拦截请求–任何请求方法都响应</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/middleware&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;  </span><br><span class="line">  res.<span class="title function_">json</span>(&#123;  </span><br><span class="line">    <span class="attr">msg</span>: <span class="string">&quot;使用中间件拦截请求--任何请求方法都响应&quot;</span>,  </span><br><span class="line">    <span class="attr">method</span>: req.<span class="property">method</span>,  </span><br><span class="line">    <span class="attr">path</span>: req.<span class="property">path</span>,  </span><br><span class="line">  &#125;);  </span><br><span class="line">&#125;);  </span><br></pre></td></tr></table></figure><ul><li>使用中间件拦截请求–任何请求方法及任何 uri 都响应</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;  </span><br><span class="line">  res.<span class="title function_">json</span>(&#123;  </span><br><span class="line">    <span class="attr">msg</span>: <span class="string">&quot;使用中间件拦截请求--任何请求方法及任何uri都响应&quot;</span>,  </span><br><span class="line">    <span class="attr">method</span>: req.<span class="property">method</span>,  </span><br><span class="line">    <span class="attr">path</span>: req.<span class="property">path</span>,  </span><br><span class="line">  &#125;);  </span><br><span class="line">&#125;);  </span><br></pre></td></tr></table></figure><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><h3 id="路由拆分"><a href="#路由拆分" class="headerlink" title="路由拆分"></a>路由拆分</h3><ol><li>user  </li><li>login  </li><li>register</li></ol><h3 id="express-Router"><a href="#express-Router" class="headerlink" title="express.Router"></a>express.Router</h3><ol><li><p>创建 routes 目录，存放路由文件  </p><ul><li><p>路由文件 如<strong>user</strong>  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);   </span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();   </span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/user&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;     </span><br><span class="line">    res.<span class="title function_">json</span>(&#123;       </span><br><span class="line">        <span class="attr">id</span>: <span class="number">123</span>,       </span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,  </span><br><span class="line">&#125;);   </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>app.js 使用  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);   </span><br><span class="line"><span class="keyword">const</span> userRouter = <span class="built_in">require</span>(<span class="string">&quot;./routes/user&quot;</span>);   </span><br><span class="line">app.<span class="title function_">use</span>(userRouter);  </span><br><span class="line"><span class="comment">//路由前缀命名空间  </span></span><br><span class="line"><span class="comment">// app.use(&#x27;/&#x27;,userRouter);  </span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;     </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务器启动成功&quot;</span>);  </span><br><span class="line">&#125;);  </span><br></pre></td></tr></table></figure></li></ol><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><h3 id="是一个函数"><a href="#是一个函数" class="headerlink" title="是一个函数"></a>是一个函数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// err, req, res, next--&gt;function  </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">demo_middleware</span>(<span class="params">err, req, res, next</span>) &#123;  </span><br><span class="line">  <span class="comment">// 1. 异常处理  </span></span><br><span class="line">  <span class="comment">// 2. 处理业务功能，然后转交控制权--next  </span></span><br><span class="line">  <span class="comment">// 3. 响应请求--结束响应--&gt;当作路由的处理函数  </span></span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><ol><li><p>app 级别  </p><ul><li>app 注册时，在最上层  </li><li>app.use(middleware) app 级别中间件，处理任何请求</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//下面两个几乎相等  </span><br><span class="line">// app.all(&quot;\*&quot;, valid_name_middleware);  </span><br><span class="line">app.use(valid_name_middleware);   </span><br></pre></td></tr></table></figure><ul><li>express 内置中间件  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//express.static() 第一个参数为和 package.json 同级的一个目录。第二个为配置参数  </span></span><br><span class="line"><span class="comment">//浏览器输入 localhost:3000/index.html 会显示 static 目录下 index.html 页面  </span></span><br><span class="line"><span class="comment">//在配置参数配置 extensions: [&quot;html&quot;, &quot;htm&quot;], 就可以不写后面的,html。否则会去匹配路由  </span></span><br><span class="line">app.<span class="title function_">use</span>(  </span><br><span class="line">  express.<span class="title function_">static</span>(<span class="string">&quot;static&quot;</span>, &#123;       </span><br><span class="line">      <span class="comment">// extensions: [&quot;html&quot;, &quot;htm&quot;],     </span></span><br><span class="line">  &#125;)   </span><br><span class="line">);  </span><br></pre></td></tr></table></figure></li></ul></li><li><p>router 级别  </p><ul><li><p>在 app 使用  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/user&quot;</span>, userRouter);  </span><br></pre></td></tr></table></figure></li><li><p>路由中间件  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);   </span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>(); <span class="comment">//路由对象，类似子app  </span></span><br><span class="line">router.<span class="title function_">use</span>(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;     </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;user 路由中间件&quot;</span>);  </span><br><span class="line"><span class="title function_">next</span>();   </span><br><span class="line">&#125;);   </span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/demo&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;     </span><br><span class="line">    res.<span class="title function_">json</span>(&#123;       </span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;user 路由&quot;</span>,  </span><br><span class="line">&#125;);   </span><br><span class="line">&#125;);   </span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;  </span><br></pre></td></tr></table></figure></li></ul></li><li><p>异常处理  </p><ul><li><p>app 级别异常处理  </p></li><li><p>路由级别异常处理，每个路由使用不同的异常处理</p></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack.config.js基本使用</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/webpack/webapck.config.js%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/webpack/webapck.config.js%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&quot;html-webpack-plugin&quot;</span>);</span><br><span class="line"><span class="comment">// const &#123; CleanWebpackPlugin &#125; = require(&quot;clean-webpack-plugin&quot;);</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">mode</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;development&quot;</span> ? <span class="string">&quot;development&quot;</span> : <span class="string">&quot;production&quot;</span>,</span><br><span class="line">  <span class="comment">// 入口文件</span></span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&quot;./src/index.ts&quot;</span>,</span><br><span class="line">  <span class="comment">// 输出到某个文件</span></span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&quot;main.js&quot;</span>,</span><br><span class="line">    <span class="attr">clean</span>: <span class="literal">true</span>, <span class="comment">// 输出之前清理文件，开启这个就可以不用 clean-webpack-plugin</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="comment">// 自动解析文件拓展。引入js文件时，无需再加上文件后缀</span></span><br><span class="line">    <span class="attr">extensions</span>: [<span class="string">&quot;.js&quot;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="comment">// 匹配文件名，使用loader</span></span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.tsx?$/</span>,</span><br><span class="line">        <span class="attr">use</span>: <span class="string">&quot;ts-loader&quot;</span>,</span><br><span class="line">        <span class="comment">// 排除某些文件夹下对应的文件</span></span><br><span class="line">        <span class="attr">exclude</span>: <span class="regexp">/node_module/</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 开发环境启用source-map，用于定位文件代码</span></span><br><span class="line">  <span class="attr">devtool</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;development&quot;</span> ? <span class="string">&quot;inline-source-map&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="comment">// 基于哪个目录运行代码</span></span><br><span class="line">    <span class="comment">// contentBase: &quot;./dist&quot;,</span></span><br><span class="line">    <span class="comment">// 启用压缩</span></span><br><span class="line">    <span class="attr">compress</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">// host</span></span><br><span class="line">    <span class="attr">host</span>: <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">    <span class="comment">//端口</span></span><br><span class="line">    <span class="attr">port</span>: <span class="number">8089</span>,</span><br><span class="line">    <span class="comment">// 监测html文件</span></span><br><span class="line">    <span class="attr">watchFiles</span>: [<span class="string">&quot;./src/index.html&quot;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// new CleanWebpackPlugin(&#123; cleanOnceBeforeBuildPatterns: [&quot;./dist&quot;] &#125;),</span></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123; <span class="attr">template</span>: <span class="string">&quot;./src/index.html&quot;</span> &#125;),</span><br><span class="line">  ],</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 控制台显示哪些信息</span></span><br><span class="line">  <span class="attr">stats</span>: <span class="string">&quot;errors-only&quot;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;typescript-lison&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cross-env NODE_ENV=development webpack-dev-server --config ./build/webpack.config.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cross-env NODE_ENV=production webpack --config ./build/webpack.config.js&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;cross-env&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eslint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.25.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ts-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^9.4.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;typescript&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.8.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.74.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.10.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-dev-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.11.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;clean-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;html-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.5.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hook基础用法</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/hook%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/hook%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="鼠标追踪"><a href="#鼠标追踪" class="headerlink" title="鼠标追踪"></a>鼠标追踪</h2><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// mouse.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref, onMounted, onUnmounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 按照惯例，组合式函数名以“use”开头</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">useMouse</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 被组合式函数封装和管理的状态</span></span><br><span class="line">  <span class="keyword">const</span> x = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line">  <span class="keyword">const</span> y = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 组合式函数可以随时更改其状态。</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">update</span>(<span class="params">event</span>) &#123;</span><br><span class="line">    x.<span class="property">value</span> = event.<span class="property">pageX</span></span><br><span class="line">    y.<span class="property">value</span> = event.<span class="property">pageY</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 一个组合式函数也可以挂靠在所属组件的生命周期上</span></span><br><span class="line">  <span class="comment">// 来启动和卸载副作用</span></span><br><span class="line">  <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, update))</span><br><span class="line">  <span class="title function_">onUnmounted</span>(<span class="function">() =&gt;</span> <span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, update))</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通过返回值暴露所管理的状态</span></span><br><span class="line">  <span class="keyword">return</span> &#123; x, y &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="vue文件使用"><a href="#vue文件使用" class="headerlink" title="vue文件使用"></a>vue文件使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; useMouse &#125; <span class="keyword">from</span> <span class="string">&#x27;./mouse.js&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> &#123; x, y &#125; = <span class="title function_">useMouse</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span>Mouse position is at: &#123;&#123; x &#125;&#125;, &#123;&#123; y &#125;&#125;<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义指令</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="函数形式"><a href="#函数形式" class="headerlink" title="函数形式"></a>函数形式</h2><ol><li>指令函数触发时机：<ol><li>指令与元素成功绑定时（一开始）</li><li>指令所在的模板被重新解析时（绑定的值变化时）</li></ol></li></ol><h2 id="全局指令"><a href="#全局指令" class="headerlink" title="全局指令"></a>全局指令</h2><ul><li>使用：<code>v-has:键=&quot;&#39;值&#39;&quot;</code> -&gt; <code>v-has:add=&quot;&#39;user-create&#39;&quot;</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义指令</span></span><br><span class="line">app.<span class="title function_">directive</span>(<span class="string">&quot;has&quot;</span>, &#123;</span><br><span class="line">    <span class="comment">// 第一个是dom元素，第二个是包含指令键值的对象。arg是键（参数）类似v-on:click=&quot;function&quot; 的click，value是值 类似v-on:click=&quot;function&quot; 的function</span></span><br><span class="line">    <span class="comment">// v-has:键=&quot;&#x27;值&#x27;&quot;。 值如果传字符串必须再包一层单引号，否则就是一个变量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// beforeMount。如果是 beforeMount 就无法操作dom（增删改），因为dom还在内存中，还没渲染到页面上</span></span><br><span class="line">    <span class="attr">mounted</span>: <span class="keyword">function</span> (<span class="params">el, binding</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(el, binding);</span><br><span class="line">        <span class="comment">// 获取按钮权限</span></span><br><span class="line">        <span class="keyword">const</span> actionList = storage.<span class="title function_">getItem</span>(<span class="string">&quot;actionList&quot;</span>);</span><br><span class="line">        <span class="keyword">const</span> value = binding.<span class="property">value</span>;</span><br><span class="line">        <span class="comment">// 查找权限列表中是否有对应的权限标识</span></span><br><span class="line">        <span class="keyword">const</span> hasPermission = actionList.<span class="title function_">includes</span>(value);</span><br><span class="line">        <span class="keyword">if</span> (!hasPermission) &#123;</span><br><span class="line">            <span class="comment">// 隐藏按钮</span></span><br><span class="line">            el.<span class="property">style</span> = <span class="string">&quot;display:none&quot;</span>;</span><br><span class="line">            <span class="comment">// 删除按钮dom</span></span><br><span class="line">            el.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(el);</span><br><span class="line">            <span class="comment">// setTimeout(() =&gt; el.parentNode.removeChild(el), 0) // 使用beforeMount时 ，使用宏任务形式，不是很了解，以后再看看</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="组件指令"><a href="#组件指令" class="headerlink" title="组件指令"></a>组件指令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;input v-focus /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">    const directives = &#123;</span><br><span class="line">        focus:&#123;</span><br><span class="line">            mounted(el)&#123;</span><br><span class="line">                el.focus();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    export default &#123;</span><br><span class="line">        directives</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="全局指令-1"><a href="#全局指令-1" class="headerlink" title="全局指令"></a>全局指令</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里等于下面的</span></span><br><span class="line"><span class="comment">// app.directive(&#x27;focus&#x27;,(el,binding)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//  el.focus();</span></span><br><span class="line"><span class="comment">//&#125;)</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">directive</span>(<span class="string">&#x27;focus,&#x27;</span>&#123;</span><br><span class="line">    <span class="title function_">mounted</span>(<span class="params">el,binding</span>)&#123;</span><br><span class="line">    el.<span class="title function_">focus</span>();</span><br><span class="line">&#125;,</span><br><span class="line">    <span class="title function_">updated</span>(<span class="params">el,binding</span>)&#123;</span><br><span class="line">    el.<span class="title function_">focus</span>();</span><br><span class="line">&#125;</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><h2 id="指令传值（value）"><a href="#指令传值（value）" class="headerlink" title="指令传值（value）"></a>指令传值（value）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;input v-top=&quot;100&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">    const directives = &#123;</span><br><span class="line">        top:&#123;</span><br><span class="line">            // 第一个参数为dom，第二个为参数</span><br><span class="line">            mounted(el,binding)&#123;</span><br><span class="line">               el.style.top = (binding.value + &#x27;px&#x27;)</span><br><span class="line">            &#125;,</span><br><span class="line">            updated(el,binding)&#123;</span><br><span class="line">               el.style.top = (binding.value + &#x27;px&#x27;)</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    export default &#123;</span><br><span class="line">        directives</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="指令参数（arg）"><a href="#指令参数（arg）" class="headerlink" title="指令参数（arg）"></a>指令参数（arg）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;input v-pos:top=&quot;100&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">    const directives = &#123;</span><br><span class="line">        top:&#123;</span><br><span class="line">            // 第一个参数为dom，第二个为参数</span><br><span class="line">            // binding： value 值，arg 参数</span><br><span class="line">            mounted(el,binding)&#123;</span><br><span class="line">               el.style[binding.arg] = (binding.value + &#x27;px&#x27;)</span><br><span class="line">            &#125;,</span><br><span class="line">            updated(el,binding)&#123;</span><br><span class="line">               el.style[binding.arg] = (binding.value + &#x27;px&#x27;)</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    export default &#123;</span><br><span class="line">        directives</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异步组件 Suspense</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<ol><li>不使用异步组件，页面展示：父组件会等子组件加载完成一起显示。</li><li>使用异步组件，页面展示：页面会先加载父组件，再加载子组件。</li><li>父组件使用 <code>defineAsyncComponent</code> 导入组件时，且子组件<code>setup</code> 不返回<code>promise</code>实例时，父组件使用子组件时，不需要使用<code>Suspense</code>标签包裹，</li><li>子组件<code>setup</code>返回promise实例时，父组件需要使用<code>Suspense</code>标签包裹，子组件展示会等待<code>promise</code>响应结束时再显示</li></ol><h2 id="父组件"><a href="#父组件" class="headerlink" title="父组件"></a>父组件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    &lt;Test msg=&quot;666&quot; @onSayHello=&quot;onSayHello&quot;&gt;&lt;/Test&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Suspense</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Test</span>&gt;</span><span class="tag">&lt;/<span class="name">Test</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:fallback</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>loading...<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Suspense</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// import Test from &#x27;./components/test.vue&#x27; //普通组件</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;defineAsyncComponent&#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title class_">Test</span> = <span class="title function_">defineAsyncComponent</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;./components/test.vue&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">msg</span>: <span class="string">&#x27;hello vue3&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">onSayHello</span>(<span class="params">info</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello&#x27;</span>, info)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Test</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="子组件"><a href="#子组件" class="headerlink" title="子组件"></a>子组件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">resolve</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">msg</span>: <span class="string">&quot;suspense组件&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">      &#125;, <span class="number">3000</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite.config.ts详细配置</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/vite/vite.config.ts%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/vite/vite.config.ts%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="base打包"><a href="#base打包" class="headerlink" title="base打包"></a>base打包</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">base</span>: <span class="string">&quot;./&quot;</span>,</span><br><span class="line">  <span class="comment">// 配置相对路径，打包后的文件，会是相对路径（生产环境），以免部署到服务器。找不到文件时，会报错。</span></span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="别名设置"><a href="#别名设置" class="headerlink" title="别名设置"></a>别名设置</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; resolve &#125; <span class="keyword">from</span> <span class="string">&quot;path&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">base</span>: <span class="string">&quot;./&quot;</span>,</span><br><span class="line">  <span class="comment">// 配置相对路径，打包后的文件，会是相对路径（生产环境），以免部署到服务器。找不到文件时，会报错。</span></span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="comment">// __dirname 有报什么找不到。</span></span><br><span class="line">      <span class="comment">// 安装 npm install --dev @types/node</span></span><br><span class="line">      <span class="attr">testCom</span>: <span class="title function_">resolve</span>(__dirname, <span class="string">&quot;src/components/test/&quot;</span>), <span class="comment">//组件别名</span></span><br><span class="line">      <span class="string">&quot;/testImg&quot;</span>: <span class="string">&quot;/src/assets/&quot;</span>, <span class="comment">//静态文件别名</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">app.vue---------------</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import HelloWorld from &quot;./components/HelloWorld.vue&quot;;</span><br><span class="line">import testCom from &quot;testCom/index.vue&quot;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;testCom /&gt;</span><br><span class="line">  &lt;HelloWorld msg=&quot;HelloWorld&quot; /&gt;</span><br><span class="line">  &lt;img src=&quot;/testImg/logo.png&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="清除build项目的console-log"><a href="#清除build项目的console-log" class="headerlink" title="清除build项目的console.log"></a>清除build项目的console.log</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; resolve &#125; <span class="keyword">from</span> <span class="string">&quot;path&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">base</span>: <span class="string">&quot;./&quot;</span>,</span><br><span class="line">  <span class="comment">// 配置相对路径，打包后的文件，会是相对路径（生产环境），以免部署到服务器。找不到文件时，会报错。</span></span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="comment">// __dirname 有报什么找不到。</span></span><br><span class="line">      <span class="comment">// 安装 npm install --dev @types/node</span></span><br><span class="line">      <span class="attr">testCom</span>: <span class="title function_">resolve</span>(__dirname, <span class="string">&quot;src/components/test/&quot;</span>), <span class="comment">//组件别名</span></span><br><span class="line">      <span class="string">&quot;/testImg&quot;</span>: <span class="string">&quot;/src/assets/&quot;</span>, <span class="comment">//静态文件别名</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">build</span>: &#123;</span><br><span class="line">    <span class="attr">minify</span>: <span class="string">&quot;terser&quot;</span>,</span><br><span class="line">    <span class="comment">// 清除build项目的console.log</span></span><br><span class="line">    <span class="attr">terserOptions</span>: &#123;</span><br><span class="line">      <span class="attr">compress</span>: &#123;</span><br><span class="line">        <span class="attr">drop_console</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">drop_debugger</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="rollup打包-指定dist里输出的文件夹"><a href="#rollup打包-指定dist里输出的文件夹" class="headerlink" title="rollup打包 指定dist里输出的文件夹"></a>rollup打包 指定dist里输出的文件夹</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; resolve &#125; <span class="keyword">from</span> <span class="string">&quot;path&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">base</span>: <span class="string">&quot;./&quot;</span>,</span><br><span class="line">  <span class="comment">// 配置相对路径，打包后的文件，会是相对路径（生产环境），以免部署到服务器。找不到文件时，会报错。</span></span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="comment">// __dirname 有报什么找不到。</span></span><br><span class="line">      <span class="comment">// 安装 npm install --dev @types/node</span></span><br><span class="line">      <span class="attr">testCom</span>: <span class="title function_">resolve</span>(__dirname, <span class="string">&quot;src/components/test/&quot;</span>), <span class="comment">//组件别名</span></span><br><span class="line">      <span class="string">&quot;/testImg&quot;</span>: <span class="string">&quot;/src/assets/&quot;</span>, <span class="comment">//静态文件别名</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">build</span>: &#123;</span><br><span class="line">    <span class="attr">minify</span>: <span class="string">&quot;terser&quot;</span>,</span><br><span class="line">    <span class="comment">// 清除build项目的console.log</span></span><br><span class="line">    <span class="attr">terserOptions</span>: &#123;</span><br><span class="line">      <span class="attr">compress</span>: &#123;</span><br><span class="line">        <span class="attr">drop_console</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">drop_debugger</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">rollupOptions</span>: &#123;</span><br><span class="line">      <span class="comment">//rollup打包 指定dist里输出的文件夹</span></span><br><span class="line">      <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">chunkFileNames</span>: <span class="string">&quot;js/[name]-[hash].js&quot;</span>,</span><br><span class="line">        <span class="attr">entryFileNames</span>: <span class="string">&quot;js/[name]-[hash].js&quot;</span>,</span><br><span class="line">        <span class="attr">assetFileNames</span>: <span class="string">&quot;[ext]/[name]-[hash].[ext]&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="element-plus"><a href="#element-plus" class="headerlink" title="element-plus"></a>element-plus</h2><h3 id="element-plus完整引入"><a href="#element-plus完整引入" class="headerlink" title="element-plus完整引入"></a>element-plus完整引入</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus --save</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-plus/dist/index.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>)</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="element-plus-按需引入"><a href="#element-plus-按需引入" class="headerlink" title="element-plus 按需引入"></a>element-plus 按需引入</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus --save</span><br><span class="line">npm install -D unplugin-vue-components unplugin-auto-<span class="keyword">import</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.ts</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AutoImport</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-auto-import/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElementPlusResolver</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/resolvers&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AutoImport</span> = <span class="built_in">require</span>(<span class="string">&#x27;unplugin-auto-import/webpack&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Components</span> = <span class="built_in">require</span>(<span class="string">&#x27;unplugin-vue-components/webpack&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">ElementPlusResolver</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;unplugin-vue-components/resolvers&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vite-mock"><a href="#vite-mock" class="headerlink" title="vite-mock"></a>vite-mock</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i vite-plugin-mock mockjs -D</span><br><span class="line"><span class="comment">//vite-plugin-mock 网站 https://github.com/vbenjs/vite-plugin-mock</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.ts</span></span><br><span class="line"><span class="comment">//mockjs</span></span><br><span class="line"><span class="keyword">import</span> &#123; viteMockServe &#125; <span class="keyword">from</span> <span class="string">&quot;vite-plugin-mock&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">viteMockServe</span>(&#123;</span><br><span class="line">      <span class="attr">mockPath</span>: <span class="string">&quot;mock&quot;</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="proxy开发代理"><a href="#proxy开发代理" class="headerlink" title="proxy开发代理"></a>proxy开发代理</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="comment">// alias: [</span></span><br><span class="line">    <span class="comment">//     &#123; find: &#x27;@&#x27;, replacement: resolve(__dirname, &#x27;src&#x27;) &#125;</span></span><br><span class="line">    <span class="comment">// ],</span></span><br><span class="line">    <span class="attr">alias</span>:&#123;</span><br><span class="line">      <span class="string">&quot;@&quot;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./src&quot;</span>),</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">   <span class="attr">server</span>: &#123;</span><br><span class="line">     <span class="attr">open</span>: <span class="literal">false</span>,</span><br><span class="line">     <span class="attr">host</span>:<span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">     <span class="attr">port</span>:<span class="number">8080</span>,</span><br><span class="line">     <span class="attr">proxy</span>:&#123;</span><br><span class="line">       <span class="string">&quot;/api&quot;</span>:&#123;</span><br><span class="line">         <span class="attr">target</span>:<span class="string">&quot;http://localhost:3000&quot;</span></span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="env环境变量"><a href="#env环境变量" class="headerlink" title="env环境变量"></a>env环境变量</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//package.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite-learn&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite --mode dev&quot;</span><span class="punctuation">,</span> <span class="comment">//--mode 指定谁，就加载哪个env文件</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue-tsc --noEmit &amp;&amp; vite build&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;preview&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite preview&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//.env.dev</span><br><span class="line">VITE_BASE_API = http://dev.com</span><br><span class="line"></span><br><span class="line">//.env.prod</span><br><span class="line">VITE_BASE_API = http://prod.com</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_BASE_API</span>);</span><br></pre></td></tr></table></figure><h2 id="gzip压缩"><a href="#gzip压缩" class="headerlink" title="gzip压缩"></a>gzip压缩</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vite-plugin-compression -D</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.ts</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//gzip</span></span><br><span class="line"><span class="keyword">import</span> viteCompression <span class="keyword">from</span> <span class="string">&quot;vite-plugin-compression&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">viteCompression</span>(),</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vite-plugin-imagemin -D</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> viteImagemin <span class="keyword">from</span> <span class="string">&#x27;vite-plugin-imagemin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">      <span class="title function_">viteImagemin</span>(&#123;</span><br><span class="line">        <span class="attr">gifsicle</span>: &#123;</span><br><span class="line">          <span class="attr">optimizationLevel</span>: <span class="number">7</span>,</span><br><span class="line">          <span class="attr">interlaced</span>: <span class="literal">false</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">optipng</span>: &#123;</span><br><span class="line">          <span class="attr">optimizationLevel</span>: <span class="number">7</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">mozjpeg</span>: &#123;</span><br><span class="line">          <span class="attr">quality</span>: <span class="number">20</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">pngquant</span>: &#123;</span><br><span class="line">          <span class="attr">quality</span>: [<span class="number">0.8</span>, <span class="number">0.9</span>],</span><br><span class="line">          <span class="attr">speed</span>: <span class="number">4</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">svgo</span>: &#123;</span><br><span class="line">          <span class="attr">plugins</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">name</span>: <span class="string">&#x27;removeViewBox&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">name</span>: <span class="string">&#x27;removeEmptyAttrs&#x27;</span>,</span><br><span class="line">              <span class="attr">active</span>: <span class="literal">false</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">    ],</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite.config.ts部分配置</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/vite/vite.config.ts%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/vite/vite.config.ts%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>; <span class="comment">// 使用 defineConfig 工具函数获取类型提示：</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; viteMockServe &#125; <span class="keyword">from</span> <span class="string">&quot;vite-plugin-mock&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">    <span class="attr">base</span>: <span class="string">&quot;/foo/&quot;</span>, <span class="comment">// 开发或生产环境服务的公共基础路径</span></span><br><span class="line">    <span class="attr">optimizeDeps</span>: &#123;</span><br><span class="line">        <span class="attr">force</span>: <span class="literal">true</span>, <span class="comment">// 强制进行依赖预构建</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">css</span>: &#123;</span><br><span class="line">        <span class="attr">preprocessorOptions</span>: &#123;</span><br><span class="line">            <span class="attr">scss</span>: &#123;</span><br><span class="line">                <span class="attr">additionalData</span>: <span class="string">`@import &#x27;/src/assets/styles/variables.scss&#x27;;`</span>, <span class="comment">// 引入全局变量文件</span></span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">postcss</span>: &#123;</span><br><span class="line">            <span class="attr">plugins</span>: [</span><br><span class="line">                <span class="comment">// viewport 布局适配</span></span><br><span class="line">                <span class="title function_">postcssPxToViewport</span>(&#123;</span><br><span class="line">                    <span class="attr">viewportWidth</span>: <span class="number">375</span>,</span><br><span class="line">                &#125;),</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">resolve</span>: &#123;</span><br><span class="line">        <span class="attr">alias</span>: &#123;</span><br><span class="line">            <span class="string">&quot;@&quot;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./src&quot;</span>), <span class="comment">// 路径别名</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">extensions</span>: [<span class="string">&quot;.js&quot;</span>, <span class="string">&quot;.ts&quot;</span>, <span class="string">&quot;.json&quot;</span>], <span class="comment">// 导入时想要省略的扩展名列表</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">server</span>: &#123;</span><br><span class="line">        <span class="attr">host</span>: <span class="literal">true</span>, <span class="comment">// 监听所有地址</span></span><br><span class="line">        <span class="attr">proxy</span>: &#123;</span><br><span class="line">            <span class="comment">// 字符串简写写法</span></span><br><span class="line">            <span class="string">&quot;/foo&quot;</span>: <span class="string">&quot;http://localhost:4567&quot;</span>,</span><br><span class="line">            <span class="comment">// 选项写法</span></span><br><span class="line">            <span class="string">&quot;/api&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&quot;http://jsonplaceholder.typicode.com&quot;</span>,</span><br><span class="line">                <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 正则表达式写法</span></span><br><span class="line">            <span class="string">&quot;^/fallback/.*&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&quot;http://jsonplaceholder.typicode.com&quot;</span>,</span><br><span class="line">                <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/fallback/</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 使用 proxy 实例</span></span><br><span class="line">            <span class="string">&quot;/api&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&quot;http://jsonplaceholder.typicode.com&quot;</span>,</span><br><span class="line">                <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">configure</span>: <span class="function">(<span class="params">proxy, options</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// proxy 是 &#x27;http-proxy&#x27; 的实例</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// Proxying websockets or socket.io</span></span><br><span class="line">            <span class="string">&quot;/socket.io&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&quot;ws://localhost:3000&quot;</span>,</span><br><span class="line">                <span class="attr">ws</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">build</span>: &#123;</span><br><span class="line">        <span class="attr">outDir</span>: <span class="string">&quot;build&quot;</span>, <span class="comment">// 打包文件的输出目录</span></span><br><span class="line">        <span class="attr">assetsDir</span>: <span class="string">&quot;static&quot;</span>, <span class="comment">// 静态资源的存放目录</span></span><br><span class="line">        <span class="attr">assetsInlineLimit</span>: <span class="number">4096</span>, <span class="comment">// 图片转 base64 编码的阈值</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [<span class="title function_">vue</span>(), <span class="title function_">viteMockServe</span>()],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite环境变量使用</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/vite/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/vite/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite --host --mode dev&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite build&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;serve&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite preview&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//--mode dev 代表加载package.json同级的.env.dev文件</span></span><br><span class="line"><span class="comment">//--mode prod 代表加载package.json同级的.env.prod文件</span></span><br><span class="line"><span class="comment">//可以在js中使用 console.log(import.meta.env); 获取.env文件里的数据</span></span><br></pre></td></tr></table></figure><h2 id="env文件"><a href="#env文件" class="headerlink" title="env文件"></a>env文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.env                # 所有情况下都会加载</span><br><span class="line">.env.local          # 所有情况下都会加载，但会被 git 忽略</span><br><span class="line">.env.[mode]         # 只在指定模式下加载</span><br><span class="line">.env.[mode].local   # 只在指定模式下加载，但会被 git 忽略</span><br></pre></td></tr></table></figure><h2 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h2><p>默认情况下，开发服务器 (<code>dev</code> 命令) 运行在 <code>development</code> (开发) 模式，而 <code>build</code> 命令则运行在 <code>production</code> (生产) 模式。</p><p>这意味着当执行 <code>vite build</code> 时，它会自动加载 <code>.env.production</code> 中可能存在的环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># .env.production</span><br><span class="line">VITE_APP_TITLE=My App</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pinia使用</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/pinia%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/pinia%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="解构"><a href="#解构" class="headerlink" title="解构"></a>解构</h3><p>使用storeToRefs，取值必须的使用 .value</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; defineComponent, ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; storeToRefs &#125; from &#x27;pinia&#x27;;</span><br><span class="line">import &#123; useUserStore &#125; from &#x27;@/stores/user.js&#x27;;</span><br><span class="line"></span><br><span class="line">const userStore = useUserStore();</span><br><span class="line">// 使用storeToRefs，取值必须的使用 .value</span><br><span class="line">const &#123; isLogin, userInfo &#125; = storeToRefs(userStore);</span><br><span class="line"></span><br><span class="line">const takein = () =&gt; &#123;</span><br><span class="line">if (!isLogin.value) &#123;</span><br><span class="line">uni.navigateTo(&#123;</span><br><span class="line">url: &#x27;/pages/login/login&#x27;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="映射state和getter"><a href="#映射state和getter" class="headerlink" title="映射state和getter"></a>映射state和getter</h3><h4 id="useCounterStore"><a href="#useCounterStore" class="headerlink" title="useCounterStore"></a>useCounterStore</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// stores/counter.js</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">defineStore</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCounterStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;counter&#x27;</span>, &#123;</span><br><span class="line"><span class="attr">state</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line"><span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 也可以这样定义</span></span><br><span class="line"><span class="comment">// state: () =&gt; (&#123; count: 0 &#125;)</span></span><br><span class="line"><span class="attr">actions</span>: &#123;</span><br><span class="line"><span class="title function_">increment</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">count</span>++;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">count</span>);</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">getters</span>: &#123;</span><br><span class="line"><span class="attr">doubleCount</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">count</span> * <span class="number">2</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">unistorage</span>: <span class="literal">true</span> <span class="comment">// 开启后对 state 的数据读写都将持久化</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="使用-script-setup"><a href="#使用-script-setup" class="headerlink" title="使用 script setup"></a>使用 script setup</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"> const store = useStore()</span><br><span class="line"></span><br><span class="line"> store.counter = 3</span><br><span class="line"> store.doubleCount // 6</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="使用defineComponent"><a href="#使用defineComponent" class="headerlink" title="使用defineComponent"></a>使用defineComponent</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; defineComponent, ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; mapState, mapGetters &#125; from &#x27;pinia&#x27;;</span><br><span class="line">import &#123; useCounterStore &#125; from &#x27;@/stores/counter&#x27;;</span><br><span class="line"></span><br><span class="line">export default defineComponent(&#123;</span><br><span class="line">computed: &#123;</span><br><span class="line">...mapState(useCounterStore, [&#x27;count&#x27;]),</span><br><span class="line">...mapGetters(useCounterStore, [&#x27;doubleCount&#x27;])</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开启gzip</title>
      <link href="/2023/11/11/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/gzip/"/>
      <url>/2023/11/11/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/gzip/</url>
      
        <content type="html"><![CDATA[<ol><li><p><code>npm i -D compression-webpack-plugin</code></p></li><li><p>修改 <em>vue.config.js</em> 配置</p></li></ol>   <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CompressionPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;compression-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line"> ...</span><br><span class="line">  <span class="attr">configureWebpack</span>: <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">plugins</span>: [</span><br><span class="line">          <span class="keyword">new</span> <span class="title class_">CompressionPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">test</span>: <span class="regexp">/\.js$|\.html$|\.css$|\.jpg$|\.jpeg$|\.png/</span>, <span class="comment">// 需要压缩的文件类型</span></span><br><span class="line">            <span class="attr">threshold</span>: <span class="number">10240</span>, <span class="comment">// 归档需要进行压缩的文件大小最小值，这里是10K以上的进行压缩</span></span><br><span class="line">            <span class="attr">deleteOriginalAssets</span>: <span class="literal">false</span> <span class="comment">// 是否删除原文件</span></span><br><span class="line">          &#125;)</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>nginx启用gzip<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="comment"># 开启|关闭 gzip。</span></span><br><span class="line">    <span class="attribute">gzip</span> <span class="literal">on</span>|<span class="literal">off</span>;</span><br><span class="line">      <span class="comment"># 文件大于指定 size 才压缩，以 kb 为单位。</span></span><br><span class="line">      <span class="attribute">gzip_min_length</span> <span class="number">10</span>;</span><br><span class="line">      <span class="comment"># 压缩级别，1-9，值越大压缩比越大，但更加占用 CPU，且压缩效率越来越低。</span></span><br><span class="line">      <span class="attribute">gzip_comp_level</span> <span class="number">2</span>;</span><br><span class="line">      <span class="comment"># 压缩的文件类型。</span></span><br><span class="line">      <span class="attribute">gzip_types</span> text/plain application/javascript application/x-javascript text/css application/xml text/javascript;</span><br><span class="line">      <span class="comment"># 开启后如果能找到 .gz 文件，直接返回该文件，不会启用服务端压缩。</span></span><br><span class="line">      <span class="attribute">gzip_static</span> <span class="literal">on</span>|<span class="literal">off</span></span><br><span class="line">      <span class="comment"># 是否添加响应头 Vary: Accept-Encoding 建议开启。</span></span><br><span class="line">      gzip_vary <span class="literal">on</span>;</span><br><span class="line">      <span class="comment"># 请求压缩的缓冲区数量和大小，以 4k 为单位，32 为倍数。</span></span><br><span class="line">      <span class="attribute">gzip_buffers</span> <span class="number">32</span> <span class="number">4K</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 性能优化 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>uniapp 基础</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/uniapp/mvvm/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/uniapp/mvvm/</url>
      
        <content type="html"><![CDATA[<blockquote><p>软件就像做爱。一次犯错，你需要用余下一生来维护支持。—— Michael Sinz</p></blockquote><p>本章我们来学习 Vue 基础，认识 Vue 开发。</p><p>为什么是了解 Vue 基础呢？因为 Uniapp 设计的开发标准是：Vue的语法 + 小程序的API + 条件编译扩展平台个性化能力。了解完 Vue 基本开发原理就可使用 Uniapp 了。</p><h2 id="什么是-MVC-与-MVVM-？"><a href="#什么是-MVC-与-MVVM-？" class="headerlink" title="什么是 MVC 与 MVVM ？"></a>什么是 MVC 与 MVVM ？</h2><p>在开始之前，我们先来了解什么是 MVC 与 MVVM ？才能一步一步深入了解 Vue 框架的出现和 Vue 可以解决的问题。</p><p>MVC 的定义：MVC 是 Model-View-Controller 的简写。即模型-视图-控制器。</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/18/170ec6e02ca8e1a4~tplv-t2oaga2asx-watermark.awebp" alt="img"></p><ul><li><strong>模型</strong>（Model）指的是后端传递的数据（比如数据库记录列表）。</li><li><strong>视图</strong>（View）指的是所看到的页面，显示数据（数据记录）。</li><li><strong>控制器</strong>（Controller）是应用程序中处理用户交互的部分，处理输入（写入数据库记录）。</li></ul><p>在前端并不成熟的时期，很多业务逻辑是在后端实现的，MVC 允许在不改变视图的情况下改变视图对用户输入的响应方式，用户对视图的操作交给了 Controller 处理，在 Controller 中响应 View 的事件调用 Model 的接口对数据进行操作，一旦 Model 发生变化便通知相关视图进行更新。</p><p>这里只是简略的去说 MVC ，感兴趣的小伙伴可以去网上查一下关于这方面的知识。使用 MVC 的目的就是将 Model 和 View 的代码分离。MVC 是单向通信。也就是 View 跟 Model，必须通过 Controller 来承上启下。但是 MVC 中大量的 DOM 操作又加上视图的二次加载更新，用户看到的更新数据页面会慢一些，并且页面渲染性能降低，影响了用户体验。</p><p>为解决这样的问题，MVVM 就出现了。</p><p>在过去的10年中，我们已经把很多传统的服务端代码放到了浏览器中，这样就产生了成千上万行的 javascript 代码，它们连接了各式各样的 HTML 和 CSS 文件，但缺乏正规的组织形式，这也就是为什么越来越多的开发者使用 javascript 框架，比如：Angular、React、Vue。浏览器的兼容性问题已经不再是前端的阻碍。前端的项目越来越大，项目的可维护性和扩展性、安全性等成了主要问题。当年为了解决浏览器兼容性问题，出现了很多类库，其中最典型的就是 jQuery。但是这类库没有实现对业务和逻辑的分层，所以在后期项目越来越庞大时，维护性和扩展性并不理想。</p><p>综合上面原因，衍生出了 MVVM 模式一类框架的出现，通过数据的单向流动，维护性和扩展性得到极大的提高。Vue 就是基于 MVVM 模式实现的这样一套框架。</p><p>下面来看一下 MVVM。</p><p>MVVM 是 Model-View-ViewModel 的简写，即模型-视图-视图模型。MVVM 模式是通过以下三个核心组件组成：</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/18/170ec6e39f709d44~tplv-t2oaga2asx-watermark.awebp" alt="img"></p><ul><li><strong>模型</strong>（Model）指的是后端传递的数据，包含了业务和验证逻辑的数据模型。</li><li><strong>视图</strong>（View）指的是所看到的页面，定义屏幕中 View 的结构，布局和外观。</li><li><strong>视图模型</strong>（ViewModel） 是 MVVM 模式的核心，它是连接 View 和 Model 的桥梁，帮忙处理 View 的全部业务逻辑。</li></ul><p>ViewModel 的角色就是将<strong>视图</strong>与<strong>模型</strong>之间来回转化：</p><ul><li><strong>模型</strong>转化为<strong>视图</strong>：将服务器发送的数据转化成我们看到的页面内容。这就是 <code>&#123;&#123;&#125;&#125;</code> 进行数据对应的作用。</li><li><strong>视图</strong>转化为<strong>模型</strong>：将页面内容及用户操作信息转化成服务器的数据。这部分是指令与 dom 事件对应的作用。</li></ul><p><strong>视图</strong>与<strong>模型</strong>这两者之间的来回转化，我们称之为数据的双向绑定。</p><h2 id="双向绑定的使用"><a href="#双向绑定的使用" class="headerlink" title="双向绑定的使用"></a>双向绑定的使用</h2><p>来看一个添加名单的应用页面的 index.vue 结构，用户可以在输入框输入名字，书写的内容可以即时反映显示在文本中，用户可以操作添加，把该名字插入列表数据中：</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/11/16/16e71f120e22121a~tplv-t2oaga2asx-watermark.awebp" alt="img"></p><p>在 Vue 中可以发现：</p><ul><li>Model：data 处存放的数据</li><li>View：template 中 HTML 代码展示的视图</li><li>ViewModel：是 methods 里的 JS 逻辑代码</li></ul><p>如此一来，我们已经对 MVVM 有了初步的认识。</p><p>DOM 的数据通过 Vue 的 directives（指令）来改变，所以直接改变 model 的数据就可以直接将数据反映在 DOM 上面。前面的 <code>v-model</code> 指令就是用户在输入框操作时反映显示在视图中（你要添加的名字:  ），所以我们使用 Vue 这样的框架时，想要改变视图样式不是直接像 jQuery 操作 DOM 一样去操作，而是改变数据，让数据去驱动视图样式的改变。</p><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><p>Vue 实例有一个完整的生命周期，也就是说从开始创建、初始化数据、编译模板、挂在DOM、渲染-更新-渲染、卸载等一系列过程。Vue 实例的生命周期钩子就是在某个阶段给你一个做某些处理的机会。比如 Vue 整个渲染完 DOM 的时候，你才可以操作 DOM，如果在 DOM 未渲染完之前去操作 DOM，由于 DOM 不存在而操作失败。</p><p>由于 Uniapp 是集成多端的，因此完整的支持 Vue 实例的生命周期，同时还支持<code>应用生命周期</code>及<code>页面生命周期</code>，区别在于你是开发 h5，小程序员，app。</p><h3 id="应用生命周期"><a href="#应用生命周期" class="headerlink" title="应用生命周期"></a>应用生命周期</h3><p>函数名 | 说明<br>-|-|- onLaunch | 初始化完成时触发（全局只触发一次），例如：点击分享页面进入应用，可以捕获在分享链接的参数 onShow | 启动，或从后台进入前台显示 onHide | 从前台进入后台 onError | 报错时触发</p><h3 id="页面生命周期"><a href="#页面生命周期" class="headerlink" title="页面生命周期"></a>页面生命周期</h3><p>函数名 | 说明<br>-|-|- onLoad | 监听页面加载，每个页面触发一次，其参数为上个页面传递的数据，参数类型为Object（用于页面传参） onShow | 监听页面显示。页面每次出现在屏幕上都触发，包括从下级页面点返回露出当前页面 onReady | 监听页面初次渲染完成。如果渲染速度快，会在页面进入动画完成前触发 onHide | 监听页面隐藏 onUnload | 监听页面卸载 onResize | 监听窗口尺寸变化 onPullDownRefresh | 监听下拉刷新 onReachBottom | 监听触底上拉加载 onShareAppMessage | 监听点击右上角分享 onPageScroll | 监听页面滚动 onBackPress | 监听左上角返回按钮或 android 返回键</p><p>以上的生命周期在项目中会经常使用到。看着挺多的不好记住，不要急，我将在进阶中详细演示，并提供一个页面模板给你使用。</p><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><p>来一个简单的基于 HTML 的模板语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">:title</span>=<span class="string">&quot;singer&quot;</span>&gt;</span>喜欢的歌手是: &#123;&#123;singer&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>更换名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">singer</span>: <span class="string">&#x27;周杰伦&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            changeName () &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">singer</span> = <span class="string">&#x27;张学友&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Vue 数据绑定最常见的形式就是使用 <code>Mustache</code> 语法 (双大括号) 的文本插值，比如 <code>&#123;&#123;singer&#125;&#125;</code>，Mustache 标签将会被替代为对应数据对象上 singer 属性的值。无论何时，绑定的数据对象上 singer 属性发生了改变，插值处的内容都会更新，<code>&#123;&#123;singer&#125;&#125;</code> 会被渲染成 <code>周杰伦</code>。</p><p>Mustache 语法不能作用在 HTML 特性上，遇到这种情况应该使用 v-bind 指令：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;singer&quot;</span>&gt;</span>喜欢的歌手是: &#123;&#123;singer&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 渲染成</span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">title</span>=<span class="string">&quot;周杰伦&quot;</span>&gt;</span>喜欢的歌手是: 周杰伦<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可使用简写 <code>v-bind</code> 指令，将 <code>v-bind:title=&quot;singer&quot;</code> 写成 <code>:title=&quot;singer&quot;</code>，直接用 <code>:</code> 代替。</p><p>当然模板语法提供了完全的 JavaScript 表达式支持，你可以写一些简单的表达式，下面这些表达式会在所属 Vue 实例的数据作用域下作为 JavaScript 被解析：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; number + <span class="number">1</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; ok ? <span class="string">&#x27;YES&#x27;</span> : <span class="string">&#x27;NO&#x27;</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; message.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>) &#125;&#125;</span><br><span class="line"></span><br><span class="line">&lt;div v-<span class="attr">bind</span>:id=<span class="string">&quot;&#x27;list-&#x27; + id&quot;</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p>在上面的代码块中，有个 methods 对象，Vue 把所有的事件都放在 methods 属性中，对应具体的方法函数：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">:title</span>=<span class="string">&quot;singer&quot;</span>&gt;</span>喜欢的歌手是: &#123;&#123;singer&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>更换名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">singer</span>: <span class="string">&#x27;周杰伦&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            changeName () &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">singer</span> = <span class="string">&#x27;张学友&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样的方式可以统一集中处理事件，并且开发者可以直观知道事件绑定在哪个元素中，比如 <code>changeName</code> 方法绑定在 button 中，如果想要解除事件直接删除就可，而不用担心别的元素隐形绑定该事件而导致报错。</p><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><p>模板内的表达式非常便利，但是设计它们的初衷是用于简单运算的。在模板中放入太多的逻辑会让模板过重且难以维护。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;) &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果你在处理一个比较复杂的变量，那么在 <code>&#123;&#123;&#125;&#125;</code> 书写就不合适了，看到长长的代码都能让你头大。对于任何复杂逻辑，你都应当使用计算属性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span>&gt;</span>喜欢的歌手是: &#123;&#123;singer&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span>&gt;</span>喜欢的歌手是: &#123;&#123;computedSinger&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">singer</span>: <span class="string">&#x27;周杰伦&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 对singer二次加工处理</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">computedSinger</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// `this` 指向 Vue 实例</span></span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">singer</span>.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            changeName () &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">singer</span> = <span class="string">&#x27;张学友&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">喜欢的歌手是: 周杰伦</span><br><span class="line">喜欢的歌手是: 伦杰周</span><br></pre></td></tr></table></figure><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><p>在 Vue 中指令是带有 <code>v-</code> 前缀的特殊属性，通过属性来操作元素。</p><p>常见的指令有：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-text：在元素当中插入值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-text</span>=<span class="string">&#x27;singer&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-for：根据变量的值来循环渲染元素 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in list&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;item&#125;&#125;--&#123;&#123;index&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-if和v-else：根据表达式的真假值来动态插入和移除元素 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>我会显示<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-else</span>&gt;</span>我不会显示，但是我要跟有 v-if 指令的元素并齐<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-model：把input的值和变量绑定了，实现了数据和视图的双向绑定 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;singer&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-bind：绑定元素的属性并执行相应的操作 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;t1: isBig&#125;&quot;</span>&gt;</span>isBig 为 true 时，该元素class类名会变为 t1<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上面v-bind可以简写 : --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;t1: isBig&#125;&quot;</span>&gt;</span>isBig 为 true 时，该元素class类名会变为 t1<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-on：监听元素事件，并执行相应的操作 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-on:click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>该元素绑定了点击事件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上面 v-on：可以简写 @ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>该元素绑定了点击事件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">singer</span>: <span class="string">&#x27;周杰伦&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">list</span>:[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">isShow</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">isBig</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            change () &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// ...</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="和"><a href="#和" class="headerlink" title="&lt;template/&gt; 和 &lt;block/&gt;"></a><code>&lt;template/&gt;</code> 和 <code>&lt;block/&gt;</code></h3><p>Uniapp 支持在 template 模板中嵌套 <code>&lt;template/&gt;</code> 和 <code>&lt;block/&gt;</code>，用来进行 列表渲染 和 条件渲染。</p><p><code>&lt;template/&gt;</code> 和 <code>&lt;block/&gt;</code> 并不是一个组件，它们仅仅是一个包装元素，不会在页面中做任何渲染，只接受控制属性。</p><p>代码示例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">view</span>&gt;</span>test 为 true 时显示<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">view</span>&gt;</span>test 为 false 时显示<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 列表渲染 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">block</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;item&#125;&#125; - &#123;&#123;index&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="全局变量-状态管理"><a href="#全局变量-状态管理" class="headerlink" title="全局变量(状态管理)"></a>全局变量(状态管理)</h2><p>在 Vue（Uniapp）中有多种处理全局变量，全局方法的做法：</p><h3 id="1-挂载-Vue-prototype"><a href="#1-挂载-Vue-prototype" class="headerlink" title="1. 挂载 Vue.prototype"></a>1. 挂载 Vue.prototype</h3><p>将一些使用频率较高的常量或者方法，直接扩展到 Vue.prototype 上，每个 Vue 对象都会“继承”下来。</p><p>注意这种方式只支持多个 Vue 页面或多个 nVue 页面之间公用，Vue 和 nVue 之间不公用。</p><p>示例如下：</p><p>在 main.js 中挂载属性&#x2F;方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">websiteUrl</span> = <span class="string">&#x27;http://localhost:3000&#x27;</span>;  </span><br></pre></td></tr></table></figure><p>然后在 pages&#x2F;index&#x2F;index.Vue 中调用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;  </span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;  </span><br><span class="line">        <span class="attr">methods</span>: &#123;  </span><br><span class="line">            <span class="title function_">getBanner</span>(<span class="params"></span>) &#123;</span><br><span class="line">                uni.<span class="title function_">request</span>(&#123;</span><br><span class="line">                    <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">websiteUrl</span> + <span class="string">&#x27;/banner&#x27;</span>,</span><br><span class="line">                    <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">                    <span class="attr">data</span>: &#123;&#125;,</span><br><span class="line">                    <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;&#125;,</span><br><span class="line">                    <span class="attr">fail</span>: <span class="function">() =&gt;</span> &#123;&#125;,</span><br><span class="line">                    <span class="attr">complete</span>: <span class="function">() =&gt;</span> &#123;&#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这种方式，只需要在 main.js 中定义好即可在每个页面中直接调用。但要注意的是，当前的this指向的是当前模块，稍微不注意就可能出现重复命名的情况。</p><p>建议在 Vue.prototype 上挂载的属性或方法，可以加一个统一的前缀<code>$</code>。比如<code>$url</code> 、<code>$global_url</code>这样，在阅读代码时也容易与当前页面的内容区分开。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$websiteUrl</span> = <span class="string">&#x27;http://localhost:3000&#x27;</span>;  </span><br><span class="line"><span class="comment">// 访问</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="variable language_">this</span>.<span class="property">$websiteUrl</span></span><br></pre></td></tr></table></figure><p>使用 <code>this.$websiteUrl</code> 的时候，与你协作的开发人员一看 <code>$</code> 开头就知道是全局扩展的属性。</p><p>那如果只是简单的变量呢？</p><h3 id="2-globalData"><a href="#2-globalData" class="headerlink" title="2. globalData"></a>2. globalData</h3><p>如果你了解开发小程序的话，恭喜你，这个就是基于小程序延伸过来的。如果你还不熟悉，可以往下看</p><p>但从字面上来看 globalData 单词，可以翻译为全局变量。Uniapp 也把 globalData 作为一种比较简单的全局变量使用方式，但是有一点要清楚，globalData 走内存，storage 走缓存，即小程序退出 globalData 会清空，storage 则不会。</p><p>在 App.vue 可以定义 globalData ，也可以使用 API 读写这个值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;  </span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;  </span><br><span class="line">        <span class="attr">globalData</span>: &#123;  </span><br><span class="line">           <span class="attr">websiteUrl</span>: <span class="string">&#x27;http://localhost:3000&#x27;</span>  </span><br><span class="line">        &#125;,  </span><br><span class="line">        <span class="attr">onLaunch</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;  </span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;App Launch&#x27;</span>)  </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;  </span><br><span class="line">&lt;/script&gt; </span><br></pre></td></tr></table></figure><p>js 中操作 globalData 的方式如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">赋值：<span class="title function_">getApp</span>().<span class="property">globalData</span>.<span class="property">websiteUrl</span> = <span class="string">&#x27;http://localhost:3000&#x27;</span>  </span><br><span class="line"></span><br><span class="line">取值：<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getApp</span>().<span class="property">globalData</span>.<span class="property">websiteUrl</span>) <span class="comment">// &#x27;http://localhost:3000&#x27;  </span></span><br></pre></td></tr></table></figure><h3 id="3-Vuex"><a href="#3-Vuex" class="headerlink" title="3. Vuex"></a>3. Vuex</h3><p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/18/170ec6f33375f853~tplv-t2oaga2asx-watermark.awebp" alt="img"></p><p>关于<code>Vuex</code>东西不少，我打算开一章来详细讲解。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ol><li>MVVM 是解决 MVC 的一些问题而出现的。</li><li>Vue 是以数据驱动来改变视图的，所有的元素属性，文字节点，事件都可以进行管理；</li><li>全局变量可以让你在项目中管理整个状态，类似使用”全局变量”。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/11/11/hello-world/"/>
      <url>/2023/11/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
