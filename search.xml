<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue 复制文本</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E5%B7%A5%E5%85%B7%E5%BA%93/%E5%A4%8D%E5%88%B6%E6%96%87%E6%9C%AC/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E5%B7%A5%E5%85%B7%E5%BA%93/%E5%A4%8D%E5%88%B6%E6%96%87%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><ul><li><code>execCommand </code> mdn已弃用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">      <span class="comment">///定义点击复制的功能</span></span><br><span class="line">      <span class="title function_">copyUrl</span>(<span class="params">url</span>)&#123;</span><br><span class="line">        <span class="comment">//创建一个 Input标签 </span></span><br><span class="line">        <span class="keyword">let</span> oInput = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">        oInput.<span class="property">value</span> = url;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(oInput);</span><br><span class="line">        oInput.<span class="title function_">select</span>(); <span class="comment">// 选择对象;</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(oInput.<span class="property">value</span>)</span><br><span class="line">        <span class="comment">// 执行浏览器复制命令</span></span><br><span class="line">        <span class="comment">/// 复制命令会将当前选中的内容复制到剪切板中</span></span><br><span class="line">        <span class="comment">/// 如这里构建的 Input标签 </span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&quot;Copy&quot;</span>); </span><br><span class="line">        <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&#x27;复制成功&#x27;</span>,</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">///复制成功后再将构造的标签 移除</span></span><br><span class="line">        oInput.<span class="title function_">remove</span>()</span><br><span class="line">      &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>navigator.clipboard.writeText</code> 推荐</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">navigator.<span class="property">clipboard</span></span><br><span class="line">    .<span class="title function_">writeText</span>(text)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;复制成功&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;复制失败&#x27;</span>)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h3 id="第三方组件"><a href="#第三方组件" class="headerlink" title="第三方组件"></a>第三方组件</h3><ul><li>clipboard js</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue 打印</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E5%B7%A5%E5%85%B7%E5%BA%93/%E6%89%93%E5%8D%B0/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E5%B7%A5%E5%85%B7%E5%BA%93/%E6%89%93%E5%8D%B0/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="window-print"><a href="#window-print" class="headerlink" title="window.print"></a>window.print</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot; @click=&quot;handlePrint&quot;&gt;打印&lt;/el-button&gt;</span><br><span class="line">    //打印区域</span><br><span class="line">    &lt;basic-container id=&quot;printFrom&quot;&gt;&lt;/basic-container&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">        handlePrint() &#123;</span><br><span class="line">          const printData = &#123;</span><br><span class="line">            printable: &#x27;printFrom&#x27;,</span><br><span class="line">            header: &#x27;申请表&#x27;,</span><br><span class="line">            ignore: [&#x27;no-print&#x27;]</span><br><span class="line">          &#125;</span><br><span class="line">          printJS(&#123;</span><br><span class="line">            printable: printData.printable, // &#x27;printFrom&#x27;, // 标签元素id</span><br><span class="line">            type: printData.type || &#x27;html&#x27;,</span><br><span class="line">            header: printData.header, // &#x27;表单&#x27;,</span><br><span class="line">            targetStyles: [&#x27;*&#x27;],</span><br><span class="line">            style: &#x27;@page &#123;margin:0 10mm&#125;;&#x27;, // 可选-打印时去掉眉页眉尾</span><br><span class="line">            ignoreElements: printData.ignore || [], // [&#x27;no-print&#x27;]</span><br><span class="line">            properties: printData.properties || null</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vue-print-nb"><a href="#vue-print-nb" class="headerlink" title="vue-print-nb"></a>vue-print-nb</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vue-print-nb</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Print</span> <span class="keyword">from</span> <span class="string">&quot;vue-print-nb&quot;</span>;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Print</span>); <span class="comment">//打印插件</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot; v-print=&quot;print&quot;&gt;打印&lt;/el-button&gt;--&gt;</span><br><span class="line">    //打印区域</span><br><span class="line">    &lt;basic-container id=&quot;printFrom&quot;&gt;&lt;/basic-container&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">          print: &#123;</span><br><span class="line">            id: &#x27;printFrom&#x27;,</span><br><span class="line">            popTitle: &#x27;打印&#x27;, // 打印配置页上方标题</span><br><span class="line">            extraHead: &#x27;&#x27;, //最上方的头部文字，附加在head标签上的额外标签,使用逗号分隔</span><br><span class="line">            preview: &#x27;&#x27;, // 是否启动预览模式，默认是false（开启预览模式，可以先预览后打印）</span><br><span class="line">            previewTitle: &#x27;&#x27;, // 打印预览的标题（开启预览模式后出现）,</span><br><span class="line">            previewPrintBtnLabel: &#x27;&#x27;, // 打印预览的标题的下方按钮文本，点击可进入打印（开启预览模式后出现）</span><br><span class="line">            zIndex: &#x27;&#x27;, // 预览的窗口的z-index，默认是 20002（此值要高一些，这涉及到预览模式是否显示在最上面）</span><br><span class="line">            previewBeforeOpenCallback() &#123;</span><br><span class="line">              console.log(&#x27;预览窗口打开之前的callback&#x27;)</span><br><span class="line">            &#125;, //预览窗口打开之前的callback（开启预览模式调用）</span><br><span class="line">            previewOpenCallback() &#123;</span><br><span class="line">              console.log(&#x27;预览窗口打开之后的callback&#x27;)</span><br><span class="line">            &#125;, // 预览窗口打开之后的callback（开启预览模式调用）</span><br><span class="line">            beforeOpenCallback() &#123;</span><br><span class="line">              console.log(&#x27;开启打印前的回调事件&#x27;)</span><br><span class="line">            &#125;, // 开启打印前的回调事件</span><br><span class="line">            openCallback() &#123;</span><br><span class="line">              console.log(&#x27;调用打印之后的回调事件&#x27;)</span><br><span class="line">            &#125;, // 调用打印之后的回调事件</span><br><span class="line">            closeCallback() &#123;</span><br><span class="line">            &#125;, //关闭打印的回调事件（无法确定点击的是确认还是取消）</span><br><span class="line">            url: &#x27;&#x27;,</span><br><span class="line">            standard: &#x27;&#x27;,</span><br><span class="line">            extraCss: &#x27;&#x27;,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        handlePrint() &#123;</span><br><span class="line">          const printData = &#123;</span><br><span class="line">            printable: &#x27;printFrom&#x27;,</span><br><span class="line">            header: &#x27;申请表&#x27;,</span><br><span class="line">            ignore: [&#x27;no-print&#x27;]</span><br><span class="line">          &#125;</span><br><span class="line">          printJS(&#123;</span><br><span class="line">            printable: printData.printable, // &#x27;printFrom&#x27;, // 标签元素id</span><br><span class="line">            type: printData.type || &#x27;html&#x27;,</span><br><span class="line">            header: printData.header, // &#x27;表单&#x27;,</span><br><span class="line">            targetStyles: [&#x27;*&#x27;],</span><br><span class="line">            style: &#x27;@page &#123;margin:0 10mm&#125;;&#x27;, // 可选-打印时去掉眉页眉尾</span><br><span class="line">            ignoreElements: printData.ignore || [], // [&#x27;no-print&#x27;]</span><br><span class="line">            properties: printData.properties || null</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql基础</title>
      <link href="/2023/11/11/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/11/11/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><blockquote><p>操作数据库时，语句的关键字最好都大写（SELECT, TABLE等）</p></blockquote><h2 id="1-数据库（ddl）"><a href="#1-数据库（ddl）" class="headerlink" title="1. 数据库（ddl）"></a>1. 数据库（ddl）</h2><blockquote><p>Data Definition Language 数据库定义语言； 如create procedure之类</p></blockquote><h3 id="1-1-创建数据库"><a href="#1-1-创建数据库" class="headerlink" title="1.1 创建数据库"></a>1.1 创建数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE TEST1;</span><br></pre></td></tr></table></figure><h4 id="1-1-1-判断数据库是否存在，不存在时创建数据库"><a href="#1-1-1-判断数据库是否存在，不存在时创建数据库" class="headerlink" title="1.1.1 判断数据库是否存在，不存在时创建数据库"></a>1.1.1 判断数据库是否存在，不存在时创建数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> TEST1;</span><br></pre></td></tr></table></figure><h3 id="1-2-删除数据库"><a href="#1-2-删除数据库" class="headerlink" title="1.2 删除数据库"></a>1.2 删除数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE test;</span><br></pre></td></tr></table></figure><h3 id="1-3-查看当前正在使用的数据库"><a href="#1-3-查看当前正在使用的数据库" class="headerlink" title="1.3 查看当前正在使用的数据库"></a>1.3 查看当前正在使用的数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DATABASE();</span><br></pre></td></tr></table></figure><h3 id="1-4使用-切换数据库"><a href="#1-4使用-切换数据库" class="headerlink" title="1.4使用&#x2F;切换数据库"></a>1.4使用&#x2F;切换数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE test;</span><br></pre></td></tr></table></figure><h2 id="2-表操作（ddl）"><a href="#2-表操作（ddl）" class="headerlink" title="2. 表操作（ddl）"></a>2. 表操作（ddl）</h2><blockquote></blockquote><h3 id="2-1-创建表"><a href="#2-1-创建表" class="headerlink" title="2.1 创建表"></a>2.1 创建表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student (id <span class="type">INT</span>,name <span class="type">VARCHAR</span>(<span class="number">20</span>),birthday <span class="type">DATE</span>,sex <span class="type">CHAR</span>(<span class="number">5</span>));</span><br></pre></td></tr></table></figure><h4 id="2-1-1-附加"><a href="#2-1-1-附加" class="headerlink" title="2.1.1 附加"></a>2.1.1 附加</h4><ol><li><p><strong>AUTO_INCREMENT</strong>自增</p></li><li><p><strong>NOT NULL</strong> 不为空</p></li><li><p><strong>PRIMARY KEY</strong> 设置主键</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `users` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `realname` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br></pre></td></tr></table></figure><h4 id="2-1-2-快速创建一个表结构相同的表（类似复制表）"><a href="#2-1-2-快速创建一个表结构相同的表（类似复制表）" class="headerlink" title="2.1.2 快速创建一个表结构相同的表（类似复制表）"></a>2.1.2 快速创建一个表结构相同的表（类似复制表）</h4><blockquote><p>只会复制表结构！！！！！！！！！</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test2 <span class="keyword">like</span> test;</span><br></pre></td></tr></table></figure><h3 id="2-2-显示创建表语句"><a href="#2-2-显示创建表语句" class="headerlink" title="2.2 显示创建表语句"></a>2.2 显示创建表语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> users;</span><br></pre></td></tr></table></figure><h3 id="2-3-显示表详情"><a href="#2-3-显示表详情" class="headerlink" title="2.3 显示表详情"></a>2.3 显示表详情</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> users;</span><br></pre></td></tr></table></figure><h3 id="2-4-显示所有表"><a href="#2-4-显示所有表" class="headerlink" title="2.4 显示所有表"></a>2.4 显示所有表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure><h3 id="2-5-删除表"><a href="#2-5-删除表" class="headerlink" title="2.5 删除表"></a>2.5 删除表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> users;</span><br></pre></td></tr></table></figure><h4 id="2-5-1-判断表是否存在并删除表"><a href="#2-5-1-判断表是否存在并删除表" class="headerlink" title="2.5.1 判断表是否存在并删除表"></a>2.5.1 判断表是否存在并删除表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> test1;</span><br></pre></td></tr></table></figure><h3 id="2-6-修改表结构"><a href="#2-6-修改表结构" class="headerlink" title="2.6 修改表结构"></a>2.6 修改表结构</h3><h4 id="2-6-1-增加个remark字段"><a href="#2-6-1-增加个remark字段" class="headerlink" title="2.6.1 增加个remark字段"></a>2.6.1 增加个<code>remark</code>字段</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">add</span> remark <span class="type">varchar</span>(<span class="number">20</span>);</span><br></pre></td></tr></table></figure><h4 id="2-6-2-修改列类型"><a href="#2-6-2-修改列类型" class="headerlink" title="2.6.2 修改列类型"></a>2.6.2 修改列类型</h4><p><code>remark</code>的类型改成<code>varchar(100)</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student modify remark <span class="type">varchar</span>(<span class="number">100</span>);</span><br></pre></td></tr></table></figure><h4 id="2-6-3-修改列名"><a href="#2-6-3-修改列名" class="headerlink" title="2.6.3 修改列名"></a>2.6.3 修改列名</h4><p><code>remark</code>的列名改成<code>intro</code>，列类型改成<code>varchar(30)</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student change remark intro <span class="type">varchar</span>(<span class="number">30</span>);</span><br></pre></td></tr></table></figure><h4 id="2-6-4-删除列"><a href="#2-6-4-删除列" class="headerlink" title="2.6.4 删除列"></a>2.6.4 删除列</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">drop</span> intro;</span><br></pre></td></tr></table></figure><h3 id="2-7-修改表名"><a href="#2-7-修改表名" class="headerlink" title="2.7 修改表名"></a>2.7 修改表名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename <span class="keyword">table</span> student <span class="keyword">to</span> student1;</span><br></pre></td></tr></table></figure><h3 id="2-8-修改表的编码（字符集）"><a href="#2-8-修改表的编码（字符集）" class="headerlink" title="2.8 修改表的编码（字符集）"></a>2.8 修改表的编码（字符集）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="type">character</span> <span class="keyword">set</span> gbk;</span><br></pre></td></tr></table></figure><h2 id="3-表数据操作（dml）"><a href="#3-表数据操作（dml）" class="headerlink" title="3. 表数据操作（dml）"></a>3. 表数据操作（dml）</h2><blockquote><p>Data Manipulation Language 数据操纵语言，如insert,delete,update,select(插入、删除、修改、检索)插入修改数据。</p></blockquote><h3 id="3-1-插入记录"><a href="#3-1-插入记录" class="headerlink" title="3.1 插入记录"></a>3.1 插入记录</h3><ol><li>除了数字类型和<code>null</code>，其他的都需要引号</li><li>insert into 表名(列名1,列名2,…列名n) values(值1,值2,…值n);</li><li><code>null</code> 不要加引号！！！！！！！！！！！</li></ol><h4 id="3-1-1-插入全部字段"><a href="#3-1-1-插入全部字段" class="headerlink" title="3.1.1 插入全部字段"></a>3.1.1 插入全部字段</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(id,name,sex,age,birthday,address,phone,math,english) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">11</span>,<span class="string">&#x27;2010-1-1&#x27;</span>,<span class="string">&#x27;fuzhou&#x27;</span>,<span class="string">&#x27;123456789011&#x27;</span>,<span class="number">33.4</span>,<span class="number">77</span>);</span><br></pre></td></tr></table></figure><h4 id="3-1-2-顺序插入"><a href="#3-1-2-顺序插入" class="headerlink" title="3.1.2 顺序插入"></a>3.1.2 顺序插入</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">33</span>,<span class="string">&#x27;2033-5-5&#x27;</span>,<span class="string">&#x27;beijin&#x27;</span>,<span class="string">&#x27;18888888888&#x27;</span>,<span class="number">44</span>,<span class="number">88</span>);</span><br></pre></td></tr></table></figure><h4 id="3-1-3-指定字段插入"><a href="#3-1-3-指定字段插入" class="headerlink" title="3.1.3 指定字段插入"></a>3.1.3 指定字段插入</h4><ol><li>未指定插入的字段值为<code>null</code></li><li>也可以设置值为<code>null</code></li><li><code>null</code>不区分大小写。可以设置<code>NULL</code>,也可以设置<code>null</code></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(id,name,sex,address) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="keyword">NULL</span>);</span><br></pre></td></tr></table></figure><h4 id="3-1-4-查询插入"><a href="#3-1-4-查询插入" class="headerlink" title="3.1.4 查询插入"></a>3.1.4 查询插入</h4><ol><li>查询student表的数据，插入到student1表中</li><li>重复执行会添加到尾部，不是覆盖操作！！！</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student2(id,name) <span class="keyword">select</span> id,name <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h3 id="3-2-修改记录"><a href="#3-2-修改记录" class="headerlink" title="3.2 修改记录"></a>3.2 修改记录</h3><h4 id="3-2-1-修改全部"><a href="#3-2-1-修改全部" class="headerlink" title="3.2.1 修改全部"></a>3.2.1 修改全部</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> student1 <span class="keyword">set</span> sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="3-2-2-指定条件修改"><a href="#3-2-2-指定条件修改" class="headerlink" title="3.2.2 指定条件修改"></a>3.2.2 指定条件修改</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> student1 <span class="keyword">set</span> sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><h4 id="3-2-3-指定条件修改多个字段"><a href="#3-2-3-指定条件修改多个字段" class="headerlink" title="3.2.3 指定条件修改多个字段"></a>3.2.3 指定条件修改多个字段</h4><blockquote><p>使用逗号进行分割</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> student1 <span class="keyword">set</span> sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>,age<span class="operator">=</span><span class="number">22</span>,address <span class="operator">=</span><span class="string">&#x27;印度&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><h3 id="3-3-删除记录"><a href="#3-3-删除记录" class="headerlink" title="3.3 删除记录"></a>3.3 删除记录</h3><ol><li><code>truncate</code> 删除是将整张表删除，再创建一个与之前表结构相同的表。所以执行sql语句后，返回的是没有数据被影响</li><li><code>delete</code> 是将表里的数据一条一条删除，直至删除所有数据。所以sql语句会返回影响的行数</li></ol><h4 id="3-3-1-删除全部"><a href="#3-3-1-删除全部" class="headerlink" title="3.3.1 删除全部"></a>3.3.1 删除全部</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student3;</span><br></pre></td></tr></table></figure><h4 id="3-3-2-指定条件删除"><a href="#3-3-2-指定条件删除" class="headerlink" title="3.3.2 指定条件删除"></a>3.3.2 指定条件删除</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure><h4 id="3-3-3-trncate-删除数据"><a href="#3-3-3-trncate-删除数据" class="headerlink" title="3.3.3 trncate 删除数据"></a>3.3.3 trncate 删除数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> student3;</span><br></pre></td></tr></table></figure><h2 id="4-表查询（dql）"><a href="#4-表查询（dql）" class="headerlink" title="4. 表查询（dql）"></a>4. 表查询（dql）</h2><blockquote><p> DQL（Data Query Language）：数据查询语言，用来查询数据库中表的记录(数据)</p></blockquote><h3 id="4-1-简单查询"><a href="#4-1-简单查询" class="headerlink" title="4.1 简单查询"></a>4.1 简单查询</h3><h4 id="4-1-1-查询全部"><a href="#4-1-1-查询全部" class="headerlink" title="4.1.1 查询全部"></a>4.1.1 查询全部</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h4 id="4-1-2-指定字段查询"><a href="#4-1-2-指定字段查询" class="headerlink" title="4.1.2 指定字段查询"></a>4.1.2 指定字段查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> id,name <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h4 id="4-1-3-指定字段查询起别名"><a href="#4-1-3-指定字段查询起别名" class="headerlink" title="4.1.3 指定字段查询起别名"></a>4.1.3 指定字段查询起别名</h4><ol><li>别名不用加引号！！！</li><li><code>as</code> 可以省略</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name <span class="keyword">as</span> 姓名, age <span class="keyword">as</span> 年龄 <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h4 id="4-1-4-清除重复值"><a href="#4-1-4-清除重复值" class="headerlink" title="4.1.4 清除重复值"></a>4.1.4 清除重复值</h4><blockquote><p>name 重复的字段只会显示第一个</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> name <span class="keyword">from</span> student3;</span><br></pre></td></tr></table></figure><h4 id="4-1-5-查询结果参与运算"><a href="#4-1-5-查询结果参与运算" class="headerlink" title="4.1.5 查询结果参与运算"></a>4.1.5 查询结果参与运算</h4><ol><li>查询结果参与运算不会影响原数据！！！</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> math<span class="operator">+</span><span class="number">100</span> <span class="keyword">from</span> student3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> math<span class="operator">+</span>english <span class="keyword">from</span> student3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> math<span class="operator">+</span>english <span class="keyword">as</span> 总成绩 <span class="keyword">from</span> student3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">as</span> 姓名,age <span class="keyword">as</span> 年龄, math <span class="keyword">as</span> 数学成绩, english <span class="keyword">as</span> 英语成绩, math<span class="operator">+</span>english <span class="keyword">as</span> 总成绩 <span class="keyword">from</span> student3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,math<span class="operator">+</span>english <span class="keyword">as</span> 总成绩 <span class="keyword">from</span> student3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> name 姓名,age<span class="operator">+</span><span class="number">100</span> <span class="keyword">as</span> 年龄 <span class="keyword">from</span> student3;</span><br></pre></td></tr></table></figure><h3 id="4-2-条件查询"><a href="#4-2-条件查询" class="headerlink" title="4.2 条件查询"></a>4.2 条件查询</h3><h4 id="4-2-1-比较运算符"><a href="#4-2-1-比较运算符" class="headerlink" title="4.2.1 比较运算符"></a>4.2.1 比较运算符</h4><ol><li><code>&gt;</code> 大于</li><li><code>&lt;</code> 小于</li><li><code>&lt;=</code> 小于等于</li><li><code>&gt;=</code> 大于等于</li><li><code>=</code> 等于</li><li><code>&lt;&gt;</code>,<code>!=</code> 不等于，<code>!=</code> 常用</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> age <span class="operator">&gt;</span> <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> age <span class="operator">&lt;</span> <span class="number">55</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> age <span class="operator">&gt;=</span> <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> age <span class="operator">&lt;=</span> <span class="number">55</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">55</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> age <span class="operator">&lt;&gt;</span> <span class="number">55</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> age <span class="operator">!=</span> <span class="number">55</span>;</span><br></pre></td></tr></table></figure><h4 id="4-2-2-逻辑运算符"><a href="#4-2-2-逻辑运算符" class="headerlink" title="4.2.2 逻辑运算符"></a>4.2.2 逻辑运算符</h4><ol><li><code>and</code> 与</li><li><code>or</code> 或</li><li><code>not</code> 非</li><li><code>in</code> 在里面</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> math<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">and</span> english <span class="operator">&gt;=</span><span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> math<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">or</span> english <span class="operator">&gt;=</span><span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">or</span> id<span class="operator">=</span><span class="number">2</span> <span class="keyword">or</span> id<span class="operator">=</span><span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> id <span class="keyword">in</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> id <span class="keyword">not</span> <span class="keyword">in</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure><h4 id="4-2-3-范围"><a href="#4-2-3-范围" class="headerlink" title="4.2.3 范围"></a>4.2.3 范围</h4><ol><li><code>between 值1 and 值2</code>  表示从值1到值2范围，包头又包围</li><li><code>age between 35 and 60</code> 相当于 <code>age &gt;= 35 and age &lt;= 60</code></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> age <span class="keyword">between</span> <span class="number">50</span> <span class="keyword">and</span> <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> age<span class="operator">&gt;=</span><span class="number">50</span> <span class="keyword">and</span> age<span class="operator">&lt;=</span><span class="number">60</span>;</span><br></pre></td></tr></table></figure><h4 id="4-2-4-模糊查询"><a href="#4-2-4-模糊查询" class="headerlink" title="4.2.4 模糊查询"></a>4.2.4 模糊查询</h4><ol><li><code>like</code> 表示模糊查询<ol><li><code>select * from 表名 where 字段名 like &#39;通配符字符串&#39;</code></li><li>满足<code>通配符字符串</code>规则的数据就会显示出来</li></ol></li><li>mysql通配符有两个<ol><li><code>%</code>：表示0个或多个（任意个字符）</li><li><code>_</code>：表示一个字符</li></ol></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询孙开头的，后面不管多少个字符</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;孙%&#x27;</span></span><br><span class="line"><span class="comment">-- 查询前面不管多少个字符，最后以孙结尾的</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%孙&#x27;</span></span><br><span class="line"><span class="comment">-- 查询中间是孙字，前后不管多少个字符</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%孙%&#x27;</span></span><br><span class="line"><span class="comment">-- 查询孙开头后面只有一个字符的</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;孙_&#x27;</span></span><br><span class="line"><span class="comment">-- 查询孙开头后面只有两个字符的</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;孙__&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="4-2-5-排序"><a href="#4-2-5-排序" class="headerlink" title="4.2.5 排序"></a>4.2.5 排序</h4><blockquote><p>通过<code>order by</code> 子句，可以将查询出的结果进行排序只是显示方式，不会影响数据库中的数据顺序</p></blockquote><ul><li>语法：<code>select 字段名 from 表名 where 字段=值 order by 字段名 [asc|desc];</code><ul><li><code>asc</code>：升序（从小到大）</li><li><code>desc</code>：降序（从大到小）</li><li><code>asc desc</code> 可写可不写，不写默认就是升序（asc）！！！！</li></ul></li></ul><h5 id="4-2-5-1-单列排序"><a href="#4-2-5-1-单列排序" class="headerlink" title="4.2.5.1 单列排序"></a>4.2.5.1 单列排序</h5><blockquote><p>单列排序就是使用一个字段排序</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询年龄小于100，年龄按升序排列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> age<span class="operator">&lt;</span><span class="number">100</span> <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">asc</span></span><br><span class="line"><span class="comment">-- 查询年龄小于100，年龄按降序排列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> age<span class="operator">&lt;</span><span class="number">100</span> <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><h5 id="4-2-5-2-组合排序"><a href="#4-2-5-2-组合排序" class="headerlink" title="4.2.5.2 组合排序"></a>4.2.5.2 组合排序</h5><blockquote><p>组合排序就是先按的第一个排序，如果第一个字段值相同，才按第二个字段进行排序，以此类推。</p></blockquote><ul><li>语法：<code>select 字段名 from 表名 where 字段=值 order by 字段名1 [asc|desc], 字段名2 [asc|desc];</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询年龄小于100，年龄按升序排列，数学成绩按降序排列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student3 <span class="keyword">where</span> age<span class="operator">&lt;</span><span class="number">100</span> <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">asc</span>,math <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><h4 id="4-2-6-聚合函数"><a href="#4-2-6-聚合函数" class="headerlink" title="4.2.6 聚合函数"></a>4.2.6 聚合函数</h4><blockquote><p>之前做的查询都是横向查询，都是根据条件一行一行进行判断。而使用聚合函数查询是纵向查询，它是对一列的值进行计算，然后返回一个结果值，另外聚合函数会忽略空值！！！</p></blockquote><ul><li><p>五个聚合函数：</p><ul><li><code>count</code>：统计指定列记录数，记录为null的不统计</li><li><code>sum</code>：计算指定列的数值和，如果不是数值类型，那么计算结果为0</li><li><code>max</code>：计算指定列的最大值</li><li><code>min</code>：计算指定列的最小值</li><li><code>avg</code>：计算指定列的平均值，如果不是数值类型，那么计算结果为0</li></ul></li><li><p>聚合函数的使用：写在sql语句<code>select</code>后<code>字段名</code>的地方</p><ul><li><code>select count(age) from 表名</code></li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询所有学生总数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(id) <span class="keyword">from</span> studnet</span><br><span class="line"><span class="comment">-- 也可以使用count(*)</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> student</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年龄大于40的显示总数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> student <span class="keyword">where</span> age<span class="operator">&gt;</span><span class="number">40</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生的总年龄</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(age) <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生的平均年龄</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(age) <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生的最大年龄</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(age) <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生的最小年龄</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(age) <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h4 id="4-2-7-分组查询"><a href="#4-2-7-分组查询" class="headerlink" title="4.2.7 分组查询"></a>4.2.7 分组查询</h4><blockquote><p>分组查询是指使用<code>group by</code> 语句对查询信息进行分组，相同数据作为一组。</p></blockquote><p>语法：<code>select 字段1,字段2,... from 表名 group by 分组字段 [having 条件]</code></p><ul><li><code>select * from student group by sex</code>。这句会把sex相同的数据作为一组，但是只会返回每组的第一条数据，没有意义！！！！！</li><li>当使用某个字段进行分组查询时，也要把这个字段查询出来！！！</li></ul><h5 id="4-2-7-1-分组"><a href="#4-2-7-1-分组" class="headerlink" title="4.2.7.1 分组"></a>4.2.7.1 分组</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 分别查询学生男女年龄总和</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(age) ,sex <span class="keyword">from</span> student <span class="keyword">group</span> <span class="keyword">by</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年龄小于80的学生，按性别分组，并统计每组学生的人数</span></span><br><span class="line"><span class="keyword">select</span> sex,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> student <span class="keyword">where</span> age <span class="operator">&lt;</span> <span class="number">80</span> <span class="keyword">group</span> <span class="keyword">by</span> sex;</span><br></pre></td></tr></table></figure><h5 id="4-2-7-2-having"><a href="#4-2-7-2-having" class="headerlink" title="4.2.7.2 having"></a>4.2.7.2 having</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询年龄小于90的学生，按性别分组，并统计每组学生的人数，最后只显示性别人数大于2的组</span></span><br><span class="line"><span class="keyword">select</span> sex,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> student <span class="keyword">where</span> age<span class="operator">&lt;</span><span class="number">90</span> <span class="keyword">group</span> <span class="keyword">by</span> sex <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure><h4 id="4-2-8-limit-分页"><a href="#4-2-8-limit-分页" class="headerlink" title="4.2.8 limit 分页"></a>4.2.8 limit 分页</h4><blockquote><p>limit 是限制的意思，所以limit的作用就是限制查询记录的条数</p></blockquote><ul><li><code>select *|字段列表 [as 别名] from 表名 [where子句] [group by子句] [having子句] [order by子句] [limit子句]</code></li><li>limit排在后面的原因是，前面条件都处理完了，只剩下显示多少记录的问题了（分页）。</li></ul><p>语法格式：</p><ul><li><code>limit offest,length; 或者 limit length</code></li><li><code>offset</code>：偏移量，可以认为是跳过的记录数量，默认为0</li><li><code>length</code>：指需要显示的总记录量。不满足显示量时，就是全显示</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询学生表，从第三条数据开始，显示3条数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student limit <span class="number">2</span>,<span class="number">3</span>;</span><br></pre></td></tr></table></figure><h2 id="5-数据库约束"><a href="#5-数据库约束" class="headerlink" title="5. 数据库约束"></a>5. 数据库约束</h2><blockquote><p>对表在的数据进行进一步的限制，保证数据的<strong>正确性</strong>，<strong>有效性</strong>和<strong>完整性</strong></p></blockquote><p>约束种类：</p><ul><li><code>primary key</code>：主键</li><li><code>unique</code>：唯一</li><li><code>not null</code>：非空</li><li><code>default</code>：默认</li><li><code>foreign key</code>：外键</li></ul><h3 id="5-1主键"><a href="#5-1主键" class="headerlink" title="5.1主键"></a>5.1主键</h3><p>主键：<code>primary key</code></p><h4 id="5-1-1-主键的作用"><a href="#5-1-1-主键的作用" class="headerlink" title="5.1.1 主键的作用"></a>5.1.1 主键的作用</h4><blockquote><p>用来唯一标识一条记录</p></blockquote><ul><li>每一个表都应该有一个主键，并且每个表只能有一个主键</li><li>如果有些记录的字段的值有重复，那么就没办法区分这些数据，造成数据库的记录不唯一，不方便管理数据</li><li>通常不用业务字段作为主键，单独给每张表设计一个id字段，把id作为主键。主键是给数据库和程序使用的，不是给最终的客户使用。所以主键有没有含义不重要，只要不重复，非空就行。</li></ul><h4 id="5-1-2-创建主键"><a href="#5-1-2-创建主键" class="headerlink" title="5.1.2 创建主键"></a>5.1.2 创建主键</h4><p>主键特点：</p><ul><li>主键必须包含唯一值</li><li>主键列不能包含<code>null</code>值</li></ul><p>创建主键的方式：</p><ul><li>在创建表的时候，给字段添加主键</li><li><code>字段名 字段类型 primary key</code></li></ul><p>具体操作：</p><ul><li>创建英雄表<code>hero</code>，包含字段<code>(id,name,age)</code>，将id作为主键</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> hero(id <span class="type">int</span> <span class="keyword">primary</span> key,name <span class="type">varchar</span>(<span class="number">50</span>),age <span class="type">int</span>);</span><br></pre></td></tr></table></figure><ul><li>添加数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero(id,name) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;孙尚香&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero(id,name) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;孙策&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero(id,name) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;李白&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero(id,name) <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">&#x27;白起&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>插入重复的主键</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 主键是唯一的不能重复 Duplicate entry &#x27;1&#x27; for key &#x27;hero.PRIMARY&#x27;</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero(id,name) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;孙尚香&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>插入<code>null</code>的主键</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 主键不能为空 Column &#x27;id&#x27; cannot be null</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero(id,name) <span class="keyword">values</span>(<span class="keyword">null</span>,<span class="string">&#x27;孙尚香&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="5-1-3-删除主键"><a href="#5-1-3-删除主键" class="headerlink" title="5.1.3 删除主键"></a>5.1.3 删除主键</h4><p><code>alter table 表名 drop primary key</code></p><p>具体操作：</p><ul><li>删除hero表的主键</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> hero dr</span><br></pre></td></tr></table></figure><h4 id="5-1-4-主键自增"><a href="#5-1-4-主键自增" class="headerlink" title="5.1.4 主键自增"></a>5.1.4 主键自增</h4><blockquote><p>主键如果自己设置很可能重复，通常想要每次插入新记录时，数据库自动生成主键字段的值，<code>auto_increment</code> 表示自动增长（字段类型必须是整数类型的）</p></blockquote><p>具体操作：</p><ul><li>创建英雄表1，包含字段<code>(id,name,age)</code>，将id作为主键并自动增长</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> hero2(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>插入数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 主键默认从1开始自动增长</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero2(name,age) <span class="keyword">values</span>(&quot;猪八戒&quot;,<span class="number">11</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero2(name,age) <span class="keyword">values</span>(&quot;唐僧&quot;,<span class="number">51</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero2(name,age) <span class="keyword">values</span>(&quot;孙悟空&quot;,<span class="number">16</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero2(name,age) <span class="keyword">values</span>(&quot;关羽&quot;,<span class="number">31</span>);</span><br></pre></td></tr></table></figure><h4 id="5-1-5-扩展"><a href="#5-1-5-扩展" class="headerlink" title="5.1.5 扩展"></a>5.1.5 扩展</h4><ul><li><p>自增起始值</p><ul><li><p>默认<code>auto_increment</code>起始值为1，如果需要修改起始值，使用下面的sql语法</p></li><li><p><code>alter table 表名 auto_increment=起始值;</code></p></li></ul></li><li><p>delete和truncate的区别</p><ul><li>delete 删除表中的数据，但不重置<code>auto_increment</code>的值</li><li>truncate 摧毁表，重建表，<code>auto_increment</code>重置为1</li></ul></li></ul><h3 id="5-2-唯一"><a href="#5-2-唯一" class="headerlink" title="5.2  唯一"></a>5.2  唯一</h3><h4 id="5-2-1-唯一约束的格式"><a href="#5-2-1-唯一约束的格式" class="headerlink" title="5.2.1 唯一约束的格式"></a>5.2.1 唯一约束的格式</h4><p><code>字段名 字段类型 unique</code></p><h4 id="5-2-2-实现唯一约束"><a href="#5-2-2-实现唯一约束" class="headerlink" title="5.2.2 实现唯一约束"></a>5.2.2 实现唯一约束</h4><p>具体实现：</p><ul><li>创建英雄表hero3，包含字段<code>(id,name)</code>，name这一列设置唯一约束，不能出现同名的英雄</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> hero3(id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,name <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">unique</span>);</span><br></pre></td></tr></table></figure><ul><li>添加一个英雄</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero3(name) <span class="keyword">value</span>(<span class="string">&#x27;貂蝉&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> hero3</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入相同的名字出现name重复： Duplicate entry &#x27;貂蝉&#x27; for key &#x27;hero3.name&#x27;</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero3(name) <span class="keyword">value</span>(<span class="string">&#x27;貂蝉&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入多个null不会报错，因为null是没有值，所以不存在重复的问题</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero3(name) <span class="keyword">value</span>(<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero3(name) <span class="keyword">value</span>(<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><h3 id="5-3-非空"><a href="#5-3-非空" class="headerlink" title="5.3 非空"></a>5.3 非空</h3><blockquote><p>这个字段必须设置值，不能是null</p></blockquote><h4 id="5-3-1-非空约束的格式"><a href="#5-3-1-非空约束的格式" class="headerlink" title="5.3.1 非空约束的格式"></a>5.3.1 非空约束的格式</h4><p><code>字段名 字段类型 not null</code></p><p>具体操作：</p><ul><li>创建表英雄hero4，包含字段<code>(id,name,gender)</code>，其中name不能为null</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> hero4(id <span class="type">int</span>,name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,gender <span class="type">char</span>(<span class="number">2</span>));</span><br></pre></td></tr></table></figure><ul><li>添加一条完整的记录</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero4 <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero4 <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;张三2&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 姓名不能设置为null： Column &#x27;name&#x27; cannot be null</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero4 <span class="keyword">values</span>(<span class="number">3</span>,<span class="keyword">null</span>,<span class="string">&#x27;男&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="5-3-2-默认值"><a href="#5-3-2-默认值" class="headerlink" title="5.3.2 默认值"></a>5.3.2 默认值</h3><blockquote><p>往表中添加数据时，如果不指定这个字段的数据，就使用默认值</p></blockquote><p>默认值格式：</p><p><code>字段名 字段类型 default 默认值</code></p><p>具体实现：</p><ul><li>创建一个英雄表hero5，包含<code>(id,name,location)</code>，默认定位是射手</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> hero5(id <span class="type">int</span>,name <span class="type">varchar</span>(<span class="number">20</span>),location <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">default</span> <span class="string">&#x27;射手&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>添加一条记录，使用默认定位</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero5 (id,name) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;后裔&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>添加一条记录，不使用默认定位</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> hero5 (id,name,location) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;小乔&#x27;</span>,<span class="string">&#x27;法师&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux操作MongoDB</title>
      <link href="/2023/11/11/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB/Linux%E6%93%8D%E4%BD%9CMongoDB/"/>
      <url>/2023/11/11/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB/Linux%E6%93%8D%E4%BD%9CMongoDB/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>1.查看mongodb进程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux |grep mongodb</span><br></pre></td></tr></table></figure><p>2.进入mongodb启动目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/mongodb/mongodb-5.0.5/bin</span><br></pre></td></tr></table></figure><p>3.杀死mongodb的进程:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -2 11884</span><br></pre></td></tr></table></figure><p>4.重启mongodb:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mongod --config mongodb.conf</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190626161001276.png" alt="img"></p><p>关闭数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod --journal --shutdown -f ./mongodb.conf</span><br></pre></td></tr></table></figure><p>开启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod --journal -f ./mongodb.conf</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB基础</title>
      <link href="/2023/11/11/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB/%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/11/11/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB/%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="bson"><a href="#bson" class="headerlink" title="bson"></a>bson</h2><ul><li>bson.D<ul><li>有序的文档类型,键值对会按添加顺序排序</li><li>键必须是字符串类型</li><li>值可以是任意类型</li></ul></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">doc := bson.D&#123;</span><br><span class="line">    &#123;<span class="string">&quot;name&quot;</span>, <span class="string">&quot;John&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;age&quot;</span>,  <span class="number">30</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;hobbies&quot;</span>, bson.A&#123;<span class="string">&quot;music&quot;</span>, <span class="string">&quot;skiing&quot;</span>&#125;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>bson.M<ul><li>无序的文档类型,键值对不保证顺序</li><li>键可以是任意类型,不限于字符串</li><li>值也可以是任意类型</li></ul></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">m := bson.M&#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">    <span class="string">&quot;age&quot;</span>:  <span class="number">30</span>,</span><br><span class="line">    <span class="number">5</span>:      <span class="string">&quot;address&quot;</span>,  <span class="comment">// 键可以是非字符串</span></span><br><span class="line">    bson.A&#123;<span class="string">&quot;music&quot;</span>, <span class="string">&quot;skiing&quot;</span>&#125;: <span class="string">&quot;hobbies&quot;</span> <span class="comment">// 键也可以是文档 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><blockquote><p>如果数据库不存在，则创建数据库，否则切换到指定数据库。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use runoob</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use database</span><br></pre></td></tr></table></figure><h3 id="查看所有数据库"><a href="#查看所有数据库" class="headerlink" title="查看所有数据库"></a>查看所有数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> dbs</span><br></pre></td></tr></table></figure><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 需要先切换到数据库在删除</span></span><br><span class="line">use test</span><br><span class="line">db.dropDatabase()</span><br></pre></td></tr></table></figure><h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建一个管理员权限的用户</span></span><br><span class="line">db.createUser(&#123;<span class="keyword">user</span>:&quot;root&quot;,pwd:&quot;123456&quot;,roles:[&#123;role:&quot;root&quot;,db:&quot;admin&quot;&#125;]&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建一个对某个数据库有读写权限的用户</span></span><br><span class="line">db.createUser(&#123;<span class="keyword">user</span>:&quot;user&quot;,pwd:&quot;123456&quot;,roles:[&#123;role:&quot;readWrite&quot;,db:&quot;test&quot;&#125;]&#125;)</span><br></pre></td></tr></table></figure><h4 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h4><h5 id="查看当前库的用户"><a href="#查看当前库的用户" class="headerlink" title="查看当前库的用户"></a>查看当前库的用户</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 先切换到数据库</span></span><br><span class="line">use admin</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看当前库的用户</span></span><br><span class="line"><span class="keyword">show</span> users</span><br></pre></td></tr></table></figure><h5 id="查看所有库的用户"><a href="#查看所有库的用户" class="headerlink" title="查看所有库的用户"></a>查看所有库的用户</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 先切换到数据库</span></span><br><span class="line">use admin</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 显示所有库的用户</span></span><br><span class="line">db.system.users.find()</span><br></pre></td></tr></table></figure><h4 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 进入到库</span></span><br><span class="line">use test</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除当前库的某个用户</span></span><br><span class="line">db.dropUser(&quot;user&quot;)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 再次查看所有用户</span></span><br><span class="line">use admin</span><br><span class="line">db.system.users.find()</span><br></pre></td></tr></table></figure><h3 id="内置角色"><a href="#内置角色" class="headerlink" title="内置角色"></a>内置角色</h3><blockquote><p>非root，都是值对非系统库的操作！！！！！！！</p></blockquote><ul><li>root：超级权限</li><li>readWrite：对某个库的读写权限</li><li>read：对某个库的读权限</li><li>readWriteAnyDatabase：对所有库的读写权限</li></ul><h2 id="集合（表）"><a href="#集合（表）" class="headerlink" title="集合（表）"></a>集合（表）</h2><blockquote><p>MongoDB 中默认的数据库为 test，如果你没有创建新的数据库，集合将存放在 test 数据库中。</p></blockquote><h3 id="创建集合"><a href="#创建集合" class="headerlink" title="创建集合"></a>创建集合</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(&quot;one&quot;)</span><br></pre></td></tr></table></figure><h3 id="查看所有集合"><a href="#查看所有集合" class="headerlink" title="查看所有集合"></a>查看所有集合</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables</span><br><span class="line"><span class="comment">-- 或者</span></span><br><span class="line"><span class="keyword">show</span> collections</span><br></pre></td></tr></table></figure><h3 id="删除集合"><a href="#删除集合" class="headerlink" title="删除集合"></a>删除集合</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.one.drop()</span><br></pre></td></tr></table></figure><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><h3 id="插入文档"><a href="#插入文档" class="headerlink" title="插入文档"></a>插入文档</h3><p>MongoDB 使用 insert() 或 save() 方法向集合中插入文档，语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">db.one.insert(&#123;name:&quot;zhang&quot;&#125;)</span><br><span class="line">db.one.insert(&#123;name:&quot;zhang&quot;，age：<span class="number">20</span>&#125;)</span><br><span class="line"></span><br><span class="line">db.one.save(&#123;name:&quot;zhang&quot;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- insertMany</span></span><br><span class="line">db.one.insertMany([&#123;name:&quot;lisi&quot;,age:<span class="number">11</span>&#125;,&#123;name:&quot;zs&quot;,age:<span class="number">99</span>&#125;])</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 循环插入文档</span></span><br><span class="line"><span class="keyword">for</span> (var i<span class="operator">=</span><span class="number">1</span>;i<span class="operator">&lt;=</span><span class="number">100</span>;i<span class="operator">+</span><span class="operator">+</span>) db.one.insert(&#123;num:i,name:&quot;a&quot;&#125;)</span><br></pre></td></tr></table></figure><ul><li>save()：如果 _id 主键存在则更新数据，如果不存在就插入数据。该方法新版本中已废弃，可以使用 <strong>db.collection.insertOne()</strong> 或 <strong>db.collection.replaceOne()</strong> 来代替。</li><li>insert(): 若插入的数据主键已经存在，则会抛 <strong>org.springframework.dao.DuplicateKeyException</strong> 异常，提示主键重复，不保存当前数据。</li><li>insertMany(): 用于向集合插入一个多个文档。</li></ul><h3 id="查询文档"><a href="#查询文档" class="headerlink" title="查询文档"></a>查询文档</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询所有</span></span><br><span class="line">db.one.find()</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询单条</span></span><br><span class="line">db.one.find(&#123;name:&quot;lisi&quot;&#125;)</span><br></pre></td></tr></table></figure><h4 id="查文档总数"><a href="#查文档总数" class="headerlink" title="查文档总数"></a>查文档总数</h4><blockquote><p>count方法已被弃用</p></blockquote><ul><li>countDocuments</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询文档总数</span></span><br><span class="line">db.one.countDocuments()</span><br></pre></td></tr></table></figure><h3 id="更新文档"><a href="#更新文档" class="headerlink" title="更新文档"></a>更新文档</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.one.update(&#123;name:&quot;zhan&quot;&#125;,&#123;$<span class="keyword">set</span>:&#123;name:&quot;li&quot;&#125;&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>updateOne()</code> ：用于更新单个文档。它的返回值是一个 <code>UpdateResult</code> 对象，该对象包含了关于更新操作的详细信息。<ul><li><code>acknowledged</code>: 布尔类型，表示更新操作是否被 MongoDB 服务器成功确认。</li><li><code>matchedCount</code>: 整数类型，表示符合筛选条件的文档数量。</li><li><code>modifiedCount</code>: 整数类型，表示实际被更新的文档数量。</li><li><code>upsertedCount</code>: 整数类型，表示在执行更新操作时，如果指定的文档不存在，则插入新的文档的数量。</li><li><code>upsertedId</code>: 对象类型，表示在执行更新操作时，如果插入新文档，则返回新文档的 <code>_id</code> 值。</li></ul></li></ul><h3 id="删除文档"><a href="#删除文档" class="headerlink" title="删除文档"></a>删除文档</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除单条</span></span><br><span class="line">db.one.remove(&#123;name:&quot;lisi&quot;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除全部</span></span><br><span class="line">db.one.remove(&#123;&#125;)</span><br></pre></td></tr></table></figure><h3 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h3><ul><li>(&gt;) 大于 - $gt</li><li>(&lt;) 小于 - $lt</li><li>(&gt;&#x3D;) 大于等于 - $gte</li><li>(&lt;&#x3D; ) 小于等于 - $lte</li><li>(!&#x3D;) 不等于 - $ne</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 大于 </span></span><br><span class="line">db.one.find(&#123;num:&#123;$gt:<span class="number">20</span>&#125;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 大于等于</span></span><br><span class="line">db.one.find(&#123;num:&#123;$gte:<span class="number">20</span>&#125;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 小于</span></span><br><span class="line">db.one.find(&#123;num:&#123;$lt:<span class="number">20</span>&#125;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 小于等于</span></span><br><span class="line">db.one.find(&#123;num:&#123;$lte:<span class="number">20</span>&#125;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 不等于</span></span><br><span class="line">db.one.find(&#123;num:&#123;$ne:<span class="number">66</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><h3 id="逻辑操作符"><a href="#逻辑操作符" class="headerlink" title="逻辑操作符"></a>逻辑操作符</h3><ul><li>$and - 并且</li><li>$or - 或者</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">-</span>$<span class="keyword">and</span></span><br><span class="line"><span class="comment">-- 下面两行相等</span></span><br><span class="line">db.runoob.find(&#123;$<span class="keyword">and</span>:[&#123;name:&quot;lisi&quot;&#125;,&#123;age:<span class="number">11</span>&#125;]&#125;)</span><br><span class="line">db.runoob.find(&#123;name:&quot;lisi&quot;,age:<span class="number">11</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- $or</span></span><br><span class="line">db.col.find(&#123;$<span class="keyword">or</span>:[&#123;key1:value1&#125;,&#123;key2:value2&#125;]&#125;)</span><br></pre></td></tr></table></figure><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><ul><li>sort<ul><li>1：升序</li><li>-1：降序</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- age升序</span></span><br><span class="line">db.one.find().sort(&#123;&quot;age&quot;:<span class="number">1</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 年龄大于20的，按年龄升序排序</span></span><br><span class="line">db.one.find(&#123;age:&#123;$gt:<span class="number">20</span>&#125;&#125;).sort(&#123;&quot;age&quot;:<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="聚合"><a href="#聚合" class="headerlink" title="聚合"></a>聚合</h3><ul><li>aggregate</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- db.three.aggregate([&#123;&quot;分组&quot;:&#123;_id:&quot;分组字段值&quot;,&quot;聚合输出的键名（平均值/求和...）&quot;:&#123;&quot;平均值/求和...&quot;:&quot;字段值&quot;&#125;&#125;&#125;])</span></span><br><span class="line"><span class="comment">-- 分组的字段名必须是 _id 不能更改！！！</span></span><br><span class="line">db.three.aggregate([&#123;&quot;$group&quot;:&#123;_id:&quot;$class&quot;,&quot;sum_score&quot;:&#123;&quot;$sum&quot;:&quot;$score&quot;&#125;&#125;&#125;])</span><br></pre></td></tr></table></figure><h4 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h4><ul><li>$group</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.three.aggregate([&#123;&quot;$group&quot;:&#123;_id:&quot;$class&quot;,&quot;sum_score&quot;:&#123;&quot;$sum&quot;:&quot;$score&quot;&#125;&#125;&#125;])</span><br></pre></td></tr></table></figure><h4 id="求和"><a href="#求和" class="headerlink" title="求和"></a>求和</h4><ul><li>$sum</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.three.aggregate([&#123;&quot;$group&quot;:&#123;_id:&quot;$class&quot;,&quot;sum_score&quot;:&#123;&quot;$sum&quot;:&quot;$score&quot;&#125;&#125;&#125;])</span><br></pre></td></tr></table></figure><h4 id="平均"><a href="#平均" class="headerlink" title="平均"></a>平均</h4><ul><li>$avg</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.three.aggregate([&#123;&quot;$group&quot;:&#123;_id:&quot;$class&quot;,&quot;avg_score&quot;:&#123;&quot;$avg&quot;:&quot;$score&quot;&#125;&#125;&#125;])</span><br></pre></td></tr></table></figure><h4 id="最大值"><a href="#最大值" class="headerlink" title="最大值"></a>最大值</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.three.aggregate([&#123;&quot;$group&quot;:&#123;_id:&quot;$class&quot;,&quot;max_score&quot;:&#123;&quot;$max&quot;:&quot;$score&quot;&#125;&#125;&#125;])</span><br></pre></td></tr></table></figure><h4 id="最小值"><a href="#最小值" class="headerlink" title="最小值"></a>最小值</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.three.aggregate([&#123;&quot;$group&quot;:&#123;_id:&quot;$class&quot;,&quot;min_score&quot;:&#123;&quot;$min&quot;:&quot;$score&quot;&#125;&#125;&#125;])</span><br></pre></td></tr></table></figure><h3 id="Limit与Skip"><a href="#Limit与Skip" class="headerlink" title="Limit与Skip"></a>Limit与Skip</h3><blockquote><p>一般用于分页</p></blockquote><ul><li>limit：获取几条</li><li>skip：跳过几条</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.three.find().limit(<span class="number">2</span>).<span class="keyword">skip</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p>略</p><h3 id="查询计划"><a href="#查询计划" class="headerlink" title="查询计划"></a>查询计划</h3><p>略  </p><h3 id="慢查询"><a href="#慢查询" class="headerlink" title="慢查询"></a>慢查询</h3><p>略</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>electron 输出中文</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/electron/%E8%BE%93%E5%87%BA%E4%B8%AD%E6%96%87/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/electron/%E8%BE%93%E5%87%BA%E4%B8%AD%E6%96%87/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>我们可能在Windows的控制台会出现中文<a href="https://so.csdn.net/so/search?q=%E4%B9%B1%E7%A0%81&spm=1001.2101.3001.7020">乱码</a>的问题，当我们在Windows的控制台下输入chcp,可以查看到当前字符编码，常见的gb2312的值是936，utf8的值是65001。这种情况下只要对package.json进行设置就能解决。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chcp <span class="number">65001</span> &amp;&amp; nodemon --watch main.js --exec electron .</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>electron 常用第三方库</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/electron/%E5%B8%B8%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/electron/%E5%B8%B8%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @electron/remote 使用远程</span></span><br><span class="line"><span class="comment">// electron-is-dev 判断是不是开发环境</span></span><br><span class="line"><span class="comment">// concurrently 并行命令</span></span><br><span class="line"><span class="comment">// wait-on 等待某个url加载完成再执行</span></span><br><span class="line"><span class="comment">// cross-env 跨平台获取环境变量</span></span><br><span class="line"><span class="comment">// electron-store 存储本地</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行 npm run dev</span></span><br><span class="line"><span class="comment">// 等待 http://localhost:3000 加载完再启动electron，把环境变量的浏览器设为none，执行npm start时浏览器就不启动，</span></span><br><span class="line"><span class="comment">// &quot;dev&quot;: &quot;concurrently \&quot;wait-on http://localhost:3000 &amp;&amp; npm run ele\&quot; \&quot; cross-env BROWSER=none  npm start\&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// package.json</span></span><br><span class="line"> <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;start&quot;</span>: <span class="string">&quot;react-scripts start&quot;</span>,</span><br><span class="line">        <span class="string">&quot;build&quot;</span>: <span class="string">&quot;react-scripts build&quot;</span>,</span><br><span class="line">        <span class="string">&quot;test&quot;</span>: <span class="string">&quot;react-scripts test&quot;</span>,</span><br><span class="line">        <span class="string">&quot;eject&quot;</span>: <span class="string">&quot;react-scripts eject&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ele&quot;</span>: <span class="string">&quot;electron .&quot;</span>,</span><br><span class="line">        <span class="string">&quot;dev&quot;</span>: <span class="string">&quot;concurrently \&quot;wait-on http://localhost:3000 &amp;&amp; npm run ele\&quot; \&quot; cross-env BROWSER=none  npm start\&quot;&quot;</span></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h2 id="electron-store"><a href="#electron-store" class="headerlink" title="electron-store"></a>electron-store</h2><p>渲染进程使用 electron-store 时，必须在 main.js 初始化，否则每次启动加载缓慢</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">main.<span class="property">js</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Store</span> = <span class="built_in">require</span>(<span class="string">&quot;electron-store&quot;</span>);</span><br><span class="line"><span class="title class_">Store</span>.<span class="title function_">initRenderer</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>electron 基础使用</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/electron/%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/electron/%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="初始"><a href="#初始" class="headerlink" title="初始"></a>初始</h2><p>main.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; app, <span class="title class_">BrowserWindow</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;electron&quot;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">on</span>(<span class="string">&quot;ready&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//  new BrowserWindow() 创建窗口</span></span><br><span class="line">  <span class="keyword">const</span> mainWindow = <span class="keyword">new</span> <span class="title class_">BrowserWindow</span>(&#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">800</span>, <span class="comment">// 窗口宽度</span></span><br><span class="line">    <span class="attr">height</span>: <span class="number">600</span>, <span class="comment">// 窗口高度</span></span><br><span class="line">    <span class="attr">webPreferences</span>: &#123;</span><br><span class="line">      <span class="comment">// 网页功能设置</span></span><br><span class="line">      <span class="attr">nodeIntegration</span>: <span class="literal">true</span>, <span class="comment">// 是否集成node</span></span><br><span class="line">      <span class="comment">// 上下文隔离</span></span><br><span class="line">      <span class="attr">contextIsolation</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="comment">// 启用远程</span></span><br><span class="line">      <span class="attr">enableRemoteModule</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  mainWindow.<span class="title function_">loadFile</span>(<span class="string">&quot;index.html&quot;</span>); <span class="comment">// 加载文件</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// const secondWindow = new BrowserWindow(&#123;</span></span><br><span class="line">  <span class="comment">//   width: 400,</span></span><br><span class="line">  <span class="comment">//   height: 300,</span></span><br><span class="line">  <span class="comment">//   webPreferences: &#123;</span></span><br><span class="line">  <span class="comment">//     nodeIntegration: true,</span></span><br><span class="line">  <span class="comment">//   &#125;,</span></span><br><span class="line">  <span class="comment">//   parent: mainWindow, // 设置父级窗口，父级窗口关闭，当前窗口也关闭</span></span><br><span class="line">  <span class="comment">// &#125;);</span></span><br><span class="line">  <span class="comment">// secondWindow.loadFile(&quot;second.html&quot;);</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>renderer.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;DOMContentLoaded&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//Dom 渲染完即可执行 此时图片视频还可能没加载完</span></span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;DOMContentLoaded&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="通信-ipc"><a href="#通信-ipc" class="headerlink" title="通信 ipc"></a>通信 ipc</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 渲染进程 renderer,js</span></span><br><span class="line"><span class="keyword">const</span> &#123; ipcRenderer &#125; = <span class="built_in">require</span>(<span class="string">&quot;electron&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;DOMContentLoaded&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;node-version&quot;</span>).<span class="property">innerHTML</span> = process.<span class="property">versions</span>.<span class="property">node</span>;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;send-main&quot;</span>).<span class="property">onclick</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 给主进程发送消息</span></span><br><span class="line">    ipcRenderer.<span class="title function_">send</span>(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;from renderer&quot;</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 监听消息</span></span><br><span class="line">  ipcRenderer.<span class="title function_">on</span>(<span class="string">&quot;reply&quot;</span>, <span class="function">(<span class="params">e, arg</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;message&quot;</span>).<span class="property">innerHTML</span> = arg;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 主进程 main.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; app, <span class="title class_">BrowserWindow</span>, ipcMain &#125; = <span class="built_in">require</span>(<span class="string">&quot;electron&quot;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">on</span>(<span class="string">&quot;ready&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 安装devtron</span></span><br><span class="line">  <span class="keyword">const</span> mainWindow = <span class="keyword">new</span> <span class="title class_">BrowserWindow</span>(&#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">1800</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">1600</span>,</span><br><span class="line">    <span class="attr">webPreferences</span>: &#123;</span><br><span class="line">      <span class="attr">nodeIntegration</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">contextIsolation</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">enableRemoteModule</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  mainWindow.<span class="title function_">loadFile</span>(<span class="string">&quot;./index.html&quot;</span>);</span><br><span class="line">  <span class="comment">// 打开 开发者工具</span></span><br><span class="line">  mainWindow.<span class="property">webContents</span>.<span class="title function_">openDevTools</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 接收渲染进程传递过来的消息，第一个是事件，第二个是传递的参数</span></span><br><span class="line">  ipcMain.<span class="title function_">on</span>(<span class="string">&quot;message&quot;</span>, <span class="function">(<span class="params">e, arg</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arg);</span><br><span class="line">    <span class="comment">// 给渲染进程回复信息</span></span><br><span class="line">    e.<span class="title function_">reply</span>(<span class="string">&quot;reply&quot;</span>, <span class="string">&quot;from main&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// const secondWindow = new BrowserWindow(&#123;</span></span><br><span class="line">  <span class="comment">//   width: 600,</span></span><br><span class="line">  <span class="comment">//   height: 400,</span></span><br><span class="line">  <span class="comment">//   webPreferences: &#123;</span></span><br><span class="line">  <span class="comment">//     nodeIntegration: true,</span></span><br><span class="line">  <span class="comment">//     contextIsolation: false,</span></span><br><span class="line">  <span class="comment">//     enableRemoteModule: true,</span></span><br><span class="line">  <span class="comment">//   &#125;,</span></span><br><span class="line">  <span class="comment">//   // parent: mainWindow,</span></span><br><span class="line">  <span class="comment">// &#125;);</span></span><br><span class="line">  <span class="comment">// secondWindow.loadFile(&quot;./second.html&quot;);</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用remote"><a href="#使用remote" class="headerlink" title="使用remote"></a>使用remote</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装 @electron/remote</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 主进程</span></span><br><span class="line"><span class="keyword">const</span> &#123; app, <span class="title class_">BrowserWindow</span>, ipcMain &#125; = <span class="built_in">require</span>(<span class="string">&quot;electron&quot;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">on</span>(<span class="string">&quot;ready&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 安装devtron</span></span><br><span class="line">  <span class="keyword">const</span> mainWindow = <span class="keyword">new</span> <span class="title class_">BrowserWindow</span>(&#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">1800</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">1600</span>,</span><br><span class="line">    <span class="attr">webPreferences</span>: &#123;</span><br><span class="line">      <span class="attr">nodeIntegration</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">contextIsolation</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">enableRemoteModule</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  mainWindow.<span class="title function_">loadFile</span>(<span class="string">&quot;./index.html&quot;</span>);</span><br><span class="line">  <span class="comment">// 打开 开发者工具</span></span><br><span class="line">  mainWindow.<span class="property">webContents</span>.<span class="title function_">openDevTools</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//初始化远程模块的主进程端</span></span><br><span class="line">  <span class="built_in">require</span>(<span class="string">&quot;@electron/remote/main&quot;</span>).<span class="title function_">initialize</span>();</span><br><span class="line">  <span class="comment">// 启用webContents 远程</span></span><br><span class="line">  <span class="built_in">require</span>(<span class="string">&quot;@electron/remote/main&quot;</span>).<span class="title function_">enable</span>(mainWindow.<span class="property">webContents</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 渲染进程</span></span><br><span class="line"><span class="keyword">const</span> &#123; ipcRenderer &#125; = <span class="built_in">require</span>(<span class="string">&quot;electron&quot;</span>);</span><br><span class="line"><span class="comment">// 这里的@electron/remote就相当于main process</span></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">BrowserWindow</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;@electron/remote&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;DOMContentLoaded&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 点击完，新开窗口</span></span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;send-main&quot;</span>).<span class="property">onclick</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> win = <span class="keyword">new</span> <span class="title class_">BrowserWindow</span>(&#123;</span><br><span class="line">      <span class="attr">width</span>: <span class="number">800</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="number">600</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    win.<span class="title function_">loadURL</span>(<span class="string">&quot;http://baidu.com&quot;</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>electron 基础概念</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/electron/%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/electron/%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="主进程-Main-Process"><a href="#主进程-Main-Process" class="headerlink" title="主进程 Main Process"></a>主进程 Main Process</h2><ul><li>可以使用和系统对接的Electron API - 创建菜单，上传文件等</li><li>创建渲染进程 - Renderer Process</li><li>全面支持Node.js</li><li>只有一个，作为整个程序的入口点</li></ul><h2 id="渲染进程-Renderer-Process"><a href="#渲染进程-Renderer-Process" class="headerlink" title="渲染进程 - Renderer Process"></a>渲染进程 - Renderer Process</h2><ul><li>可以有多个，每个对应一个窗口</li><li>每个都是一个单独的进程</li><li>全面支持Node.js 和 DOM API</li><li>可以使用一部分 Electron 提供的 API</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue key的作用</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/key%E7%9A%84%E4%BD%9C%E7%94%A8/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/key%E7%9A%84%E4%BD%9C%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="Vue-中-v-if-和-v-for-为何不能连用"><a href="#Vue-中-v-if-和-v-for-为何不能连用" class="headerlink" title="Vue 中 v-if 和 v-for 为何不能连用"></a>Vue 中 v-if 和 v-for 为何不能连用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v-<span class="keyword">for</span>优先执行，会创建对应的dom节点，如果v-<span class="keyword">if</span>为<span class="literal">false</span>，会删除这个dom节点；这样创建后再删除，会造成页面卡顿。</span><br><span class="line"><span class="comment">// 可以在v-for里面用v-if只显示符合条件的数组数据，但效率会低，所以一般是先提取需要的数据再用v-for</span></span><br></pre></td></tr></table></figure><h2 id="vue-中-key-的作用"><a href="#vue-中-key-的作用" class="headerlink" title="vue 中:key 的作用"></a>vue 中:key 的作用</h2><p><a href="https://www.jianshu.com/p/5d771cf57012">https://www.jianshu.com/p/5d771cf57012</a></p><p>使用 key <br><br><img src="https://upload-images.jianshu.io/upload_images/13201627-c3e12cdb02d59c24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/477/format/webp"></p><p>不使用 key，则 diff 算法默认是这样的： <br><br><img src="https://upload-images.jianshu.io/upload_images/13201627-9d6226c6268a341b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/572/format/webp"></p><p>即把 C 更新成 F，D 更新成 C，E 更新成 D，最后再插入 E，是不是很没有效率？ 更新了 3 次，之后做了一次创建插入的操作<br>所以我们需要使用 key 来给每个节点做一个唯一标识，Diff 算法就可以正确的识别此节点，找到正确的位置区插入新的节点。</p><p><img src="https://upload-images.jianshu.io/upload_images/13201627-d0b3a1577860fda9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/452/format/webp"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue watch</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/watch/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/watch/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="watch"><a href="#watch" class="headerlink" title="watch"></a>watch</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> sum = <span class="title function_">ref</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/* 监听ref 基本类型 */</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// ！！！！！！！！！！不能这么监听，因为这样就相当于监听0值</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// watch(sum.value,(newVal,oldVal)=&gt;&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//     console.log(newVal,oldVal)</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 正确监听</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">watch</span>(<span class="function">()=&gt;</span>sum.<span class="property">value</span>,<span class="function">(<span class="params">newVal,oldVal</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(newVal,oldVal)</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/* 监听ref 对象类型 */</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> obj = <span class="title function_">ref</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 正确监听</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 这里的监听相当于监听ref 里面的reactive对象。而不是ref基本类型的值</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">watch</span>(obj.<span class="property">value</span>,<span class="function">(<span class="params">newVal,oldVal</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(newVal,oldVal)</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="watchEffect"><a href="#watchEffect" class="headerlink" title="watchEffect"></a>watchEffect</h2><ol><li><code>watchEffect</code> 回调里，用到了什么数据，就监听什么数据</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;ref,watchEffect&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> count = <span class="title function_">ref</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">watchEffect</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;watchEffect&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue 结合ts</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E7%BB%93%E5%90%88ts/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E7%BB%93%E5%90%88ts/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="defineProps-defineEmits"><a href="#defineProps-defineEmits" class="headerlink" title="defineProps &amp; defineEmits"></a>defineProps &amp; defineEmits</h2><p>注：在使用了 <code>script setup</code> 如果script里不需要用到props可以不接收，因为在模板里可以直接使用父级传递的值，无需<code>props.xxx</code>!!!!!!!!!</p><p>无ts用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">// 数组</span><br><span class="line">const props = defineProps([&#x27;foo&#x27;])</span><br><span class="line">console.log(props.foo)</span><br><span class="line">    </span><br><span class="line">// 对象</span><br><span class="line">const props = defineProps(&#123;</span><br><span class="line">  title: String,</span><br><span class="line">  likes: Number</span><br><span class="line">&#125;)</span><br><span class="line">console.log(props.foo)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>以下组件使用ts：</p><ol><li><code>defineEmits</code>：使用了<code>v-model</code>加 <code>update</code>结合使用，这样无需在父组件在写一个方法接收，调用修改值</li><li><code>defineProps</code>：子组件使用了 泛型参数来定义 props 的类型</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">// 父组件</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import NavHeader from &#x27;@/components/container/navHeader/index.vue&#x27;</span><br><span class="line">import NavSide from &#x27;@/components/container/navSide/index.vue&#x27;</span><br><span class="line"></span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">const isCollapse = ref(false)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;common-layout&quot;&gt;</span><br><span class="line">    &lt;el-container&gt;</span><br><span class="line">      &lt;el-aside width=&quot;auto&quot;&gt;</span><br><span class="line">        &lt;NavSide :collapse=&quot;isCollapse&quot; /&gt;</span><br><span class="line">      &lt;/el-aside&gt;</span><br><span class="line">      &lt;el-container&gt;</span><br><span class="line">        &lt;el-header&gt;</span><br><span class="line">          &lt;NavHeader v-model:collapse=&quot;isCollapse&quot; /&gt;</span><br><span class="line">        &lt;/el-header&gt;</span><br><span class="line">      &lt;/el-container&gt;</span><br><span class="line">    &lt;/el-container&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 子组件1</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">const props = defineProps&lt;&#123; collapse: boolean &#125;&gt;()</span><br><span class="line">const emits = defineEmits([&#x27;update:collapse&#x27;])</span><br><span class="line">const toggle = () =&gt; &#123;</span><br><span class="line">  emits(&#x27;update:collapse&#x27;, !props.collapse)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;span @click=&quot;toggle&quot;&gt;</span><br><span class="line">    &lt;el-icon-expand v-if=&quot;collapse&quot;&gt;&lt;/el-icon-expand&gt;</span><br><span class="line">    &lt;el-icon-fold v-else&gt;&lt;/el-icon-fold&gt;</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// 子组件2</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line"></span><br><span class="line">const props = defineProps&lt;&#123; collapse: boolean &#125;&gt;()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-menu class=&quot;el-menu-vertical-demo&quot; :collapse=&quot;collapse&quot; default-active=&quot;1&quot;&gt;</span><br><span class="line">    &lt;el-menu-item index=&quot;1&quot;&gt;</span><br><span class="line">      &lt;el-icon&gt;&lt;el-icon-menu /&gt;&lt;/el-icon&gt;</span><br><span class="line">      &lt;span&gt;导航1&lt;/span&gt;</span><br><span class="line">    &lt;/el-menu-item&gt;</span><br><span class="line">    &lt;el-menu-item index=&quot;2&quot;&gt;</span><br><span class="line">      &lt;el-icon&gt;&lt;el-icon-menu /&gt;&lt;/el-icon&gt;</span><br><span class="line">      &lt;span&gt;导航2&lt;/span&gt;</span><br><span class="line">    &lt;/el-menu-item&gt;</span><br><span class="line">    &lt;el-menu-item index=&quot;3&quot;&gt;</span><br><span class="line">      &lt;el-icon&gt;&lt;el-icon-menu /&gt;&lt;/el-icon&gt;</span><br><span class="line">      &lt;span&gt;导航3&lt;/span&gt;</span><br><span class="line">    &lt;/el-menu-item&gt;</span><br><span class="line">  &lt;/el-menu&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-menu-vertical-demo:not(.el-menu--collapse) &#123;</span><br><span class="line">  width: 200px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue 响应式数据的判断</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E5%93%8D%E5%BA%94%E5%BC%8F%E6%95%B0%E6%8D%AE%E7%9A%84%E5%88%A4%E6%96%AD/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E5%93%8D%E5%BA%94%E5%BC%8F%E6%95%B0%E6%8D%AE%E7%9A%84%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ul><li><strong>isRef</strong>: 检查一个值是否为一个 <code>ref</code> 对象</li><li><strong>isReactive</strong>: 检查一个对象是否是由 <code>reactive</code> 创建的响应式代理</li><li><strong>isReadonly</strong>: 检查一个对象是否是由 <code>readonly</code> 创建的只读代理</li><li><strong>isProxy</strong>: 检查一个对象是否是由 <code>reactive</code> 或者 <code>readonly</code> 方法创建的代理。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> state1 = <span class="title function_">ref</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isref:&#x27;</span>, <span class="title function_">isRef</span>(state1));<span class="comment">//isref: true</span></span><br><span class="line">    <span class="keyword">const</span> state2 = <span class="title function_">reactive</span>(&#123;&#125;);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isReactive:&#x27;</span>, <span class="title function_">isReactive</span>(state2));<span class="comment">//isReactive: true</span></span><br><span class="line">    <span class="keyword">const</span> state3 = <span class="title function_">readonly</span>(&#123;&#125;);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isReadonly:&#x27;</span>, <span class="title function_">isReadonly</span>(state3));<span class="comment">//isReadonly: true</span></span><br><span class="line">    <span class="keyword">const</span> state4 = <span class="title function_">reactive</span>(&#123;&#125;);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isProxy:&#x27;</span>, <span class="title function_">isProxy</span>(state2));<span class="comment">//isProxy: true</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isProxy:&#x27;</span>, <span class="title function_">isProxy</span>(state4));<span class="comment">//isProxy: true</span></span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue proxy</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/proxy/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/proxy/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> person = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&#x27;John&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>:<span class="number">12</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Proxy</span>(person,&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">get</span>(<span class="params">target,propName</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;读取p的&#x27;</span>+propName+<span class="string">&#x27;属性&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> target[propName]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">set</span>(<span class="params">target,propName,value</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">             <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;修改或新增p的&#x27;</span>+propName+<span class="string">&#x27;属性&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">             target[propName] = value</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">deleteProperty</span>(<span class="params">target,propName</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;删除p的&#x27;</span>+propName+<span class="string">&#x27;属性&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="keyword">delete</span> target[propName]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue setup script语法糖</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/setup%E8%AF%AD%E6%B3%95%E7%B3%96/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/setup%E8%AF%AD%E6%B3%95%E7%B3%96/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>setup script<code>语法糖提供了三个新的</code>API<code>来供我们使用：</code>defineProps<code>、</code>defineEmit<code>和</code>useContext</p><ul><li><strong>defineProps</strong> 用来接收父组件传来的值<code>props</code>。</li><li><strong>defineEmit</strong>   用来声明触发的事件表。</li><li><strong>useContext</strong>  用来获取组件上下文<code>context</code>。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 父组件 --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h2&gt;我是父组件！&lt;/h2&gt;</span><br><span class="line">    &lt;Child msg=&quot;hello&quot;</span><br><span class="line">           @child-click=&quot;handleClick&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import Child from &#x27;./components/Child.vue&#x27;</span><br><span class="line"></span><br><span class="line">const handleClick = (ctx) =&gt; &#123;</span><br><span class="line">  console.log(ctx)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;span @click=&quot;sonClick&quot;&gt;msg: &#123;&#123; props.msg &#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useContext, defineProps, defineEmit &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">const emit = defineEmit([&#x27;child-click&#x27;])</span><br><span class="line">const ctx = useContext()</span><br><span class="line">const props = defineProps(&#123;</span><br><span class="line">  msg: String,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">const sonClick = () =&gt; &#123;</span><br><span class="line">  emit(&#x27;child-click&#x27;, ctx)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue 使用axios</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E4%BD%BF%E7%94%A8axios/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E4%BD%BF%E7%94%A8axios/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js引入axios或封装的js，然后使用globalProperties api挂在全局</span></span><br><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;./utils/request&#x27;</span></span><br><span class="line"><span class="comment">//全局配置</span></span><br><span class="line">app.<span class="property">config</span>.<span class="property">globalProperties</span>.<span class="property">$request</span> = request;</span><br><span class="line"><span class="comment">//页面使用</span></span><br><span class="line"><span class="comment">//setup中使用getCurrentInstanceAPI获取全局对象</span></span><br><span class="line"><span class="comment">//在获取proxy，解构出</span></span><br><span class="line"><span class="keyword">const</span> &#123;proxy&#125; = <span class="title function_">getCurrentInstance</span>()</span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(proxy)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue 响应式api</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E5%93%8D%E5%BA%94%E5%BC%8Fapi/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E5%93%8D%E5%BA%94%E5%BC%8Fapi/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="ref和reactive"><a href="#ref和reactive" class="headerlink" title="ref和reactive"></a>ref和reactive</h2><ol><li>基本类型使用<code>ref</code><ol><li><code>ref</code>是通过<code>Object.defineProperty</code>实现响应式</li><li>如果使用<code>ref</code>定义了对象类型，<code>ref</code>也会调用 <code>reactive</code>来实现响应式</li></ol></li><li>对象类型使用<code>reactive</code>。<code>reactive</code>本质是通过<code>es6</code>的<code>proxy</code>来代理对象，实现响应式</li></ol><h2 id="toRef和-toRefs"><a href="#toRef和-toRefs" class="headerlink" title="toRef和 toRefs"></a>toRef和 toRefs</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> &gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;reactive,ref,toRef,toRefs&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">setup</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> obj = <span class="title function_">reactive</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="attr">name</span>:<span class="string">&#x27;name&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="comment">// 单个取值</span></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">// 错误！！！</span></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">// 这样相当于把name的值取出来，再赋值给name，就失去响应式，需要使用toRef转换成响应式</span></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">// name:obj.name</span></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">// 用toRef包装过才是响应式</span></span></span><br><span class="line"><span class="language-javascript">         <span class="attr">name</span>:<span class="title function_">toRef</span>(obj,<span class="string">&#x27;name&#x27;</span>),</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">// reactive 解构</span></span></span><br><span class="line"><span class="language-javascript">         <span class="comment">// 这样解构出来也是响应式</span></span></span><br><span class="line"><span class="language-javascript">         ...<span class="title function_">toRefs</span>(obj)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="shallowReactive-和-shallowRef"><a href="#shallowReactive-和-shallowRef" class="headerlink" title="shallowReactive 和 shallowRef"></a>shallowReactive 和 shallowRef</h2><ol><li><code>shallowReactive</code> 包装的对象只有第一层的是响应式</li><li><code>shallowRef</code> 只处理基本类型，对象类型不处理</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> &gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;shallowReactive,shallowRef,toRef,toRefs&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">   <span class="title function_">setup</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 正常</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> count = <span class="title function_">shallowRef</span>(<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 不正常</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> obj2 = <span class="title function_">shallowRef</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="attr">name</span>:<span class="string">&#x27;name&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// shallowReactive 只处理第一层</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> obj = <span class="title function_">shallowReactive</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="attr">name</span>:<span class="string">&#x27;name&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">         obj</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="readonly-和-shallowReadonly"><a href="#readonly-和-shallowReadonly" class="headerlink" title="readonly 和 shallowReadonly"></a>readonly 和 shallowReadonly</h2><ol><li>使用<code>readonly</code>函数包装的响应式对象，无法再修改</li><li>使用<code>shallowReadonly</code>函数包装的响应式对象，第一层无法再修改，第二层及以下可以修改</li></ol><h2 id="toRaw-和-markRaw"><a href="#toRaw-和-markRaw" class="headerlink" title="toRaw 和 markRaw"></a>toRaw 和 markRaw</h2><ol><li><code>toRaw</code> 将 <code>reactive</code> 生成的响应式数据转成普通对象。只能是 <code>reactive</code> 生成的！！！！</li><li><code>markRaw</code> 标记一个对象不会转换成响应式<ol><li>比如在<code>reactive</code> 对象里新添加一个对象，不变成响应式，就使用<code>markRaw</code></li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue vue-router</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/vue-router/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/vue-router/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="全局前置守卫-beforeEach"><a href="#全局前置守卫-beforeEach" class="headerlink" title="全局前置守卫 beforeEach"></a>全局前置守卫 beforeEach</h2><ul><li>每一次跳转路由之前调用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123; ... &#125;)</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="全局解析守卫-beforeResolve"><a href="#全局解析守卫-beforeResolve" class="headerlink" title="全局解析守卫 beforeResolve"></a>全局解析守卫 beforeResolve</h2><h2 id="全局后置钩子-afterEach"><a href="#全局后置钩子-afterEach" class="headerlink" title="全局后置钩子 afterEach"></a>全局后置钩子 afterEach</h2><ul><li>每一次跳转路由之后调用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">router.<span class="title function_">afterEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="路由独享的守卫-beforeEnter"><a href="#路由独享的守卫-beforeEnter" class="headerlink" title="路由独享的守卫 beforeEnter"></a>路由独享的守卫 beforeEnter</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/foo&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Foo</span>,</span><br><span class="line">      <span class="attr">beforeEnter</span>: <span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="组件内的守卫"><a href="#组件内的守卫" class="headerlink" title="组件内的守卫"></a>组件内的守卫</h2><ol><li>通过行为跳转触发</li></ol><h3 id="beforeRouteEnter"><a href="#beforeRouteEnter" class="headerlink" title="beforeRouteEnter"></a>beforeRouteEnter</h3><h3 id="beforeRouteUpdate"><a href="#beforeRouteUpdate" class="headerlink" title="beforeRouteUpdate"></a>beforeRouteUpdate</h3><h3 id="beforeRouteLeave"><a href="#beforeRouteLeave" class="headerlink" title="beforeRouteLeave"></a>beforeRouteLeave</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Foo</span> = &#123;</span><br><span class="line">  <span class="attr">template</span>: <span class="string">`...`</span>,</span><br><span class="line">  <span class="title function_">beforeRouteEnter</span>(<span class="params">to, <span class="keyword">from</span>, next</span>) &#123;</span><br><span class="line">    <span class="comment">// 在渲染该组件的对应路由被 confirm 前调用</span></span><br><span class="line">    <span class="comment">// 不！能！获取组件实例 `this`</span></span><br><span class="line">    <span class="comment">// 因为当守卫执行前，组件实例还没被创建</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">beforeRouteUpdate</span>(<span class="params">to, <span class="keyword">from</span>, next</span>) &#123;</span><br><span class="line">    <span class="comment">// 在当前路由改变，但是该组件被复用时调用</span></span><br><span class="line">    <span class="comment">// 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，</span></span><br><span class="line">    <span class="comment">// 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。</span></span><br><span class="line">    <span class="comment">// 可以访问组件实例 `this`</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">beforeRouteLeave</span>(<span class="params">to, <span class="keyword">from</span>, next</span>) &#123;</span><br><span class="line">    <span class="comment">// 导航离开该组件的对应路由时调用</span></span><br><span class="line">    <span class="comment">// 可以访问组件实例 `this`</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目性能优化</title>
      <link href="/2023/11/11/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/%E9%A1%B9%E7%9B%AE/"/>
      <url>/2023/11/11/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下插件都是基于vite</p></blockquote><ul><li><p>加载优化：通过懒加载可以直接减少http请求，减少不需要在首屏展示的非关键信息，占用了页面加载时间</p></li><li><p>构建用户：结合主流的构建工具webpack，vite，可以合并资源，压缩资源等减少http请求数量及数据包体积</p></li><li><p>缓存优化：避免重复请求</p></li><li><p>渲染优化：是否存在不必要的重绘和回流</p></li></ul><h2 id="webpack-vite"><a href="#webpack-vite" class="headerlink" title="webpack&#x2F;vite"></a>webpack&#x2F;vite</h2><ol><li>去除生产环境的日志打印</li><li>第三方库按需加载</li><li>图片懒加载</li><li>图片压缩&#x2F;降低分辨率</li><li>资源合并：将请求的多条资源合并成少量的请求，从而减少http请求数量</li><li>启用gzip</li><li>减少 ES6 转为 ES5 的冗余代码</li></ol><h2 id="代码（vue）"><a href="#代码（vue）" class="headerlink" title="代码（vue）"></a>代码（vue）</h2><ol><li>路由懒加载</li><li>图片使用精灵图</li><li>v-for避免使用v-if</li><li>v-if 和 v-show 区分使用场景</li><li>v-for 遍历必须为 item 添加 key</li><li>事件的销毁</li></ol><h2 id="加载优化"><a href="#加载优化" class="headerlink" title="加载优化"></a>加载优化</h2><h3 id="首屏优化"><a href="#首屏优化" class="headerlink" title="首屏优化"></a>首屏优化</h3><p>浏览器显示第一屏页面所消耗的时间。以iPhone6为例 375 * 667，667后的页面就需要使用懒加载。等用户滑到对应的位置时，在渲染页面，或提前渲染</p><ol><li>懒加载：针对不是首屏的资源进行懒加载。使用懒加载插件：<ol><li>vue2：<code>vue-lazyload</code></li><li>vue3：**<a href="https://github.com/ustbhuangyi/vue3-lazy">vue3-lazy</a>**</li></ol></li></ol><h2 id="构建优化"><a href="#构建优化" class="headerlink" title="构建优化"></a>构建优化</h2><ol><li>资源压缩：体积变小，所传输的时间响应就会变少</li><li>资源合并：将请求的多条资源合并成少量的请求，从而减少http请求数量</li><li>启用gzip：<ol><li>vite插件：<code>vite-plugin-compression</code></li></ol></li><li>去除console，debug，comments注释等。<ol><li>具体看知乎文章：<a href="https://zhuanlan.zhihu.com/p/440890930?utm_id=0">https://zhuanlan.zhihu.com/p/440890930?utm_id=0</a></li></ol></li><li>图片压缩<ol><li>降低清晰度：<code>vite-plugin-imagemin</code></li></ol></li><li>按需引入组件库<ol><li>按需引入：<code>unplugin-vue-components</code></li><li>自动导入：<code>unplugin-auto-import</code></li></ol></li></ol><h2 id="渲染性能优化"><a href="#渲染性能优化" class="headerlink" title="渲染性能优化"></a>渲染性能优化</h2><h3 id="减少重排操作"><a href="#减少重排操作" class="headerlink" title="减少重排操作"></a>减少重排操作</h3><ol><li>dom元素几何属性的修改，如width，height，padding，margin，left，top等</li><li>修改dom树的结构，增加、删除、移动dom节点</li><li>获取特定的属性值，如offsetTop，scrollTop，clientWidth，clientHeight等</li></ol><h3 id="避免样式频繁修改"><a href="#避免样式频繁修改" class="headerlink" title="避免样式频繁修改"></a>避免样式频繁修改</h3><ol><li>统一修改样式</li></ol><h2 id="节流-防抖"><a href="#节流-防抖" class="headerlink" title="节流&amp;防抖"></a>节流&amp;防抖</h2><h3 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h3><p>就是将短时间的函数调用以一个固定的频率间隔执行</p><h3 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h3><p>抖动现象本质就是指短时间内高频次触发，因此，可以把短时间内的连续多个调用合并成一次，也就是只触发一次回调函数</p><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><p>根据浏览器的lighthouse，network，Performance 查看浏览器资源加载情况，优化对应的地方</p><h2 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h2><p>略</p>]]></content>
      
      
      <categories>
          
          <category> 性能优化 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>nuxt 连接MongoDB</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/%E8%BF%9E%E6%8E%A5MongoDB/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/%E8%BF%9E%E6%8E%A5MongoDB/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="mongodb"><a href="#mongodb" class="headerlink" title="mongodb"></a>mongodb</h2><ol><li>安装mongoose</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i mongoose</span><br></pre></td></tr></table></figure><ol start="2"><li>创建连接mongodb服务plugin</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /server/db/index.ts</span></span><br><span class="line"><span class="keyword">import</span> mongoose <span class="keyword">from</span> <span class="string">&quot;mongoose&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> mongoose.<span class="title function_">connect</span>(<span class="string">&quot;mongodb://localhost:27017/test&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;数据库连接建立。&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;数据库连接失败。&quot;</span>, err);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>使用 <code>nuxt.config</code> 引入插件</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// nuxt.config.ts</span></span><br><span class="line"><span class="comment">// https://v3.nuxtjs.org/api/configuration/nuxt.config</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineNuxtConfig</span>(&#123;</span><br><span class="line">    <span class="attr">typescript</span>: &#123;</span><br><span class="line">        <span class="attr">shim</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">nitro</span>: &#123;</span><br><span class="line">        <span class="attr">plugins</span>: [<span class="string">&quot;~/server/db/index.ts&quot;</span>],</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxtjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt 数据请求</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="api"><a href="#api" class="headerlink" title="api"></a>api</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server/api/count.ts</span></span><br><span class="line"><span class="keyword">let</span> counter = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> () =&gt; &#123;</span><br><span class="line">    counter++;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(counter);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="useFetch"><a href="#useFetch" class="headerlink" title="useFetch"></a>useFetch</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: count &#125; = <span class="keyword">await</span> <span class="title function_">useFetch</span>(<span class="string">&quot;/api/count&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span>Page visits: &#123;&#123; count &#125;&#125;<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="useAsyncData"><a href="#useAsyncData" class="headerlink" title="useAsyncData"></a>useAsyncData</h2><p>useFetch 您可能会问自己：和有什么区别 useAsyncData？<br>简而言之，useFetch 接收一个 URL 并获取该数据，而 useAsyncData 可能有更复杂的逻辑。useFetch(url)几乎等同于 useAsyncData(url, () &#x3D;&gt; $fetch(url))- 它是最常见用例的开发人员体验糖。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">useAsyncData</span>(<span class="string">&quot;count&quot;</span>, <span class="function">() =&gt;</span> $fetch(<span class="string">&quot;/api/count&quot;</span>));</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span>Page visits: &#123;&#123; data &#125;&#125;<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxtjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt assets</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/assets/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/assets/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="访问-assets-目录下文件"><a href="#访问-assets-目录下文件" class="headerlink" title="访问 assets 目录下文件"></a>访问 assets 目录下文件</h2><p>使用<code>~/assets</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>about<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nuxt-link</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span>回首页<span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;~/assets/pokemon.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxtjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt Composables 自定义hook</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/composables/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/composables/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><ol><li>使用<code>export</code></li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// composables/useFoo.ts </span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">useFoo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">useState</span>(<span class="string">&#x27;foo&#x27;</span>, <span class="function">() =&gt;</span> <span class="string">&#x27;bar&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>使用 <code>export default</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// composables/useFoo.ts </span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">useState</span>(<span class="string">&#x27;foo&#x27;</span>, <span class="function">() =&gt;</span> <span class="string">&#x27;bar&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;&#123; foo &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> foo = <span class="title function_">useFoo</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxtjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt error</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/error/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/error/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="404-页面"><a href="#404-页面" class="headerlink" title="404 页面"></a>404 页面</h2><ol><li>创建 <code>~/error.vue</code></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleError&quot;</span>&gt;</span>Clear errors<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">error</span>: <span class="title class_">Object</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">handleError</span> = (<span class="params"></span>) =&gt; <span class="title function_">clearError</span>(&#123; <span class="attr">redirect</span>: <span class="string">&quot;/&quot;</span> &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxtjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt layout</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/layout/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/layout/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li>创建 layouts 文件夹</li><li>创建 default.vue 和 custom.vue</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// default.vue</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        使用layout布局，在app.vue中使用，所有页面都会被包含</span><br><span class="line">        <span class="tag">&lt;<span class="name">slot</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// custom.vue</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>custom layout<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slot</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// app.vue</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;NuxtLayout :name=&quot;layout&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;NuxtPage /&gt;</span></span><br><span class="line"><span class="comment">    &lt;/NuxtLayout&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">NuxtLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">NuxtPage</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">NuxtLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// You might choose this based on an API call or logged-in status</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> layout = <span class="string">&quot;default&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="动态更改布局"><a href="#动态更改布局" class="headerlink" title="动态更改布局"></a>动态更改布局</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;enableCustomLayout&quot;</span>&gt;</span>Update layout<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">enableCustomLayout</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">setPageLayout</span>(<span class="string">&quot;custom&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">definePageMeta</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">layout</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxtjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt middleware</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/middleware/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/middleware/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="路由中间件"><a href="#路由中间件" class="headerlink" title="路由中间件"></a>路由中间件</h2><ul><li>auth.ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineNuxtRouteMiddleware</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;auth&quot;</span>, to);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if (to.params.id === &quot;1&quot;) &#123;</span></span><br><span class="line">    <span class="comment">//     return abortNavigation();</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// return navigateTo(&quot;/&quot;);</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="全局中间件"><a href="#全局中间件" class="headerlink" title="全局中间件"></a>全局中间件</h2><ul><li>auth.global.ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineNuxtRouteMiddleware</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;auth-global&quot;</span>, to);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if (to.params.id === &quot;1&quot;) &#123;</span></span><br><span class="line">    <span class="comment">//     return abortNavigation();</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// return navigateTo(&quot;/&quot;);</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxtjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt pages</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/pages/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/pages/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><ul><li>访问 <a href="http://localhost:3000/about%60">http://localhost:3000/about`</a></li><li>文件夹 <code>/pages/about.vue</code></li><li>文件 <code>about.vue</code></li></ul><h2 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h2><h3 id="id-访问"><a href="#id-访问" class="headerlink" title="id 访问"></a>id 访问</h3><ul><li>访问 <a href="http://localhost:3000/user/1">http://localhost:3000/user/1</a></li><li>文件夹 <code>/pages/user/[id].vue</code></li><li>文件 <code>[id].vue</code></li></ul><h3 id="动态路由默认页面"><a href="#动态路由默认页面" class="headerlink" title="动态路由默认页面"></a>动态路由默认页面</h3><ul><li>文件夹<code>/pages/user/index.vue</code></li><li>文件 <code>index.vue</code></li></ul><h3 id="获取-参数"><a href="#获取-参数" class="headerlink" title="获取 参数"></a>获取 参数</h3><h4 id="获取-params"><a href="#获取-params" class="headerlink" title="获取 params"></a>获取 params</h4><ol><li>使用<code>$route.params</code>获取</li><li>使用<code>const route = useRoute();</code>函数获取</li></ol><h4 id="获取-query"><a href="#获取-query" class="headerlink" title="获取 query"></a>获取 query</h4><ol><li>使用<code>$route.query</code>获取</li><li>使用<code>const route = useRoute();</code>函数获取</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>&#123;&#123; $route.params &#125;&#125; &#123;&#123; $route.query &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> route = <span class="title function_">useRoute</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">params</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">query</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h2><h3 id="nuxt-link"><a href="#nuxt-link" class="headerlink" title="nuxt-link"></a>nuxt-link</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nuxt-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123; path: &#x27;/user/1&#x27; &#125;&quot;</span>&gt;</span>跳转到某个用户信息<span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxtjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt plugin</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/plugin/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/plugin/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ul><li>在<code>plugins</code>目录（没有就创建）下创建创建 js&#x2F;ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineNuxtPlugin</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">provide</span>: &#123;</span><br><span class="line">            <span class="attr">hello</span>: <span class="function">(<span class="params">msg: <span class="built_in">string</span></span>) =&gt;</span> <span class="string">`Hello <span class="subst">$&#123;msg&#125;</span>!`</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nuxt-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123; path: &#x27;/user/1&#x27; &#125;&quot;</span>&gt;</span>跳转到某个用户信息<span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nuxt-link</span> @<span class="attr">click</span>=<span class="string">&quot;navigate&quot;</span>&gt;</span>跳转到about<span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/pokemon.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 使用插件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; $hello(&quot;使用plugin输出文本&quot;) &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">navigate</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="title function_">navigateTo</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">path</span>: <span class="string">&quot;/about&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 使用插件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> &#123; $hello &#125; = <span class="title function_">useNuxtApp</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxtjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt public目录</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/public/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/public/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="访问-public-目录下文件"><a href="#访问-public-目录下文件" class="headerlink" title="访问 public 目录下文件"></a>访问 public 目录下文件</h2><p>重要：<code>/</code>就是代表 public 目录。！！！！！！！！！！！！！！！<br>直接使用&#x2F;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nuxt-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123; path: &#x27;/user/1&#x27; &#125;&quot;</span>&gt;</span>跳转到某个用户信息<span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nuxt-link</span> @<span class="attr">click</span>=<span class="string">&quot;navigate&quot;</span>&gt;</span>跳转到about<span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/pokemon.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">navigate</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="title function_">navigateTo</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">path</span>: <span class="string">&quot;/about&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxtjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt runtimeConfig</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/runtimeConfig/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/runtimeConfig/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="nuxt-config-ts配置"><a href="#nuxt-config-ts配置" class="headerlink" title="nuxt.config.ts配置"></a>nuxt.config.ts配置</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// nuxt.config.ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineNuxtConfig</span>(&#123;</span><br><span class="line">  <span class="attr">runtimeConfig</span>: &#123;</span><br><span class="line">    <span class="comment">// The private keys which are only available within server-side</span></span><br><span class="line">    <span class="attr">apiSecret</span>: <span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">    <span class="comment">// Keys within public, will be also exposed to the client-side</span></span><br><span class="line">    <span class="attr">public</span>: &#123;</span><br><span class="line">      <span class="attr">apiBase</span>: <span class="string">&#x27;/api&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// ts/js or vue</span><br><span class="line">const runtimeConfig = useRuntimeConfig()</span><br><span class="line"></span><br><span class="line">console.log(runtimeConfig.apiSecret)</span><br><span class="line">console.log(runtimeConfig.public.apiBase)</span><br></pre></td></tr></table></figure><h2 id="env文件配置"><a href="#env文件配置" class="headerlink" title="env文件配置"></a>env文件配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// .env</span><br><span class="line">NUXT_API_SECRET=api_secret_token</span><br><span class="line">NUXT_PUBLIC_API_BASE=https://nuxtjs.org</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// nuxt.config.ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineNuxtConfig</span>(&#123;</span><br><span class="line">  <span class="attr">runtimeConfig</span>: &#123;</span><br><span class="line">    <span class="attr">apiSecret</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// can be overridden by NUXT_API_SECRET environment variable</span></span><br><span class="line">    <span class="attr">public</span>: &#123;</span><br><span class="line">      <span class="attr">apiBase</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// can be overridden by NUXT_PUBLIC_API_BASE environment variable</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// publicApiBase:&quot;&quot;,// 和上面public:&#123;apiBase: &#x27;&#x27;&#125;, 是一样的</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxtjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt seo和meta</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/seo%E5%92%8Cmeta/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/seo%E5%92%8Cmeta/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="设置-Head-属性"><a href="#设置-Head-属性" class="headerlink" title="设置 Head 属性"></a>设置 Head 属性</h2><ol><li>使用<code>&lt;Title&gt;</code>等元组件</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 会被markdown格式化成小写，先注释 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;Title&gt;nuxt 标题&lt;/Title&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">navigate</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="title function_">navigateTo</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">path</span>: <span class="string">&quot;/about&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>使用 <code>useHead</code> hook</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nuxt-link</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;Title&gt;nuxt 标题&lt;/Title&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">useHead</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&quot;title use useHead&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>使用 js</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nuxt-link</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;Title&gt;nuxt 标题&lt;/Title&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">useHead</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&quot;title use useHead&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">script</span>: [</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 本地js路径</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">src</span>: <span class="string">&quot;/a.js&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 把放在body里</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// body如果是false，在引入的js里，会取不到dom元素</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">body</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">        ],</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxtjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nuxt server服务器使用</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/server/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/nuxt/server/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h2><ul><li>在中创建一个新文件 server&#x2F;api&#x2F;hello.ts：</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineEventHandler</span>(<span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">api</span>: <span class="string">&quot;works&quot;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>使用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>获取数据<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nuxt-link</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span>-</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const res = await useFetch(&quot;/api/hello&quot;);</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(res.data.value.api);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> &#123; data, error &#125; = <span class="keyword">await</span> <span class="title function_">useAsyncData</span>(<span class="string">&quot;hello&quot;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> $fetch(<span class="string">&quot;/api/hello&quot;</span>); <span class="comment">// 请求地址</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="property">value</span>.<span class="property">api</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="服务器路由"><a href="#服务器路由" class="headerlink" title="服务器路由"></a>服务器路由</h2><ol><li><code>~/server/api</code> 在 api 目录下的接口，需要带&#x2F;api。完整路径:</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/api/hello</span><br></pre></td></tr></table></figure><ol start="2"><li><code>~/server/routes</code> 在 api 目录下的接口，不需要带&#x2F;api。完整路径:</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/hello</span><br></pre></td></tr></table></figure><h2 id="服务器中间件"><a href="#服务器中间件" class="headerlink" title="服务器中间件"></a>服务器中间件</h2><p>Nuxt 会自动读入任何文件，~&#x2F;server&#x2F;middleware 为你的项目创建服务器中间件。</p><p>中间件处理程序将在任何其他服务器路由之前在每个请求上运行，以添加或检查标头、记录请求或扩展事件的请求对象。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineEventHandler</span>(<span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;New request: &quot;</span> + event.<span class="property">req</span>.<span class="property">url</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>重要：<code>server/api/hello.ts</code>这种路由，默认响应所有请求方法</p><h3 id="匹配路由参数"><a href="#匹配路由参数" class="headerlink" title="匹配路由参数"></a>匹配路由参数</h3><p>服务器路由可以在文件名中使用括号内的动态参数，例如<code>/api/hello/[name].ts</code>，并通过<code>event.context.params</code>.</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineEventHandler</span>(</span><br><span class="line">    <span class="function">(<span class="params">event</span>) =&gt;</span> <span class="string">`获取name请求接口，不分请求方法, <span class="subst">$&#123;event.context.params.name&#125;</span>!`</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>您现在可以使用<code>await $fetch(&#39;/api/hello/nuxt&#39;)</code>和 get普遍调用此 API <code>Hello, nuxt!</code>。</p><h3 id="匹配-HTTP-方法"><a href="#匹配-HTTP-方法" class="headerlink" title="匹配 HTTP 方法"></a>匹配 HTTP 方法</h3><p>句柄文件名可以后缀为<code>.get</code>, <code>.post</code>, <code>.put</code>, <code>.delete</code>, … 以匹配请求的<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods">HTTP Method</a>。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server/test.get.ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineEventHandler</span>(<span class="keyword">async</span> (event) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> query = <span class="keyword">await</span> <span class="title function_">useQuery</span>(event);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`响应 /api/test get请求 <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(query)&#125;</span>`</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server/test.post.ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineEventHandler</span>(<span class="keyword">async</span> (event) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> body = <span class="keyword">await</span> <span class="title function_">useBody</span>(event);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`响应 /api/test post请求 <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(body)&#125;</span>`</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>给定上面的例子，获取<code>/test</code>：</p><ul><li><strong>GET</strong>方法：返回<code>Test get handler</code></li><li><strong>POST</strong>方法：返回<code>Test post handler</code></li><li>任何其他方法：返回 405 错误</li></ul><h3 id="包罗万象的路线"><a href="#包罗万象的路线" class="headerlink" title="包罗万象的路线"></a>包罗万象的路线</h3><p>包罗万象的路由有助于回退路由处理。例如，创建一个名为的文件<code>~/server/api/foo/[...].ts</code>将为所有不匹配任何路由处理程序的请求注册一个包罗万象的路由，例如<code>/api/foo/bar/baz</code>.</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server/api/foo/[...].ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineEventHandler</span>(<span class="function">() =&gt;</span> <span class="string">`Default foo handler`</span>)</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server/api/[...].ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineEventHandler</span>(<span class="function">() =&gt;</span> <span class="string">`Default api handler`</span>)</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server/api/all/[...].ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineEventHandler</span>(</span><br><span class="line">    <span class="function">() =&gt;</span> <span class="string">`/api/all/*，所有请求接口和请求方法都响应`</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="使用正文处理请求-（获取body）"><a href="#使用正文处理请求-（获取body）" class="headerlink" title="使用正文处理请求 （获取body）"></a>使用正文处理请求 （获取body）</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server/api/submit.post.ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineEventHandler</span>(<span class="keyword">async</span> (event) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> body = <span class="keyword">await</span> <span class="title function_">useBody</span>(event)</span><br><span class="line">    <span class="keyword">return</span> &#123; body &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>您现在可以使用<code>$fetch(&#39;/api/submit&#39;, &#123; method: &#39;post&#39;, body: &#123; test: 123 &#125; &#125;)</code>.</p><div style="background:rgba(255,251,235,1);color:rgba(217,119,6,1);padding:10px">我们`submit.post.ts`在文件名中使用仅用于将请求与`POST`可以接受请求正文的方法匹配。`useBody`在GET 请求中使用时，`useBody`会抛出`405 Method Not Allowed`HTTP 错误。</div><h3 id="使用查询参数处理请求"><a href="#使用查询参数处理请求" class="headerlink" title="使用查询参数处理请求"></a>使用查询参数处理请求</h3><p>示例查询<code>/api/query?param1=a&amp;param2=b</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server/api/query.get.ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineEventHandler</span>(<span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> query = <span class="title function_">useQuery</span>(event)</span><br><span class="line">  <span class="keyword">return</span> &#123; <span class="attr">a</span>: query.<span class="property">param1</span>, <span class="attr">b</span>: query.<span class="property">param2</span> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nuxtjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react context</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/react/%E5%9F%BA%E7%A1%80/context/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/react/%E5%9F%BA%E7%A1%80/context/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="爷孙（远亲组件通信）"><a href="#爷孙（远亲组件通信）" class="headerlink" title="爷孙（远亲组件通信）"></a>爷孙（远亲组件通信）</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createContext, useContext, useState&#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">UserContext</span> = <span class="title function_">createContext</span>(<span class="literal">undefined</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">A</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            this is A</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">B</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">B</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;count, setCount&#125; = <span class="title function_">useContext</span>(<span class="title class_">UserContext</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(count)</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            this is B context props &#123;count&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> setCount(count + 1)&#125;&gt;点击修改App组件的context提供的数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 创建state和修改方法</span></span><br><span class="line">    <span class="keyword">const</span> [count, setCount] = <span class="title function_">useState</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;/*提供初始值*/&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">UserContext.Provider</span> <span class="attr">value</span>=<span class="string">&#123;&#123;count,</span> <span class="attr">setCount</span>&#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">                this is app</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">A</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">UserContext.Provider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react 路由</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/react/%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/react/%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h2 id="createBrowserRouter"><a href="#createBrowserRouter" class="headerlink" title="createBrowserRouter"></a>createBrowserRouter</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&#x27;react-dom/client&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;createBrowserRouter, <span class="title class_">RouterProvider</span>&#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.jsx&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createBrowserRouter</span>([</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        <span class="attr">element</span>: <span class="language-xml"><span class="tag">&lt;<span class="name">App</span>/&gt;</span></span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">        <span class="attr">element</span>: <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>我是登录页<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/article&#x27;</span>,</span><br><span class="line">        <span class="attr">element</span>: <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>我是文章页<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">createRoot</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)).<span class="title function_">render</span>(</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">RouterProvider</span> <span class="attr">router</span>=<span class="string">&#123;router&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">RouterProvider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">React.StrictMode</span>&gt;</span></span>,</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="基础路由"><a href="#基础路由" class="headerlink" title="基础路由"></a>基础路由</h3><ul><li>BrowserRouter</li><li>Link 跳转</li><li>Routes 匹配一组路由</li><li>Route<ul><li>exact 表示严格匹配。如果不加，<code>/</code>会在匹配<code>/news</code>同时显示</li></ul></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BrowserRouter</span>, <span class="title class_">Link</span>, <span class="title class_">Route</span>, <span class="title class_">Routes</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Home&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">News</span> <span class="keyword">from</span> <span class="string">&quot;./pages/News&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">BrowserRouter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&#123;</span>&quot;/&quot;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span>&gt;</span>跳转首页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&#123;</span>&quot;/<span class="attr">news</span>&quot;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span>&gt;</span>跳转新闻页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">exact</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;/&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Home</span> /&gt;</span>&#125;&gt;<span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;/<span class="attr">news</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">News</span> /&gt;</span>&#125;&gt;<span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">BrowserRouter</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><h3 id="动态路由和取路由参数"><a href="#动态路由和取路由参数" class="headerlink" title="动态路由和取路由参数"></a>动态路由和取路由参数</h3><p>react-router-dom v6 和 函数式组件</p><ul><li>跳转和携带参数</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BrowserRouter</span>, <span class="title class_">Link</span>, <span class="title class_">Route</span>, <span class="title class_">Routes</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Home&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">News</span> <span class="keyword">from</span> <span class="string">&quot;./pages/News&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Content</span> <span class="keyword">from</span> <span class="string">&quot;./pages/Content&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">BrowserRouter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&#123;</span>&quot;/&quot;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span>&gt;</span>跳转首页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&#123;</span>&quot;/<span class="attr">news</span>&quot;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span>&gt;</span>跳转新闻页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&#123;</span>&quot;/<span class="attr">content</span>/<span class="attr">666</span>&quot;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span>&gt;</span>跳转详情页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">exact</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;/&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Home</span> /&gt;</span>&#125;&gt;<span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;/<span class="attr">news</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">News</span> /&gt;</span>&#125;&gt;<span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&#123;</span>&quot;/<span class="attr">content</span>/<span class="attr">:id</span>&quot;&#125; <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Content</span> /&gt;</span>&#125;&gt;<span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">BrowserRouter</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><ul><li>取值</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useParams &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Content</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> params = <span class="title function_">useParams</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(params);</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Content id -- &#123;params.id&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Content</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react 基础</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/react/%E5%9F%BA%E7%A1%80/%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/react/%E5%9F%BA%E7%A1%80/%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>react18!!!!!!!!</p><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><h3 id="组件基础"><a href="#组件基础" class="headerlink" title="组件基础"></a>组件基础</h3><ul><li>main.jsx</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&quot;react-dom/client&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./index.css&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">createRoot</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;root&quot;</span>)).<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">App</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>app.js（根组件）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;./components/Home.jsx&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Home</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><ul><li>组件 （自定义组件）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> reactLogo <span class="keyword">from</span> <span class="string">&quot;../assets/react.svg&quot;</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">News</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="comment">// super必须写在其他this之前</span></span><br><span class="line">    <span class="variable language_">super</span>(props);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">state</span> = &#123;</span><br><span class="line">      <span class="attr">inputValue</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;李四&quot;</span>,</span><br><span class="line">      <span class="attr">style</span>: &#123;</span><br><span class="line">        <span class="attr">color</span>: <span class="string">&quot;red&quot;</span>,</span><br><span class="line">        <span class="attr">fontSize</span>: <span class="string">&quot;40px&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">list</span>: [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>],</span><br><span class="line">      <span class="attr">list2</span>: [<span class="language-xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">key</span>=<span class="string">&quot;1&quot;</span>&gt;</span>h1标签1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>, <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">key</span>=<span class="string">&quot;2&quot;</span>&gt;</span>h1标签2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>],</span><br><span class="line">      <span class="attr">inputRef</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">run3</span> = <span class="variable language_">this</span>.<span class="property">run3</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">inputRef</span> = <span class="title class_">React</span>.<span class="title function_">createRef</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">run1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">name</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">run2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">name</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">run3</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">name</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  setData = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="title function_">setName</span>(<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123;</span><br><span class="line">      <span class="attr">name</span>: name,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">handleEvent</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">    e.<span class="property">target</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&quot;red&quot;</span>;</span><br><span class="line">    <span class="comment">// 获取dom元素上的属性</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="title function_">getAttribute</span>(<span class="string">&quot;aid&quot;</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  inputChange = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123;</span><br><span class="line">      <span class="attr">inputValue</span>: e.<span class="property">target</span>.<span class="property">value</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="title function_">getInputValue</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">inputValue</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  getInputRef = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">inputRef</span>.<span class="property">current</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">  inputKeyUp = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">code</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;this.state.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/* 绑定state里的属性 */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>绑定state里的属性<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;this.state.style&#125;</span>&gt;</span>绑定state里的属性<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/* 引入图片 */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>引入图片<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;reactLogo&#125;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">img</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">src</span>=<span class="string">&quot;https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">alt</span>=<span class="string">&quot;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/* 循环数组 */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>循环数组<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;this.state.list.map((item) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">          return <span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&#123;item&#125;</span>&gt;</span>&#123;item&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span>;</span></span><br><span class="line"><span class="language-xml">        &#125;)&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;this.state.list2&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;/* 改变this */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>改变this<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.run1.bind(this)&#125;</span>&gt;</span>改变this的方法1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">            this.run2();</span></span><br><span class="line"><span class="language-xml">          &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        &gt;</span></span><br><span class="line"><span class="language-xml">          改变this的方法2</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.run3&#125;</span>&gt;</span>改变this的方法3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.run3&#125;</span>&gt;</span>改变this的方法3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.setData&#125;</span>&gt;</span>设置state里的值<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">            this.setName(&quot;二狗&quot;);</span></span><br><span class="line"><span class="language-xml">          &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        &gt;</span></span><br><span class="line"><span class="language-xml">          方法传值</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/* 事件对象 */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>事件对象<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">aid</span>=<span class="string">&quot;123&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleEvent.bind(this)&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          事件对象</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">onChange</span>=<span class="string">&#123;this.inputChange&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.getInputValue.bind(this)&#125;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/* 获取ref dom */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>获取ref <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">ref</span>=<span class="string">&#123;this.inputRef&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.getInputRef&#125;</span>&gt;</span>获取ref<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/* 键盘事件 */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>键盘事件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">onKeyUp</span>=<span class="string">&#123;this.inputKeyUp&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">News</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react 内置hook</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/react/hook/%E5%86%85%E7%BD%AEhook/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/react/hook/%E5%86%85%E7%BD%AEhook/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="useState-useEffect"><a href="#useState-useEffect" class="headerlink" title="useState,useEffect"></a>useState,useEffect</h2><h4 id="watchEffect第二个参数"><a href="#watchEffect第二个参数" class="headerlink" title="watchEffect第二个参数"></a>watchEffect第二个参数</h4><ul><li>第二个没有参数：组件初始调用一次，组件每次更新时调用（setState时）</li><li>第二个参数是空数组：组件初始调用一次</li><li>第二个参数是数组，组件初始调用一次，数组里值改变时重新调用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">DogShow</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> [url, setUrl] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> [loading, setLoading] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">const</span> [fetchState, setFetchState] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">const</span> style = &#123;</span><br><span class="line">        <span class="attr">width</span>: <span class="number">300</span>,</span><br><span class="line">        <span class="attr">height</span>: <span class="number">300</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">setLoading</span>(<span class="literal">true</span>);</span><br><span class="line">        <span class="title function_">fetch</span>(<span class="string">&quot;https://aws.random.cat/meow&quot;</span>)</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> res.<span class="title function_">json</span>();</span><br><span class="line">            &#125;)</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">setUrl</span>(res.<span class="property">file</span>);</span><br><span class="line">                <span class="title function_">setLoading</span>(<span class="literal">false</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="comment">// 第二个参数是一个数组，如果是空数组就代表，useEffect不依赖props或state，只会初始执行一次</span></span><br><span class="line">        <span class="comment">// 如果不加，useEffect 里使用某个set函数时（组件更新时），useEffect就会重复执行！！！！！！！！！</span></span><br><span class="line">        <span class="comment">// 使用一个值，监听值改变，来控制 useEffect 调用fetch变化，useEffect就重新调用（类似vue的watch）</span></span><br><span class="line">    &#125;, [fetchState]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;loading ? (</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">div</span>&gt;</span>读取中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            ) : (</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;url&#125;</span> <span class="attr">alt</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">style</span>=<span class="string">&#123;style&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            )&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                    setFetchState(!fetchState);</span></span><br><span class="line"><span class="language-xml">                &#125;&#125;</span></span><br><span class="line"><span class="language-xml">            &gt;</span></span><br><span class="line"><span class="language-xml">                重新获取图片</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">DogShow</span>;</span><br></pre></td></tr></table></figure><h4 id="watchEffect清除副作用"><a href="#watchEffect清除副作用" class="headerlink" title="watchEffect清除副作用"></a>watchEffect清除副作用</h4><p>清除副作用适用于清除定时器，子组件有定时器，在父组件卸载子组件时（条件判断），子组件如果没有在watchEffect清除定时器，定时器会一直存在</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">       <span class="keyword">const</span> timer = <span class="built_in">setInterval</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;定时器&#x27;</span>)</span><br><span class="line">           </span><br><span class="line">       &#125;,<span class="number">1000</span>)</span><br><span class="line">       <span class="keyword">return</span> <span class="function">()=&gt;</span>&#123;</span><br><span class="line">           <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;, []);</span><br></pre></td></tr></table></figure><h2 id="useRef-（类似-vue-的-ref）"><a href="#useRef-（类似-vue-的-ref）" class="headerlink" title="useRef （类似 vue 的 ref）"></a>useRef （类似 vue 的 ref）</h2><ol><li>可以定义变量</li><li>可以获取 dom 的属性和方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState, useEffect, useRef &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">FileSearch</span> = (<span class="params">&#123; title, onFileSearch &#125;</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> [inputActive, setInputActive] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">const</span> [value, setValue] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> inputRef = <span class="title function_">useRef</span>(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">closeSearch</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;关闭input&quot;</span>);</span><br><span class="line">        <span class="comment">// 阻止默认事件</span></span><br><span class="line">        e.<span class="title function_">preventDefault</span>();</span><br><span class="line">        <span class="comment">// 取消input显示</span></span><br><span class="line">        <span class="title function_">setInputActive</span>(<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">// 清空已输入的input value</span></span><br><span class="line">        <span class="title function_">setValue</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听键盘事件</span></span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">handleInputEvent</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; keyCode &#125; = e;</span><br><span class="line">            <span class="comment">// 键盘事件 13是enter</span></span><br><span class="line">            <span class="comment">// 是input输入时，并且按下enter</span></span><br><span class="line">            <span class="keyword">if</span> (keyCode === <span class="number">13</span> &amp;&amp; inputActive) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;执行enter&quot;</span>);</span><br><span class="line">                <span class="title function_">onFileSearch</span>(value);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (keyCode === <span class="number">27</span> &amp;&amp; inputActive) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;esc&quot;</span>);</span><br><span class="line">                <span class="title function_">closeSearch</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;keyup&quot;</span>, handleInputEvent);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 卸载监听器</span></span><br><span class="line">        <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">removeEventListener</span>(<span class="string">&quot;keyup&quot;</span>, handleInputEvent);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听input聚焦</span></span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 只有在input显示时聚焦，并且只监听 inputActive 改变时触发</span></span><br><span class="line">        <span class="keyword">if</span> (inputActive) &#123;</span><br><span class="line">            inputRef.<span class="property">current</span>.<span class="title function_">focus</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, [inputActive]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;alert alert-primary&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;!inputActive &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;d-flex justify-content-between align-items-center row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;col-8&quot;</span>&gt;</span>&#123;title&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                        <span class="attr">type</span>=<span class="string">&quot;button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                        <span class="attr">className</span>=<span class="string">&quot;btn btn-primary col-4&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                        <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                            setInputActive(true);</span></span><br><span class="line"><span class="language-xml">                        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">                    &gt;</span></span><br><span class="line"><span class="language-xml">                        搜索</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            )&#125;</span></span><br><span class="line"><span class="language-xml">            &#123;inputActive &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    &#123;/* 这里的 col-8 必须写在外层div上，如果写在input上，就会和form-control样式冲突 */&#125;</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;col-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                            <span class="attr">ref</span>=<span class="string">&#123;inputRef&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                            <span class="attr">className</span>=<span class="string">&quot;form-control&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                            <span class="attr">value</span>=<span class="string">&#123;value&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                            <span class="attr">onChange</span>=<span class="string">&#123;(e)</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                                setValue(e.target.value);</span></span><br><span class="line"><span class="language-xml">                            &#125;&#125;</span></span><br><span class="line"><span class="language-xml">                        /&gt;</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                        <span class="attr">type</span>=<span class="string">&quot;button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                        <span class="attr">className</span>=<span class="string">&quot;btn btn-primary col-4&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                        <span class="attr">onClick</span>=<span class="string">&#123;closeSearch&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    &gt;</span></span></span><br><span class="line"><span class="language-xml">                        关闭</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            )&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">FileSearch</span>;</span><br></pre></td></tr></table></figure><h2 id="useMemo"><a href="#useMemo" class="headerlink" title="useMemo"></a>useMemo</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 和useEffect 区别：useEffect没有返回值</span></span><br><span class="line"><span class="comment">// 具体看文档</span></span><br><span class="line"><span class="keyword">const</span> autofocusNoSpellcheckerOptions = <span class="title function_">useMemo</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">autofocus</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">spellChecker</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">minHeight</span>: <span class="string">&quot;600px&quot;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;, []);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react hook规则</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/react/hook/%E8%A7%84%E5%88%99/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/react/hook/%E8%A7%84%E5%88%99/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ol><li>只在最顶层使用hook</li><li>只在React函数中使用hook</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react 自定义hook</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/react/hook/%E8%87%AA%E5%AE%9A%E4%B9%89hook/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/react/hook/%E8%87%AA%E5%AE%9A%E4%B9%89hook/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ol><li>要以use开头</li><li>多次使用一个hook，里面的state不是公用的，是完全隔离的</li></ol><h2 id="例子1"><a href="#例子1" class="headerlink" title="例子1"></a>例子1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> useMousePosition <span class="keyword">from</span> <span class="string">&quot;../hooks/useMousePosition&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">MouseTracker</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; x, y &#125; = <span class="title function_">useMousePosition</span>();</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      X: &#123;x&#125; --- y:&#123;y&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">MouseTracker</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义hook文件</span></span><br><span class="line"><span class="comment">// useMousePosition</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">useMousePosition</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [positions, setPositions] = <span class="title function_">useState</span>(&#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: <span class="number">0</span> &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">updateMouse</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">      <span class="title function_">setPositions</span>(&#123;</span><br><span class="line">        <span class="attr">x</span>: e.<span class="property">x</span>,</span><br><span class="line">        <span class="attr">y</span>: e.<span class="property">y</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;mousemove&quot;</span>, updateMouse);</span><br><span class="line">    <span class="comment">// console.log(&quot;add&quot;);</span></span><br><span class="line">    <span class="comment">// 组件卸载时的操作。这里在返回一个函数，需要卸载相关操作会在返回的函数里处理</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//   console.log(&quot;remove&quot;);</span></span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">&quot;mousemove&quot;</span>, updateMouse);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> positions;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useMousePosition;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="例子2"><a href="#例子2" class="headerlink" title="例子2"></a>例子2</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">useToggle</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 可复用的逻辑代码</span></span><br><span class="line">    <span class="keyword">const</span> [value,setValue] = <span class="title function_">useState</span>(<span class="literal">true</span>)</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">toggle</span> = (<span class="params"></span>)=&gt; <span class="title function_">setValue</span>(!value)</span><br><span class="line">    <span class="comment">// 返回需要在其他组件中使用的状态和函数</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        value,</span><br><span class="line">        toggle</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;value,toggle&#125; = <span class="title function_">useToggle</span>()</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;value&amp;&amp;<span class="tag">&lt;<span class="name">div</span>&gt;</span>this is div<span class="tag">&lt;/<span class="name">div</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;toggle&#125;</span>&gt;</span>toggle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react zustand使用</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/react/%E5%BA%93/zustand/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/react/%E5%BA%93/zustand/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i zustand </span><br></pre></td></tr></table></figure><h2 id="创建counter"><a href="#创建counter" class="headerlink" title="创建counter"></a>创建counter</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;create&#125; <span class="keyword">from</span> <span class="string">&quot;zustand&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useStore = <span class="title function_">create</span>(<span class="function">(<span class="params">set</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="comment">// 状态数据</span></span><br><span class="line">        <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="comment">// 修改状态数据的方法</span></span><br><span class="line">        <span class="attr">inc</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">set</span>(<span class="function"><span class="params">state</span> =&gt;</span> (&#123;<span class="attr">count</span>: state.<span class="property">count</span> + <span class="number">1</span>&#125;))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useStore&#125; <span class="keyword">from</span> <span class="string">&quot;./stores/counter.js&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;count, inc&#125; = <span class="title function_">useStore</span>()</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;inc&#125;</span>&gt;</span>&#123;count&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ts 装饰器</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E8%A3%85%E9%A5%B0%E5%99%A8/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E8%A3%85%E9%A5%B0%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">方法的装饰器 target打印出来为&#123;&#125;，在<span class="keyword">for</span>循环中<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Reflect</span>.<span class="title function_">getMetadata</span>(‘path‘, target.<span class="property"><span class="keyword">prototype</span></span>, key))无法打印出来</span><br><span class="line">只需要在tsconfig.<span class="property">json</span>文件中把<span class="string">&quot;target&quot;</span>: “es2016” 改为 “target” : <span class="string">&quot;es5&quot;</span>就可以了!</span><br></pre></td></tr></table></figure><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h3 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h3><h3 id="需要在-tsconfig-json-配置"><a href="#需要在-tsconfig-json-配置" class="headerlink" title="需要在 tsconfig.json 配置"></a>需要在 tsconfig.json 配置</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;experimentalDecorators&quot;</span>: <span class="literal">true</span> ,</span><br><span class="line">   <span class="string">&quot;emitDecoratorMetadata&quot;</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="类的装饰器-1"><a href="#类的装饰器-1" class="headerlink" title="类的装饰器 1"></a>类的装饰器 1</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 类的装饰器 */</span></span><br><span class="line"><span class="comment">// 类的装饰器，就是对类的一种修饰，本身是一个函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 类的装饰器，接收的是一个构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">testDecorator</span>(<span class="params">constructor: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="comment">//   constructor.prototype.getName = () =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//     console.log(&quot;getName&quot;);</span></span><br><span class="line">    <span class="comment">//   &#125;;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;testDecorator1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">testDecorator2</span>(<span class="params">constructor: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="comment">//   constructor.prototype.getName = () =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//     console.log(&quot;getName&quot;);</span></span><br><span class="line">    <span class="comment">//   &#125;;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;testDecorator2&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 装饰器传参</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">decoratorParams</span>(<span class="params">flag: <span class="built_in">boolean</span></span>) &#123;</span><br><span class="line">    <span class="comment">// 有传入参数时执行返回装饰器，否则返回空的装饰器</span></span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">constructor: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">            constructor.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getName</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;getName&quot;</span>);</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="function">(<span class="params">constructor: <span class="built_in">any</span></span>) =&gt;</span> &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类创建是就执行，不是实例化才执行</span></span><br><span class="line"><span class="comment">// 类装饰器收集是从上到下，装饰器执行顺序是从下到上</span></span><br><span class="line"><span class="meta">@testDecorator</span></span><br><span class="line"><span class="meta">@testDecorator2</span></span><br><span class="line"><span class="meta">@decoratorParams</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> test = <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">(test <span class="keyword">as</span> <span class="built_in">any</span>).<span class="title function_">getName</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 避免变量重复</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="built_in">void</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="类的装饰器-2"><a href="#类的装饰器-2" class="headerlink" title="类的装饰器 2"></a>类的装饰器 2</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// T 继承一个构造函数。...args 展开变成一个数组，里面的元素都是any类型，函数的返回值是一个空对象</span></span><br><span class="line"><span class="comment">// T extends new (...args: any[]) =&gt; &#123;&#125;</span></span><br><span class="line"><span class="comment">// function testDecorator&lt;T extends new (...args: any[]) =&gt; &#123;&#125;&gt;(constructor: T) &#123;</span></span><br><span class="line"><span class="comment">//   // 返回原始的class</span></span><br><span class="line"><span class="comment">//   return class extends constructor &#123;</span></span><br><span class="line"><span class="comment">//     name = &quot;li&quot;;</span></span><br><span class="line"><span class="comment">//   &#125;;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// @testDecorator</span></span><br><span class="line"><span class="comment">// class Test &#123;</span></span><br><span class="line"><span class="comment">//   name: string;</span></span><br><span class="line"><span class="comment">//   constructor(name: string) &#123;</span></span><br><span class="line"><span class="comment">//     this.name = name;</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// const test = new Test(&quot;zs&quot;);</span></span><br><span class="line"><span class="comment">// console.log(test);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// (test as any).getName();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 工厂模式</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">testDecorator</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> &lt;T <span class="keyword">extends</span> <span class="keyword">new</span> (...<span class="attr">args</span>: <span class="built_in">any</span>[]) =&gt; <span class="built_in">any</span>&gt;(<span class="attr">constructor</span>: T) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">class</span> <span class="title class_">extends</span> constructor &#123;</span><br><span class="line">            name = <span class="string">&quot;lee&quot;</span>;</span><br><span class="line">            <span class="title function_">getName</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Test</span> = <span class="title function_">testDecorator</span>()(</span><br><span class="line">    <span class="keyword">class</span> &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">        <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> test = <span class="keyword">new</span> <span class="title class_">Test</span>(<span class="string">&quot;zs&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(test);</span><br><span class="line"><span class="comment">// 避免变量重复</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="built_in">void</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="方法装饰器"><a href="#方法装饰器" class="headerlink" title="方法装饰器"></a>方法装饰器</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 方法装饰器 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 第一个参数 target */</span></span><br><span class="line"><span class="comment">// 普通方法，target对应的是类的prototype</span></span><br><span class="line"><span class="comment">// 静态方法（static function），target对应的是类的构造函数</span></span><br><span class="line"><span class="comment">/* 第二个参数 key */</span></span><br><span class="line"><span class="comment">// key是装饰的方法名字</span></span><br><span class="line"><span class="comment">/* 第三个参数 descriptor */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getNameDecorator</span>(<span class="params"></span></span><br><span class="line"><span class="params">    target: <span class="built_in">any</span>,</span></span><br><span class="line"><span class="params">    key: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">    descriptor: PropertyDescriptor</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">    descriptor.<span class="property">value</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;descriptor&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@getNameDecorator</span></span><br><span class="line">    <span class="title function_">getName</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> test = <span class="keyword">new</span> <span class="title class_">Test</span>(<span class="string">&quot;name&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(test.<span class="title function_">getName</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="built_in">void</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="访问器的装饰器"><a href="#访问器的装饰器" class="headerlink" title="访问器的装饰器"></a>访问器的装饰器</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 访问器装饰器 */</span></span><br><span class="line"><span class="comment">// 访问器装饰器 参数和方法装饰器参数一致</span></span><br><span class="line"><span class="comment">// target getter/setter的prototype</span></span><br><span class="line"><span class="comment">// key getter/setter的名</span></span><br><span class="line"><span class="comment">// descriptor 对 getter/setter 的操作</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">visitNameDecorator</span>(<span class="params"></span></span><br><span class="line"><span class="params">    target: <span class="built_in">any</span>,</span></span><br><span class="line"><span class="params">    key: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">    descriptor: PropertyDescriptor</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 是否允许修改</span></span><br><span class="line">    descriptor.<span class="property">writable</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="attr">_name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">get</span> <span class="title function_">name</span>() &#123;</span><br><span class="line">        <span class="comment">// 像获取属性一样获取getter</span></span><br><span class="line">        <span class="comment">// console.log(test.name);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_name</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@visitNameDecorator</span></span><br><span class="line">    <span class="keyword">set</span> <span class="title function_">name</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="comment">// 像给属性赋值一样 赋值setter</span></span><br><span class="line">        <span class="comment">// test.name = &quot;555555&quot;;</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> test = <span class="keyword">new</span> <span class="title class_">Test</span>(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">test.<span class="property">name</span> = <span class="string">&quot;555555&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(test.<span class="property">name</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="built_in">void</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="属性的装饰器"><a href="#属性的装饰器" class="headerlink" title="属性的装饰器"></a>属性的装饰器</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 属性装饰器 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 属性装饰器只有两个参数</span></span><br><span class="line"><span class="comment">// target</span></span><br><span class="line"><span class="comment">// key</span></span><br><span class="line"><span class="comment">// 虽然属性装饰器没有descriptor，但是可以自定义descriptor，然后return出去，替换属性的descriptor，也是一样的效果</span></span><br><span class="line"><span class="comment">// function nameDecorator(target: any, key: string): any &#123;</span></span><br><span class="line"><span class="comment">//   const descriptor: PropertyDescriptor = &#123;</span></span><br><span class="line"><span class="comment">//     writable: false,</span></span><br><span class="line"><span class="comment">//   &#125;;</span></span><br><span class="line"><span class="comment">//   return descriptor;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改的并不是实例上的name吗，而是原型上的name</span></span><br><span class="line"><span class="comment">// function nameDecorator(target: any, key: string): any &#123;</span></span><br><span class="line"><span class="comment">//   // 可以使用 (test as any).__proto__.name 访问修改的属性</span></span><br><span class="line"><span class="comment">//   target[key] = &quot;descriptor&quot;;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">nameDecorator</span>(<span class="params">target: <span class="built_in">any</span>, key: <span class="built_in">string</span></span>): <span class="built_in">any</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">descriptor</span>: <span class="title class_">PropertyDescriptor</span> = &#123;</span><br><span class="line">        <span class="attr">writable</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> descriptor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// name 放在实例上</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="meta">@nameDecorator</span></span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&quot;default&quot;</span>;</span><br><span class="line">    <span class="comment">//   constructor(name: string) &#123;</span></span><br><span class="line">    <span class="comment">//     this.name = name;</span></span><br><span class="line">    <span class="comment">//   &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> test = <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line"><span class="comment">// test.name = &quot;11&quot;;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(test.<span class="property">name</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="built_in">void</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="参数装饰器"><a href="#参数装饰器" class="headerlink" title="参数装饰器"></a>参数装饰器</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// target 为类的prototype 或 类实例化对象的__proto__</span></span><br><span class="line"><span class="comment">// console.log((test as any).__proto__ === Test.prototype); //true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一个 target 为类的原型 prototype</span></span><br><span class="line"><span class="comment">// 第二个 key 为方法名</span></span><br><span class="line"><span class="comment">// 第三个 paramIndex 为参数的下标，在方法形参的位置</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">paramDecorator</span>(<span class="params">target: <span class="built_in">any</span>, key: <span class="built_in">string</span>, paramIndex: <span class="built_in">number</span></span>): <span class="built_in">any</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(target, key, paramIndex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="title function_">getInfo</span>(<span class="params">name: <span class="built_in">string</span>, <span class="meta">@paramDecorator</span> age: <span class="built_in">number</span></span>) &#123;</span><br><span class="line">        <span class="comment">// console.log(name, age);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> test = <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">test.<span class="title function_">getInfo</span>(<span class="string">&quot;zs&quot;</span>, <span class="number">12</span>);</span><br><span class="line"><span class="comment">// console.log((test as any).__proto__ === Test.prototype);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="built_in">void</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>装饰器实际使用的小例子</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 装饰器实际使用的小例子 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">userInfo</span>: <span class="built_in">any</span> = &#123; <span class="attr">name</span>: <span class="string">&quot;name&quot;</span> &#125;; <span class="comment">//undefined  &#123;name:&#x27;name&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 装饰器统一捕获异常 */</span></span><br><span class="line"><span class="comment">// function catchError(target: any, key: string, descriptor: PropertyDescriptor) &#123;</span></span><br><span class="line"><span class="comment">//   // 先把原函数保存</span></span><br><span class="line"><span class="comment">//   const fun = descriptor.value;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   // 再重写原函数，使用try catch捕获错误</span></span><br><span class="line"><span class="comment">//   descriptor.value = function () &#123;</span></span><br><span class="line"><span class="comment">//     try &#123;</span></span><br><span class="line"><span class="comment">//       fun();</span></span><br><span class="line"><span class="comment">//     &#125; catch (error) &#123;</span></span><br><span class="line"><span class="comment">//       console.log(&quot;userInfo 存在问题&quot;);</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//   &#125;;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 装饰器工厂，传递不同方法的错误信息 */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">catchError</span>(<span class="params">msg: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">target: <span class="built_in">any</span>, key: <span class="built_in">string</span>, descriptor: PropertyDescriptor</span>) &#123;</span><br><span class="line">        <span class="comment">// 先把原函数保存</span></span><br><span class="line">        <span class="keyword">const</span> fun = descriptor.<span class="property">value</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 再重写原函数，使用try catch捕获错误</span></span><br><span class="line">        descriptor.<span class="property">value</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 这里必须得return 出去，要不然外面接收不到值，无语！！！！！！！！！！！！！！！！！！！！</span></span><br><span class="line">                <span class="keyword">return</span> <span class="title function_">fun</span>();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="meta">@catchError</span>(<span class="string">&quot;userInfo.name 不存在&quot;</span>)</span><br><span class="line">    <span class="title function_">getName</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> userInfo.<span class="property">name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@catchError</span>(<span class="string">&quot;userInfo.age 不存在&quot;</span>)</span><br><span class="line">    <span class="title function_">getAge</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> userInfo.<span class="property">age</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> test = <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line"><span class="comment">// console.log(test.getName());</span></span><br><span class="line">test.<span class="title function_">getName</span>();</span><br><span class="line"><span class="comment">// test.getAge();</span></span><br></pre></td></tr></table></figure><h3 id="装饰器的执行顺序"><a href="#装饰器的执行顺序" class="headerlink" title="装饰器的执行顺序"></a>装饰器的执行顺序</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在<span class="title class_">TypeScript</span>中，装饰器的执行顺序为：首先执行属性装饰器，然后执行方法装饰器，其次是方法参数装饰器，最后是类装饰器。如果同一个类型的装饰器有多个，总是先执行后面的装饰器。</span><br></pre></td></tr></table></figure><h3 id="元数据-reflect-metadata"><a href="#元数据-reflect-metadata" class="headerlink" title="元数据 reflect-metadata"></a>元数据 reflect-metadata</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*  reflect-metadata */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// (1) 设置</span></span><br><span class="line"><span class="comment">// Reflect.defineMetadata(metadataKey, metadataValue, target, propertyKey)</span></span><br><span class="line"><span class="comment">//    metadataKey：meta 数据的 key</span></span><br><span class="line"><span class="comment">//    metadataValue：meta 数据的 值</span></span><br><span class="line"><span class="comment">//    target：meta 数据附加的目标</span></span><br><span class="line"><span class="comment">//    propertyKey（可选）：对应的 property key</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// (2) 获取</span></span><br><span class="line"><span class="comment">//    Reflect.getMetadata(metadataKey, target, propertyKey)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;reflect-metadata&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">paramDecorator</span>: <span class="title class_">ParameterDecorator</span> = <span class="function">(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">    target: <span class="built_in">Object</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    propertyKey: <span class="built_in">string</span> | <span class="built_in">symbol</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    parameterIndex: <span class="built_in">number</span></span></span></span><br><span class="line"><span class="params"><span class="function"></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//   console.log(parameterIndex);</span></span><br><span class="line">    <span class="keyword">let</span> <span class="attr">requiredParams</span>: <span class="built_in">number</span>[] = [];</span><br><span class="line">    requiredParams.<span class="title function_">push</span>(parameterIndex);</span><br><span class="line">    <span class="title class_">Reflect</span>.<span class="title function_">defineMetadata</span>(<span class="string">&quot;required&quot;</span>, requiredParams, target, propertyKey);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">validateDecorator</span>: <span class="title class_">MethodDecorator</span> = <span class="function">(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">    target: <span class="built_in">Object</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    propertyKey: <span class="built_in">string</span> | <span class="built_in">symbol</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    descriptor: PropertyDescriptor</span></span></span><br><span class="line"><span class="params"><span class="function"></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> method = descriptor.<span class="property">value</span>;</span><br><span class="line">    descriptor.<span class="property">value</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 默认带有 arguments</span></span><br><span class="line">        <span class="comment">// 直接输出 console.log(arguments);</span></span><br><span class="line">        <span class="keyword">const</span> <span class="attr">requiredParams</span>: <span class="built_in">number</span>[] = <span class="title class_">Reflect</span>.<span class="title function_">getMetadata</span>(</span><br><span class="line">            <span class="string">&quot;required&quot;</span>,</span><br><span class="line">            target,</span><br><span class="line">            propertyKey</span><br><span class="line">        );</span><br><span class="line">        <span class="comment">// index 位于方法的第几位</span></span><br><span class="line">        requiredParams.<span class="title function_">forEach</span>(<span class="function">(<span class="params">index</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 判断参数的位置，如果大于 arguments.length 或者 判断arguments[index] == undefined 说明参数少传了</span></span><br><span class="line">            <span class="keyword">if</span> (index &gt; <span class="variable language_">arguments</span>.<span class="property">length</span> || <span class="variable language_">arguments</span>[index] == <span class="literal">undefined</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;参数不正确&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里必须return 出去，否则class实例化后取不到值</span></span><br><span class="line">        <span class="comment">// return method.apply(this, arguments);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">method</span>(...<span class="variable language_">arguments</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@validateDecorator</span></span><br><span class="line">    <span class="title function_">find</span>(<span class="params">name: <span class="built_in">string</span>, <span class="meta">@paramDecorator</span> id: <span class="built_in">number</span></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(name, id);</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            name,</span><br><span class="line">            id,</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="title function_">find</span>(<span class="string">&quot;zs&quot;</span>, <span class="number">1</span>));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ts 特殊符号</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 属性或参数中使用 ？：表示该属性或参数为可选项</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 属性或参数中使用 ！：表示强制解析（告诉typescript编译器，这里一定有值），常用于vue-decorator中的<span class="meta">@Prop</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 变量后使用 ！：表示类型推断排除<span class="literal">null</span>、<span class="literal">undefined</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ts 内置方法</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E5%86%85%E7%BD%AE%E6%96%B9%E6%B3%95/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E5%86%85%E7%BD%AE%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><blockquote><p>JavaScript 中的内置方法是用来操作值的，TypeScript 的内置方法是用来操作类型的</p></blockquote><h2 id="对象类型的声明与属性修饰"><a href="#对象类型的声明与属性修饰" class="headerlink" title="对象类型的声明与属性修饰"></a>对象类型的声明与属性修饰</h2><h3 id="Partial"><a href="#Partial" class="headerlink" title="Partial"></a><strong>Partial</strong></h3><p> Partial，它接收一个对象类型，并将这个对象类型的所有属性都标记为可选，这样我们就不需要一个个将它们标记为可选属性了。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">email</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">PartialUser</span> = <span class="title class_">Partial</span>&lt;<span class="title class_">User</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">user</span>: <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  <span class="attr">email</span>: <span class="string">&#x27;john.doe@example.com&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以不实现全部的属性了！</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">partialUser</span>: <span class="title class_">PartialUser</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Required"><a href="#Required" class="headerlink" title="Required"></a>Required</h3><p>将属性标记成必选</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">User</span> = &#123;</span><br><span class="line">  name?: <span class="built_in">string</span>;</span><br><span class="line">  age?: <span class="built_in">number</span>;</span><br><span class="line">  email?: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">RequiredUser</span> = <span class="title class_">Required</span>&lt;<span class="title class_">User</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">user</span>: <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 现在你必须全部实现这些属性了</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">requiredUser</span>: <span class="title class_">RequiredUser</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  <span class="attr">email</span>: <span class="string">&#x27;john.doe@example.com&#x27;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Readonly"><a href="#Readonly" class="headerlink" title="Readonly"></a>Readonly</h3><p>将属性标记为只读</p><blockquote><p>需要注意的是，TypeScript 内置的工具类型中，并不包括与 Readonly 结对出现的版本，你可以认为，只读通常是一个不可逆的行为，如果能够随意将只读修饰移除，就可能破坏了只读带来的安全性。同时，不同于可选与必选，我们最开始获得的类型输入基本不会携带 readonly 修饰。</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">email</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">ReadonlyUser</span> = <span class="title class_">Readonly</span>&lt;<span class="title class_">User</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">user</span>: <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  <span class="attr">email</span>: <span class="string">&#x27;john.doe@example.com&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">readonlyUser</span>: <span class="title class_">ReadonlyUser</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  <span class="attr">email</span>: <span class="string">&#x27;john.doe@example.com&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改 user 对象的属性</span></span><br><span class="line">user.<span class="property">name</span> = <span class="string">&#x27;Jane Doe&#x27;</span>;</span><br><span class="line">user.<span class="property">age</span> = <span class="number">25</span>;</span><br><span class="line">user.<span class="property">email</span> = <span class="string">&#x27;jane.doe@example.com&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改 readonlyUser 对象的属性</span></span><br><span class="line"><span class="comment">// readonlyUser.name = &#x27;Jane Doe&#x27;;  // 报错</span></span><br><span class="line"><span class="comment">// readonlyUser.age = 25;  // 报错</span></span><br><span class="line"><span class="comment">// readonlyUser.email = &#x27;jane.doe@example.com&#x27;;  // 报错</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Record"><a href="#Record" class="headerlink" title="Record"></a>Record</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">UserProps</span> = <span class="string">&#x27;name&#x27;</span> | <span class="string">&#x27;job&#x27;</span> | <span class="string">&#x27;email&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等价于你一个个实现这些属性了</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">User</span> = <span class="title class_">Record</span>&lt;<span class="title class_">UserProps</span>, <span class="built_in">string</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">user</span>: <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">  <span class="attr">job</span>: <span class="string">&#x27;fe-developer&#x27;</span>,</span><br><span class="line">  <span class="attr">email</span>: <span class="string">&#x27;john.doe@example.com&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">User</span> = <span class="title class_">Record</span>&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">user</span>: <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">  <span class="attr">job</span>: <span class="string">&#x27;fe-developer&#x27;</span>,</span><br><span class="line">  <span class="attr">email</span>: <span class="string">&#x27;john.doe@example.com&#x27;</span>,</span><br><span class="line">  <span class="attr">bio</span>: <span class="string">&#x27;Make more interesting things!&#x27;</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;vip&#x27;</span>,</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="对象类型裁剪的-Pick-与-Omit"><a href="#对象类型裁剪的-Pick-与-Omit" class="headerlink" title="对象类型裁剪的 Pick 与 Omit"></a>对象类型裁剪的 Pick 与 Omit</h2><h3 id="Pick"><a href="#Pick" class="headerlink" title="Pick"></a>Pick</h3><blockquote><p>Pick 类型接收一个对象类型，以及一个字面量类型组成的联合类型，这个联合类型只能是由对象类型的属性名组成的。它会对这个对象类型进行裁剪，只保留你传入的属性名组成的部分</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">email</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">phone</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 只提取其中的 name 与 age 信息</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UserBasicInfo</span> = <span class="title class_">Pick</span>&lt;<span class="title class_">User</span>, <span class="string">&#x27;name&#x27;</span> | <span class="string">&#x27;age&#x27;</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">user</span>: <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  <span class="attr">email</span>: <span class="string">&#x27;john.doe@example.com&#x27;</span>,</span><br><span class="line">  <span class="attr">phone</span>: <span class="string">&#x27;1234567890&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">userBasicInfo</span>: <span class="title class_">UserBasicInfo</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Omit"><a href="#Omit" class="headerlink" title="Omit"></a>Omit</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">email</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">phone</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 只移除 phone 属性</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UserWithoutPhone</span> = <span class="title class_">Omit</span>&lt;<span class="title class_">User</span>, <span class="string">&#x27;phone&#x27;</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">user</span>: <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  <span class="attr">email</span>: <span class="string">&#x27;john.doe@example.com&#x27;</span>,</span><br><span class="line">  <span class="attr">phone</span>: <span class="string">&#x27;1234567890&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">userWithoutPhone</span>: <span class="title class_">UserWithoutPhone</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  <span class="attr">email</span>: <span class="string">&#x27;john.doe@example.com&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ts 类的修饰符</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E7%B1%BB%E7%9A%84%E4%BF%AE%E9%A5%B0%E7%AC%A6/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E7%B1%BB%E7%9A%84%E4%BF%AE%E9%A5%B0%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>了解 ts 关键字的作用，在写 base 类的时候可能会用到，个人用的不多。</p><ul><li><p>public 默认</p></li><li><p>private 类的外部不可用，继承也不行</p></li><li><p>protected 类的外部不可用，继承可以</p></li><li><p>public readOnly xxx 只读属性</p></li><li><p>static funcXXX 静态方法，不需要 new 就可以调用 </p><ul><li><p>在类里使用方式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LoginController</span>&#123;</span><br><span class="line">    <span class="title function_">logout</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="keyword">const</span> isLogin =  <span class="title class_">LoginController</span>.<span class="title function_">isLogin</span>(params);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>abstract funcXXX 抽象类，所有子类都必须要实现 funcXXX</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ts 类型保护</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E7%B1%BB%E5%9E%8B%E4%BF%9D%E6%8A%A4/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E7%B1%BB%E5%9E%8B%E4%BF%9D%E6%8A%A4/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bookList = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">author</span>:<span class="string">&quot;xiaoming&quot;</span>,</span><br><span class="line">        <span class="attr">type</span>:<span class="string">&quot;history&quot;</span>,</span><br><span class="line">        <span class="attr">range</span>:<span class="string">&quot;2001-2021&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">author</span>:<span class="string">&quot;xiaoli&quot;</span>,</span><br><span class="line">        <span class="attr">type</span>:<span class="string">&quot;story&quot;</span>,</span><br><span class="line">        <span class="attr">theme</span>:<span class="string">&quot;love&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="comment">// 类型,author是公共的类型，后面的是两种之一</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">IBookList</span> = <span class="title class_">Array</span>&lt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">author</span>:<span class="built_in">string</span>;</span><br><span class="line">    &#125; &amp; (&#123;</span><br><span class="line">        <span class="attr">type</span>:<span class="string">&quot;history&quot;</span>;</span><br><span class="line">        <span class="attr">range</span>:<span class="string">&quot;string&quot;</span>;</span><br><span class="line">    &#125; | &#123;</span><br><span class="line">        <span class="attr">type</span>:<span class="string">&quot;story&quot;</span>;</span><br><span class="line">        <span class="attr">theme</span>:<span class="built_in">string</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现函数logBook类型</span></span><br><span class="line"><span class="comment">// 函数接受书本类型，并logger出相关特征</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">logBook</span>(<span class="params">book:IbookItem</span>)&#123;</span><br><span class="line">    <span class="comment">// 联合类型 + 类型保护， = 自动推断</span></span><br><span class="line">    <span class="keyword">if</span>(book.<span class="property">type</span> === <span class="string">&#x27;history&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(book.<span class="property">range</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(book.<span class="property">theme</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ts 类</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E7%B1%BB/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="抽象类和抽象方法"><a href="#抽象类和抽象方法" class="headerlink" title="抽象类和抽象方法"></a>抽象类和抽象方法</h2><p>抽象类，无法被实例化，只能被继承并且无法创建抽象类的实例<br>子类可以对抽象类进行不同的实现<br>抽象方法只能出现在抽象类中并且抽象方法不能在抽象类中被具体实现，只能在抽象类的子类中实现（必须要实现）<br>使用场景：<br>我们一般用抽象类和抽象方法抽离出事物的共性 以后所有继承的子类必须按照规范去实现自己的具体逻辑 这样可以增加代码的可维护性和复用性<br>使用 abstract 关键字来定义抽象类和抽象方法</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    name!: <span class="built_in">string</span>;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="title function_">speak</span>(): <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">speak</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;喵喵喵&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> animal = <span class="keyword">new</span> <span class="title class_">Animal</span>(); <span class="comment">//直接报错 无法创建抽象类的实例</span></span><br><span class="line"><span class="keyword">let</span> cat = <span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line">cat.<span class="title function_">speak</span>();</span><br></pre></td></tr></table></figure><h3 id="重写-override-和重载-overload-的区别"><a href="#重写-override-和重载-overload-的区别" class="headerlink" title="重写(override)和重载(overload)的区别"></a>重写(override)和重载(overload)的区别</h3><p>重写是指子类重写继承自父类中的方法<br>重载是指为同一个函数提供多个类型定义</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">speak</span>(<span class="attr">word</span>: <span class="built_in">string</span>): <span class="built_in">string</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;动物:&quot;</span> + word;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">speak</span>(<span class="attr">word</span>: <span class="built_in">string</span>): <span class="built_in">string</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;猫:&quot;</span> + word;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> cat = <span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(cat.<span class="title function_">speak</span>(<span class="string">&quot;hello&quot;</span>));</span><br><span class="line"><span class="comment">// 上面是重写</span></span><br><span class="line"><span class="comment">//--------------------------------------------</span></span><br><span class="line"><span class="comment">// 下面是重载</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">double</span>(<span class="params">val: <span class="built_in">number</span></span>): <span class="built_in">number</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">double</span>(<span class="params">val: <span class="built_in">string</span></span>): <span class="built_in">string</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">double</span>(<span class="params">val: <span class="built_in">any</span></span>): <span class="built_in">any</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> val == <span class="string">&quot;number&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> val \* <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> val + val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> r = <span class="title function_">double</span>(<span class="number">1</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(r);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="什么是多态"><a href="#什么是多态" class="headerlink" title="什么是多态"></a>什么是多态</h3><p>在父类中定义一个方法，在子类中有多个实现，在程序运行的时候，根据不同的对象执行不同的操作，实现运行时的绑定。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="comment">// 声明抽象的方法，让子类去实现</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="title function_">sleep</span>(): <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">sleep</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;dog sleep&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> dog = <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">sleep</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;cat sleep&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> cat = <span class="keyword">new</span> <span class="title class_">Cat</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="attr">animals</span>: <span class="title class_">Animal</span>[] = [dog, cat];</span><br><span class="line">animals.<span class="title function_">forEach</span>(<span class="function">(<span class="params">i</span>) =&gt;</span> &#123;</span><br><span class="line">    i.<span class="title function_">sleep</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="implements-行为的抽象"><a href="#implements-行为的抽象" class="headerlink" title="implements 行为的抽象"></a>implements 行为的抽象</h2><p>接口可以把一些类中共有的属性和方法抽象出来,可以用来约束实现此接口的类<br>一个类可以实现多个接口，一个接口也可以被多个类实现<br>我们用 implements 关键字来代表 实现</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口可以在面向对象编程中表示为行为的抽象</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Speakable</span> &#123;</span><br><span class="line">    <span class="title function_">speak</span>(): <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Eatable</span> &#123;</span><br><span class="line">    <span class="title function_">eat</span>(): <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//一个类可以实现多个接口</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">implements</span> <span class="title class_">Speakable</span>, <span class="title class_">Eatable</span> &#123;</span><br><span class="line">    <span class="title function_">speak</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Person说话&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//   eat() &#123;&#125; //需要实现的接口包含eat方法 不实现会报错</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>作者：Big shark@LX<br>链接：<a href="https://juejin.cn/post/7031787942691471396">https://juejin.cn/post/7031787942691471396</a><br>来源：稀土掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ts 接口</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E6%8E%A5%E5%8F%A3/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="定义任意属性"><a href="#定义任意属性" class="headerlink" title="定义任意属性"></a>定义任意属性</h2><p>如果我们在定义接口的时候无法预先知道有哪些属性的时候,可以使用 <code>[propName:string]:any</code>,propName 名字是任意的</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    [<span class="attr">propName</span>: <span class="built_in">string</span>]: <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p1 = &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;hello&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">10</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="接口的继承"><a href="#接口的继承" class="headerlink" title="接口的继承"></a>接口的继承</h2><p>我们除了类可以继承 接口也可以继承 同样的使用 extends 关键字</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Speakable</span> &#123;</span><br><span class="line">    <span class="title function_">speak</span>(): <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">SpeakChinese</span> <span class="keyword">extends</span> <span class="title class_">Speakable</span> &#123;</span><br><span class="line">    <span class="title function_">speakChinese</span>(): <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">implements</span> <span class="title class_">SpeakChinese</span> &#123;</span><br><span class="line">    <span class="title function_">speak</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Person&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">speakChinese</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;speakChinese&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数类型接口"><a href="#函数类型接口" class="headerlink" title="函数类型接口"></a>函数类型接口</h2><p>可以用接口来定义函数类型</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> discount &#123;</span><br><span class="line">    (<span class="attr">price</span>: <span class="built_in">number</span>): <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">cost</span>: discount = <span class="keyword">function</span> (<span class="params">price: <span class="built_in">number</span></span>): <span class="built_in">number</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> price * <span class="number">0.8</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="构造函数的类型接口"><a href="#构造函数的类型接口" class="headerlink" title="构造函数的类型接口"></a>构造函数的类型接口</h2><p>使用特殊的 new()关键字来描述类的构造函数类型</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">public</span> name: <span class="built_in">string</span></span>) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//不加new是修饰函数的,加new是修饰类的</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">WithNameClass</span> &#123;</span><br><span class="line">    <span class="keyword">new</span> (<span class="attr">name</span>: <span class="built_in">string</span>): <span class="title class_">Animal</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createAnimal</span>(<span class="params">clazz: WithNameClass, name: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">clazz</span>(name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> a = <span class="title function_">createAnimal</span>(<span class="title class_">Animal</span>, <span class="string">&quot;hello&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="property">name</span>);</span><br></pre></td></tr></table></figure><p>作者：Big shark@LX<br>链接：<a href="https://juejin.cn/post/7031787942691471396">https://juejin.cn/post/7031787942691471396</a><br>来源：稀土掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ts 泛型</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E6%B3%9B%E5%9E%8B/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/typescript/%E6%B3%9B%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h2><p>泛型（Generics）是指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定类型的一种特性</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> createArray&lt;T&gt;(<span class="attr">length</span>: <span class="built_in">number</span>, <span class="attr">value</span>: T): <span class="title class_">Array</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">result</span>: T[] = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        result[i] = value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">createArray&lt;<span class="built_in">string</span>&gt;(<span class="number">3</span>, <span class="string">&quot;x&quot;</span>); <span class="comment">// [&#x27;x&#x27;, &#x27;x&#x27;, &#x27;x&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="多个类型参数"><a href="#多个类型参数" class="headerlink" title="多个类型参数"></a>多个类型参数</h2><p>如果我们需要有多个未知的类型占位 那么我们可以定义任何的字母来表示不同的类型参数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> swap&lt;T, U&gt;(<span class="attr">tuple</span>: [T, U]): [U, T] &#123;</span><br><span class="line">    <span class="keyword">return</span> [tuple[<span class="number">1</span>], tuple[<span class="number">0</span>]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">swap</span>([<span class="number">7</span>, <span class="string">&quot;seven&quot;</span>]); <span class="comment">// [&#x27;seven&#x27;, 7]</span></span><br></pre></td></tr></table></figure><h2 id="泛型约束"><a href="#泛型约束" class="headerlink" title="泛型约束"></a>泛型约束</h2><p>在函数内部使用泛型变量的时候，由于事先不知道它是哪种类型，所以不能随意的操作它的属性或方法。<br>这时，我们可以对泛型进行约束，只允许这个函数传入那些包含 length 属性的变量。这就是泛型约束</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Lengthwise</span> &#123;</span><br><span class="line">    <span class="attr">length</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> loggingIdentity&lt;T <span class="keyword">extends</span> <span class="title class_">Lengthwise</span>&gt;(<span class="attr">arg</span>: T): T &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arg.<span class="property">length</span>);</span><br><span class="line">    <span class="keyword">return</span> arg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：我们在泛型里面使用 extends 关键字代表的是泛型约束 需要和类的继承区分开</p></blockquote><h2 id="泛型接口"><a href="#泛型接口" class="headerlink" title="泛型接口"></a>泛型接口</h2><p>定义接口的时候也可以指定泛型</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Cart</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="attr">list</span>: T[];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">cart</span>: <span class="title class_">Cart</span>&lt;&#123; <span class="attr">name</span>: <span class="built_in">string</span>; <span class="attr">price</span>: <span class="built_in">number</span> &#125;&gt; = &#123;</span><br><span class="line">    <span class="attr">list</span>: [&#123; <span class="attr">name</span>: <span class="string">&quot;hello&quot;</span>, <span class="attr">price</span>: <span class="number">10</span> &#125;],</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(cart.<span class="property">list</span>[<span class="number">0</span>].<span class="property">name</span>, cart.<span class="property">list</span>[<span class="number">0</span>].<span class="property">price</span>);</span><br></pre></td></tr></table></figure><p>我们定义了接口传入的类型 T 之后返回的对象数组里面 T 就是当时传入的参数类型</p><h2 id="泛型类"><a href="#泛型类" class="headerlink" title="泛型类"></a>泛型类</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyArray</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="attr">list</span>: T[] = [];</span><br><span class="line">    <span class="title function_">add</span>(<span class="params">value: T</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">push</span>(value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">getMax</span>(): T &#123;</span><br><span class="line">        <span class="keyword">let</span> result = <span class="variable language_">this</span>.<span class="property">list</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">list</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">list</span>[i] &gt; result) &#123;</span><br><span class="line">                result = <span class="variable language_">this</span>.<span class="property">list</span>[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> arr = <span class="keyword">new</span> <span class="title class_">MyArray</span>();</span><br><span class="line">arr.<span class="title function_">add</span>(<span class="number">1</span>);</span><br><span class="line">arr.<span class="title function_">add</span>(<span class="number">2</span>);</span><br><span class="line">arr.<span class="title function_">add</span>(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">let</span> ret = arr.<span class="title function_">getMax</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ret);</span><br></pre></td></tr></table></figure><p>上诉例子我们实现了一个在数组里面添加数字并且获取最大值的泛型类</p><h2 id="keyof"><a href="#keyof" class="headerlink" title="keyof"></a>keyof</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 泛型 keyof</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="attr">gender</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> info: Person</span>) &#123;&#125;</span><br><span class="line">    <span class="comment">// keyof 遍历 interface ----&gt; T extends keyof Person</span></span><br><span class="line">    <span class="comment">// 这时候key 的类型就是一个字符串类型 ----&gt; T = &#x27;name&#x27;</span></span><br><span class="line">    <span class="comment">// getInfo 返回值就是  Person[T]</span></span><br><span class="line">    getInfo&lt;T <span class="keyword">extends</span> keyof <span class="title class_">Person</span>&gt;(<span class="attr">key</span>: T): <span class="title class_">Person</span>[T] &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">info</span>[key];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> teacher = <span class="keyword">new</span> <span class="title class_">Teacher</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">11</span>,</span><br><span class="line">    <span class="attr">gender</span>: <span class="string">&quot;男&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> res = teacher.<span class="title function_">getInfo</span>(<span class="string">&quot;name&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br></pre></td></tr></table></figure><h2 id="默认泛型"><a href="#默认泛型" class="headerlink" title="默认泛型"></a>默认泛型</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">IGetRepeatArr</span> = &lt;T = <span class="built_in">number</span>&gt;<span class="function">(<span class="params">target:T</span>)=&gt;</span>T[]</span><br><span class="line"><span class="keyword">const</span> <span class="attr">getRepeatArray</span>:<span class="title class_">IGetRepeatArr</span> = <span class="function"><span class="params">target</span>=&gt;</span><span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">10</span>).<span class="title function_">fill</span>(target)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getRepeatArray</span>(<span class="string">&#x27;1&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="联合-交叉类型"><a href="#联合-交叉类型" class="headerlink" title="联合&#x2F;交叉类型"></a>联合&#x2F;交叉类型</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bookList = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">author</span>:<span class="string">&quot;xiaoming&quot;</span>,</span><br><span class="line">        <span class="attr">type</span>:<span class="string">&quot;history&quot;</span>,</span><br><span class="line">        <span class="attr">range</span>:<span class="string">&quot;2001-2021&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">author</span>:<span class="string">&quot;xiaoli&quot;</span>,</span><br><span class="line">        <span class="attr">type</span>:<span class="string">&quot;story&quot;</span>,</span><br><span class="line">        <span class="attr">theme</span>:<span class="string">&quot;love&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="comment">// 类型,author是公共的类型，后面的是两种之一</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">IBookList</span> = <span class="title class_">Array</span>&lt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">author</span>:<span class="built_in">string</span>;</span><br><span class="line">    &#125; &amp; (&#123;</span><br><span class="line">        <span class="attr">type</span>:<span class="string">&quot;history&quot;</span>;</span><br><span class="line">        <span class="attr">range</span>:<span class="string">&quot;string&quot;</span>;</span><br><span class="line">    &#125; | &#123;</span><br><span class="line">        <span class="attr">type</span>:<span class="string">&quot;story&quot;</span>;</span><br><span class="line">        <span class="attr">theme</span>:<span class="built_in">string</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker基础使用</title>
      <link href="/2023/11/11/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/docker/%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/docker/%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="运行容器并输出"><a href="#运行容器并输出" class="headerlink" title="运行容器并输出"></a>运行容器并输出</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run ubuntu:15.10 /bin/echo &quot;Hello world&quot;</span><br></pre></td></tr></table></figure><h2 id="运行交互式的容器"><a href="#运行交互式的容器" class="headerlink" title="运行交互式的容器"></a>运行交互式的容器</h2><p>会进入 linux 命令行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -i -t ubuntu:15.10 /bin/bash</span><br></pre></td></tr></table></figure><h2 id="退出容器"><a href="#退出容器" class="headerlink" title="退出容器"></a>退出容器</h2><ol><li>容器中执行 exit</li><li>CTRL+D</li></ol><h2 id="启动容器（后台模式）"><a href="#启动容器（后台模式）" class="headerlink" title="启动容器（后台模式）"></a>启动容器（后台模式）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd ubuntu:15.10 /bin/sh</span><br></pre></td></tr></table></figure><h2 id="查看所有容器"><a href="#查看所有容器" class="headerlink" title="查看所有容器"></a>查看所有容器</h2><p>CONTAINER ID: 容器 ID。</p><p>IMAGE: 使用的镜像。</p><p>COMMAND: 启动容器时运行的命令。</p><p>CREATED: 容器的创建时间。</p><p>STATUS: 容器状态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><h2 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h2><p>docker stop</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop xxx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker镜像使用</title>
      <link href="/2023/11/11/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/docker/%E9%95%9C%E5%83%8F%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/docker/%E9%95%9C%E5%83%8F%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>当运行容器时，使用的镜像如果在本地中不存在，docker 就会自动从 docker 镜像仓库中下载，默认是从 Docker Hub 公共镜像源下载。</p><h2 id="列出镜像列表"><a href="#列出镜像列表" class="headerlink" title="列出镜像列表"></a>列出镜像列表</h2><p>各个选项说明:</p><p>REPOSITORY：表示镜像的仓库源</p><p>TAG：镜像的标签</p><p>IMAGE ID：镜像 ID</p><p>CREATED：镜像创建时间</p><p>SIZE：镜像大小</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h2 id="获取一个新的镜像"><a href="#获取一个新的镜像" class="headerlink" title="获取一个新的镜像"></a>获取一个新的镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu:13.10</span><br></pre></td></tr></table></figure><h2 id="查找镜像"><a href="#查找镜像" class="headerlink" title="查找镜像"></a>查找镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search httpd</span><br></pre></td></tr></table></figure><h2 id="拖取镜像"><a href="#拖取镜像" class="headerlink" title="拖取镜像"></a>拖取镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull httpd</span><br></pre></td></tr></table></figure><h2 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi hello-world</span><br></pre></td></tr></table></figure><h2 id="创建镜像"><a href="#创建镜像" class="headerlink" title="创建镜像"></a>创建镜像</h2><h3 id="更新镜像"><a href="#更新镜像" class="headerlink" title="更新镜像"></a>更新镜像</h3><p>更新镜像之前，我们需要使用镜像来创建一个容器。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -t -i ubuntu:15.10 /bin/bash</span><br></pre></td></tr></table></figure><p>在运行的容器内使用 apt-get update 命令进行更新。</p><p>在完成操作之后，输入 exit 命令来退出这个容器。</p><p>此时 ID 为 e218edb10161 的容器，是按我们的需求更改的容器。我们可以通过命令 docker commit 来提交容器副本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -m=&quot;has update&quot; -a=&quot;runoob&quot; e218edb10161 runoob/ubuntu:v2</span><br></pre></td></tr></table></figure><p>-m: 提交的描述信息</p><p>-a: 指定镜像作者</p><p>e218edb10161：容器 ID</p><p>runoob&#x2F;ubuntu:v2: 指定要创建的目标镜像名</p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker容器使用</title>
      <link href="/2023/11/11/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/docker/%E5%AE%B9%E5%99%A8%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/docker/%E5%AE%B9%E5%99%A8%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu</span><br></pre></td></tr></table></figure><h2 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h2><p>以下命令使用 ubuntu 镜像启动一个容器，参数为以命令行模式进入该容器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it ubuntu /bin/bash</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>-i: 交互式操作。</li><li>-t: 终端。</li><li>ubuntu: ubuntu 镜像。</li><li>&#x2F;bin&#x2F;bash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 &#x2F;bin&#x2F;bash。</li></ul><h2 id="退出容器"><a href="#退出容器" class="headerlink" title="退出容器"></a>退出容器</h2><ol><li>容器中执行 exit</li><li>CTRL+D</li></ol><h2 id="查看所有的容器"><a href="#查看所有的容器" class="headerlink" title="查看所有的容器"></a>查看所有的容器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h2 id="启用某个停止的容器"><a href="#启用某个停止的容器" class="headerlink" title="启用某个停止的容器"></a>启用某个停止的容器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start b750bbbcfd88</span><br></pre></td></tr></table></figure><h2 id="后台运行某个容器"><a href="#后台运行某个容器" class="headerlink" title="后台运行某个容器"></a>后台运行某个容器</h2><p>加了 -d 参数默认不会进入容器，想要进入容器需要使用指令 docker exec</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name ubuntu-test ubuntu /bin/bash</span><br></pre></td></tr></table></figure><h2 id="停止一个容器"><a href="#停止一个容器" class="headerlink" title="停止一个容器"></a>停止一个容器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop &lt;容器 ID&gt;</span><br></pre></td></tr></table></figure><h2 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart &lt;容器 ID&gt;</span><br></pre></td></tr></table></figure><h2 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h2><p>在使用 -d 参数时，容器启动后会进入后台。此时想要进入容器，可以通过以下指令进入</p><ul><li>docker attach 如果从这个容器退出，会导致容器的停止</li><li>docker exec：推荐大家使用 docker exec 命令，因为此命令会退出容器终端，但不会导致容器的停止。</li></ul><h2 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h2><p>删除容器使用 docker rm 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f 1e560fca3906</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dockerfile</title>
      <link href="/2023/11/11/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/docker/dockerfile%E6%9E%84%E5%BB%BA%E9%95%9C%E5%83%8F/"/>
      <url>/2023/11/11/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/docker/dockerfile%E6%9E%84%E5%BB%BA%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="Dockerfile主要命令"><a href="#Dockerfile主要命令" class="headerlink" title="Dockerfile主要命令"></a>Dockerfile主要命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">FROM # 指定使用哪个镜像源</span><br><span class="line">MAINTAINER # 指定维护者信息</span><br><span class="line">RUN # 运行指定命令</span><br><span class="line">ENV # ENV指令用来指定在执行docker run命令运行镜像时，自动设置的环境变量</span><br><span class="line">COPY # 　这条指令用来将本地的文件或文件夹复制到镜像的指定路径下，类似单向的docker cp</span><br><span class="line">EXPOSE # 这条指令用于标明这个镜像中应用将会侦听某个端口，并希望能将这个端口映射到主机的网络界面上。EXPOSE并不会让容器的端口访问到主机。要使其可访问，需要在docker run运行容器时通过-p来发布这些端口，或通过-P参数来发布EXPOSE导出的所有端口</span><br><span class="line">CMD # CMD提供了容器默认的执行命令。Dockerfile只允许使用一次CMD指令，所以如果有多个CMD指令时只有最后一个指令生效(后面的指令会覆盖之前的所有指令)。</span><br><span class="line">VOLUME # 该指令用来向基于镜像创建的容器添加数据卷</span><br><span class="line">USER # USER指定运行容器时的用户名或UID(默认为root)。</span><br><span class="line">ENTRYPOINT # 这个指定与CMD很相似，其相当于把镜像变成一个固定的命令工具，它一般是不可能通过docker run 来改变的</span><br></pre></td></tr></table></figure><h2 id="简单构建镜像"><a href="#简单构建镜像" class="headerlink" title="简单构建镜像"></a>简单构建镜像</h2><ol><li><p>创建一个docker文件夹 用于存放Dockerfile <code>mkdir docker</code></p></li><li><p>创建Dockerfile文件 <code>touch Dockerfile</code></p></li><li><p>编写Dockerfile文件 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FROM alpine:latest # 指定使用哪个镜像源</span><br><span class="line">CMD &quot;Dockerfile&quot; # 输出内容</span><br></pre></td></tr></table></figure></li><li><p>构建镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t Dockerfile_image .</span><br></pre></td></tr></table></figure></li></ol><ul><li><p>-t ：指定要创建的镜像名</p></li><li><p>. ：Dockerfile文件所在的目录，可以指定Dockerfile的绝对路径</p></li></ul><h2 id="手动构建一个nginx镜像"><a href="#手动构建一个nginx镜像" class="headerlink" title="手动构建一个nginx镜像"></a>手动构建一个nginx镜像</h2><ol><li>创建一个Dockerfile<ul><li>这里需要一个同级的index.html文件</li></ul></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu</span><br><span class="line">MAINTAINER youwei</span><br><span class="line">RUN apt-get update</span><br><span class="line">RUN apt-get install -y nginx</span><br><span class="line">COPY index.html /var/www/html</span><br><span class="line">ENTRYPOINT [&quot;/usr/sbin/nginx&quot;,&quot;-g&quot;,&quot;daemon off;&quot;]</span><br><span class="line">EXPOSE 80</span><br></pre></td></tr></table></figure><ol start="2"><li>运行</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 80:80 yw/dockerfile_image</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 镜像加速</title>
      <link href="/2023/11/11/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/docker/%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/"/>
      <url>/2023/11/11/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/docker/%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="在docker-engine里"><a href="#在docker-engine里" class="headerlink" title="在docker engine里"></a>在docker engine里</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;:[&quot;https://docker.mirrors.ustc.edu.cn/&quot;,&quot;https://reg-mirror.qiniu.com/&quot;],</span><br><span class="line">  &quot;builder&quot;: &#123;</span><br><span class="line">    &quot;features&quot;: &#123;</span><br><span class="line">      &quot;buildkit&quot;: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;gc&quot;: &#123;</span><br><span class="line">      &quot;defaultKeepStorage&quot;: &quot;20GB&quot;,</span><br><span class="line">      &quot;enabled&quot;: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;experimental&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 标准库 http</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%A0%87%E5%87%86%E5%BA%93/http/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%A0%87%E5%87%86%E5%BA%93/http/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="get"><a href="#get" class="headerlink" title="get"></a>get</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;encoding/json&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;io&quot;</span></span><br><span class="line"><span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;net/url&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 普通请求</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testGet</span><span class="params">()</span></span> &#123;</span><br><span class="line">url := <span class="string">&quot;https://aws.random.cat/meow&quot;</span></span><br><span class="line">r, err := http.Get(url)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> r.Body.Close()</span><br><span class="line">b, _ := ioutil.ReadAll(r.Body)</span><br><span class="line">fmt.Println(<span class="type">string</span>(b))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 手动设置参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testGet2</span><span class="params">()</span></span> &#123;</span><br><span class="line">params := url.Values&#123;&#125;</span><br><span class="line">Url, err := url.Parse(<span class="string">&quot;http://82.157.150.149:3000/search&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">params.Set(<span class="string">&quot;keywords&quot;</span>, <span class="string">&quot;海阔天空&quot;</span>)</span><br><span class="line"><span class="comment">// 有中文 编码一下</span></span><br><span class="line">Url.RawQuery = params.Encode()</span><br><span class="line">urlPath := Url.String()</span><br><span class="line">fmt.Println(urlPath)</span><br><span class="line">resp, err := http.Get(urlPath)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line">body, err := ioutil.ReadAll(resp.Body)</span><br><span class="line">fmt.Println(<span class="type">string</span>(body))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析json</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test3</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">type</span> Result <span class="keyword">struct</span> &#123;</span><br><span class="line">Result <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125; <span class="string">`json:&quot;result&quot;`</span></span><br><span class="line">Code   <span class="type">int</span>                    <span class="string">`json:&quot;code&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line">resp, err := http.Get(<span class="string">&quot;http://82.157.150.149:3000/search?keywords=%E6%B5%B7%E9%98%94%E5%A4%A9%E7%A9%BA&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line">body, err := ioutil.ReadAll(resp.Body)</span><br><span class="line"><span class="keyword">var</span> result Result</span><br><span class="line">_ = json.Unmarshal(body, &amp;result)</span><br><span class="line">fmt.Println(result)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// httpServer</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">httpServer</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 请求处理函数</span></span><br><span class="line">f := <span class="function"><span class="keyword">func</span><span class="params">(resp http.ResponseWriter, req *http.Request)</span></span> &#123;</span><br><span class="line">io.WriteString(resp, <span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 响应路径 前面需要加 /</span></span><br><span class="line">http.HandleFunc(<span class="string">&quot;/hello&quot;</span>, f)</span><br><span class="line"><span class="comment">// 设置监听端口，并监听，前面需要有冒号 :</span></span><br><span class="line">err := http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//testGet()</span></span><br><span class="line"><span class="comment">//testGet2()</span></span><br><span class="line"><span class="comment">//test3()</span></span><br><span class="line">httpServer()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go redis</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/redis/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/redis/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/go-redis/redis&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明一个全局的rdb变量</span></span><br><span class="line"><span class="keyword">var</span> rdb *redis.Client</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化连接</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initClient</span><span class="params">()</span></span> (err <span class="type">error</span>) &#123;</span><br><span class="line">rdb = redis.NewClient(&amp;redis.Options&#123;</span><br><span class="line">Addr:     <span class="string">&quot;localhost:6379&quot;</span>,</span><br><span class="line">Password: <span class="string">&quot;&quot;</span>,</span><br><span class="line">DB:       <span class="number">0</span>, <span class="comment">// 使用default db</span></span><br><span class="line">&#125;)</span><br><span class="line">_, err = rdb.Ping().Result()</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := initClient(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;init redis client failed&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;connect redis successfully&quot;</span>)</span><br><span class="line"><span class="comment">// 程序退出时，释放相关资源</span></span><br><span class="line"><span class="keyword">defer</span> rdb.Close()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="example"><a href="#example" class="headerlink" title="example"></a>example</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/go-redis/redis&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明一个全局的rdb变量</span></span><br><span class="line"><span class="keyword">var</span> rdb *redis.Client</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化连接</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initClient</span><span class="params">()</span></span> (err <span class="type">error</span>) &#123;</span><br><span class="line">rdb = redis.NewClient(&amp;redis.Options&#123;</span><br><span class="line">Addr:     <span class="string">&quot;localhost:6379&quot;</span>,</span><br><span class="line">Password: <span class="string">&quot;&quot;</span>,</span><br><span class="line">DB:       <span class="number">0</span>, <span class="comment">// 使用default db</span></span><br><span class="line">&#125;)</span><br><span class="line">_, err = rdb.Ping().Result()</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">redisExample</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// key value 超时时间</span></span><br><span class="line">err := rdb.Set(<span class="string">&quot;score&quot;</span>, <span class="number">100</span>, <span class="number">0</span>).Err()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;set score failed&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">val, err := rdb.Get(<span class="string">&quot;score&quot;</span>).Result()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;get score failed&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;score&quot;</span>, val)</span><br><span class="line">val2, err := rdb.Get(<span class="string">&quot;name&quot;</span>).Result()</span><br><span class="line"><span class="comment">// 取redis中不存在的值，报 redis.Nil 错，优先判断这个错</span></span><br><span class="line"><span class="keyword">if</span> err == redis.Nil &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;name does not exist&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;get name failed&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;name&quot;</span>, val2)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := initClient(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;init redis client failed&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;connect redis successfully&quot;</span>)</span><br><span class="line"><span class="comment">// 程序退出时，释放相关资源</span></span><br><span class="line"><span class="keyword">defer</span> rdb.Close()</span><br><span class="line"></span><br><span class="line">redisExample()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go mysql-crud</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/mysql-crud/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/mysql-crud/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><blockquote><p>使用了fiber框架</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;database/sql&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">_ <span class="string">&quot;github.com/go-sql-driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gofiber/fiber/v2&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *sql.DB</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化数据库</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initDB</span><span class="params">()</span></span> (err <span class="type">error</span>) &#123;</span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_db?charset=utf8mb4&amp;parseTime=True&quot;</span></span><br><span class="line"><span class="comment">// 不会校验密码是否正确</span></span><br><span class="line">db, err = sql.Open(<span class="string">&quot;mysql&quot;</span>, dsn)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 尝试与数据库连接</span></span><br><span class="line">err = db.Ping()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入数据</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertData</span><span class="params">()</span></span> &#123;</span><br><span class="line">sqlStr := <span class="string">&quot;insert into user_tbl(username,password) values(?,?)&quot;</span></span><br><span class="line">ret, err := db.Exec(sqlStr, <span class="string">&quot;zs&quot;</span>, <span class="string">&quot;123456&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">theID, err := ret.LastInsertId()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;get lastinsert id failed&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(theID)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> user <span class="keyword">struct</span> &#123;</span><br><span class="line">id       <span class="type">int</span></span><br><span class="line">username <span class="type">string</span></span><br><span class="line">password <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询单条</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">queryRow</span><span class="params">()</span></span> &#123;</span><br><span class="line">sqlStr := <span class="string">&quot;select id,username,password from user_tbl where id=?&quot;</span></span><br><span class="line"><span class="keyword">var</span> u user</span><br><span class="line">err := db.QueryRow(sqlStr, <span class="number">1</span>).Scan(&amp;u.id, &amp;u.username, &amp;u.password)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;scan failed&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(u.id, u.username, u.password)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询多条</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">queryManyRow</span><span class="params">()</span></span> &#123;</span><br><span class="line">sqlStr := <span class="string">&quot;select * from user_tbl&quot;</span></span><br><span class="line">r, err := db.Query(sqlStr)</span><br><span class="line"><span class="keyword">defer</span> r.Close()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> r.Next() &#123;</span><br><span class="line"><span class="keyword">var</span> u user</span><br><span class="line">err := r.Scan(&amp;u.id, &amp;u.username, &amp;u.password)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;scan failed&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(u.id, u.username, u.password)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">updateData</span><span class="params">()</span></span> &#123;</span><br><span class="line">sqlStr := <span class="string">&quot;update user_tbl set username=?,password=? where id=?&quot;</span></span><br><span class="line">ret, err := db.Exec(sqlStr, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;updatepassword&quot;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;更新失败&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">rows, err := ret.RowsAffected()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;更新行失败&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;更新成功，更新的行数=&quot;</span>, rows)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deleteData</span><span class="params">()</span></span> &#123;</span><br><span class="line">sqlStr := <span class="string">&quot;delete from user_tbl where id=?&quot;</span></span><br><span class="line">ret, err := db.Exec(sqlStr, <span class="number">3</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;删除失败&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">rows, err := ret.RowsAffected()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;删除行失败&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;删除成功，删除的行=&quot;</span>, rows)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">err := initDB() <span class="comment">// 调用输出数据库函数</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;初始化失败&quot;</span>)</span><br><span class="line"><span class="comment">// 初始化失败</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;初始化成功&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app := fiber.New()</span><br><span class="line">app.Get(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span></span> <span class="type">error</span> &#123;</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;Hello, World!&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.Post(<span class="string">&quot;/insert&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span></span> <span class="type">error</span> &#123;</span><br><span class="line">insertData()</span><br><span class="line"><span class="keyword">return</span> c.Send(c.Body())</span><br><span class="line"><span class="comment">//return c.SendString(&quot;I&#x27;m a POST request!&quot;)</span></span><br><span class="line">&#125;)</span><br><span class="line">app.Get(<span class="string">&quot;/query&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span></span> <span class="type">error</span> &#123;</span><br><span class="line">queryRow()</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;query&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.Get(<span class="string">&quot;/queryMany&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span></span> <span class="type">error</span> &#123;</span><br><span class="line">queryManyRow()</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;queryMany&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.Get(<span class="string">&quot;/updateData&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span></span> <span class="type">error</span> &#123;</span><br><span class="line">updateData()</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;updateData&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.Get(<span class="string">&quot;/deleteData&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span></span> <span class="type">error</span> &#123;</span><br><span class="line">deleteData()</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;deleteData&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.Listen(<span class="string">&quot;:3000&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go mysql</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/mysql/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/mysql/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="获得连接"><a href="#获得连接" class="headerlink" title="获得连接"></a>获得连接</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;database/sql&quot;</span></span><br><span class="line">_ <span class="string">&quot;github.com/go-sql-driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">db, err := sql.Open(<span class="string">&quot;mysql&quot;</span>, <span class="string">&quot;root:123456@/go_db&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Close() 释放数据库连接相关的资源</span></span><br><span class="line"><span class="comment">// 这行要放在err判断下面。因为db有可能会是nil，所以需要确保db不为nil的情况下关闭数据库</span></span><br><span class="line"><span class="keyword">defer</span> db.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数值需要根据业务具体情况来定</span></span><br><span class="line"><span class="comment">// 最大连接时长</span></span><br><span class="line">db.SetConnMaxIdleTime(time.Minute * <span class="number">3</span>)</span><br><span class="line"><span class="comment">// 最大连接数</span></span><br><span class="line">db.SetMaxOpenConns(<span class="number">10</span>)</span><br><span class="line"><span class="comment">// 空闲连接数</span></span><br><span class="line">db.SetMaxIdleConns(<span class="number">10</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="测试数据库连接"><a href="#测试数据库连接" class="headerlink" title="测试数据库连接"></a>测试数据库连接</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;database/sql&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">_ <span class="string">&quot;github.com/go-sql-driver/mysql&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *sql.DB</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initDB</span><span class="params">()</span></span> (err <span class="type">error</span>) &#123;</span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_db?charset=utf8mb4&amp;parseTime=True&quot;</span></span><br><span class="line"><span class="comment">// 不会校验密码是否正确</span></span><br><span class="line">db, err = sql.Open(<span class="string">&quot;mysql&quot;</span>, dsn)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 尝试与数据库连接</span></span><br><span class="line">err = db.Ping()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">err := initDB() <span class="comment">// 调用输出数据库函数</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;初始化失败&quot;</span>)</span><br><span class="line"><span class="comment">// 初始化失败</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;初始化成功&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go mongodb-crud</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/mongodb-crud/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/mongodb-crud/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="example1"><a href="#example1" class="headerlink" title="example1"></a>example1</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;go.mongodb.org/mongo-driver/bson&quot;</span></span><br><span class="line"><span class="string">&quot;go.mongodb.org/mongo-driver/mongo&quot;</span></span><br><span class="line"><span class="string">&quot;go.mongodb.org/mongo-driver/mongo/options&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> client *mongo.Client</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initDB</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 设置客户端连接配置</span></span><br><span class="line">clientOptions := options.Client().ApplyURI(<span class="string">&quot;mongodb://localhost:27017&quot;</span>)</span><br><span class="line"><span class="comment">// 连接到mongodb</span></span><br><span class="line"><span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line">client, err = mongo.Connect(context.TODO(), clientOptions)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 检查连接</span></span><br><span class="line">err = client.Ping(context.TODO(), <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;connected to MongoDB&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="type">string</span></span><br><span class="line">Age  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertOne</span><span class="params">()</span></span> &#123;</span><br><span class="line">initDB()</span><br><span class="line">s := Student&#123;</span><br><span class="line">Name: <span class="string">&quot;tom&quot;</span>,</span><br><span class="line">Age:  <span class="number">10</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> collection = client.Database(<span class="string">&quot;go_db&quot;</span>).Collection(<span class="string">&quot;student&quot;</span>)</span><br><span class="line">insertResult, err := collection.InsertOne(context.TODO(), s)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;插入成功，数据id=&quot;</span>, insertResult.InsertedID)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertMany</span><span class="params">()</span></span> &#123;</span><br><span class="line">initDB()</span><br><span class="line"><span class="keyword">var</span> collection = client.Database(<span class="string">&quot;go_db&quot;</span>).Collection(<span class="string">&quot;student&quot;</span>)</span><br><span class="line">s1 := Student&#123;</span><br><span class="line">Name: <span class="string">&quot;tom11&quot;</span>,</span><br><span class="line">Age:  <span class="number">11</span>,</span><br><span class="line">&#125;</span><br><span class="line">s2 := Student&#123;</span><br><span class="line">Name: <span class="string">&quot;tom21&quot;</span>,</span><br><span class="line">Age:  <span class="number">12</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stus := []<span class="keyword">interface</span>&#123;&#125;&#123;s1, s2&#125;</span><br><span class="line">imr, err := collection.InsertMany(context.TODO(), stus)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(imr.InsertedIDs)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">find</span><span class="params">()</span></span> &#123;</span><br><span class="line">initDB()</span><br><span class="line">ctx := context.TODO()</span><br><span class="line"><span class="keyword">defer</span> client.Disconnect(ctx)</span><br><span class="line"><span class="keyword">var</span> collection = client.Database(<span class="string">&quot;go_db&quot;</span>).Collection(<span class="string">&quot;student&quot;</span>)</span><br><span class="line"><span class="comment">//cur, err := collection.Find(ctx, bson.D&#123;&#125;)</span></span><br><span class="line">cur, err := collection.Find(ctx, bson.D&#123;&#123;<span class="string">&quot;name&quot;</span>, <span class="string">&quot;tom&quot;</span>&#125;&#125;) <span class="comment">// 查找name是tom的</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> cur.Close(ctx)</span><br><span class="line"><span class="keyword">for</span> cur.Next(ctx) &#123;</span><br><span class="line"><span class="keyword">var</span> result bson.D</span><br><span class="line">err := cur.Decode(&amp;result)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;result&quot;</span>, result)</span><br><span class="line">fmt.Println(<span class="string">&quot;result.Map&quot;</span>, result.Map())</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := cur.Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">updateMany</span><span class="params">()</span></span> &#123;</span><br><span class="line">initDB()</span><br><span class="line">ctx := context.TODO()</span><br><span class="line"><span class="keyword">defer</span> client.Disconnect(ctx)</span><br><span class="line"><span class="keyword">var</span> collection = client.Database(<span class="string">&quot;go_db&quot;</span>).Collection(<span class="string">&quot;student&quot;</span>)</span><br><span class="line"><span class="comment">// 修改的值</span></span><br><span class="line">update := bson.D&#123;&#123;<span class="string">&quot;$set&quot;</span>, bson.D&#123;&#123;<span class="string">&quot;name&quot;</span>, <span class="string">&quot;update&quot;</span>&#125;, &#123;<span class="string">&quot;age&quot;</span>, <span class="string">&quot;99&quot;</span>&#125;&#125;&#125;&#125;</span><br><span class="line"><span class="comment">// 哪条数据被修改</span></span><br><span class="line">ur, err := collection.UpdateMany(ctx, bson.D&#123;&#123;<span class="string">&quot;name&quot;</span>, <span class="string">&quot;tom&quot;</span>&#125;&#125;, update)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;Updated count&quot;</span>, ur.ModifiedCount)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deleteMany</span><span class="params">()</span></span> &#123;</span><br><span class="line">initDB()</span><br><span class="line">ctx := context.TODO()</span><br><span class="line"><span class="keyword">var</span> collection = client.Database(<span class="string">&quot;go_db&quot;</span>).Collection(<span class="string">&quot;student&quot;</span>)</span><br><span class="line">dr, err := collection.DeleteMany(ctx, bson.D&#123;&#123;<span class="string">&quot;name&quot;</span>, <span class="string">&quot;tom1&quot;</span>&#125;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;Deleted count&quot;</span>, dr.DeletedCount)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//insertOne(s)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//insertMany()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//find()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//updateMany()</span></span><br><span class="line"></span><br><span class="line">deleteMany()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="example2"><a href="#example2" class="headerlink" title="example2"></a>example2</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;go.mongodb.org/mongo-driver/bson&quot;</span></span><br><span class="line"><span class="string">&quot;go.mongodb.org/mongo-driver/mongo&quot;</span></span><br><span class="line"><span class="string">&quot;go.mongodb.org/mongo-driver/mongo/options&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// mongodb 连接配置</span></span><br><span class="line">client, err := mongo.NewClient(options.Client().ApplyURI(<span class="string">&quot;mongodb://localhost:27017&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断错误</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Errorf(<span class="string">&quot;连接错误&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 超时控制</span></span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), <span class="number">10</span>*time.Second)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建连接</span></span><br><span class="line"><span class="keyword">if</span> err = client.Connect(ctx); err == <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Connect succeeded&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入一行数据</span></span><br><span class="line"><span class="comment">//insertDoc(client, ctx)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入多行</span></span><br><span class="line"><span class="comment">//insertMany(client, ctx)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新一行</span></span><br><span class="line"><span class="comment">//updateDoc(client, ctx)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询</span></span><br><span class="line"><span class="comment">//findDoc(client, ctx)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除一行</span></span><br><span class="line"><span class="comment">//deleteDoc(client, ctx)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除多条</span></span><br><span class="line">deleteManyDoc(client, ctx)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line"><span class="comment">// 连接database</span></span><br><span class="line"><span class="comment">db := client.Database(&quot;test&quot;)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">// 获取集合名</span></span><br><span class="line"><span class="comment">collectionNames, err := db.ListCollectionNames(ctx, bson.M&#123;&#125;)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">// 输出集合名</span></span><br><span class="line"><span class="comment">fmt.Println(&quot;collectionNames&quot;, collectionNames)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 断开连接</span></span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err = client.Disconnect(ctx); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入文档</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertDoc</span><span class="params">(client *mongo.Client, ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 连接到要操作的集合</span></span><br><span class="line">collection := client.Database(<span class="string">&quot;test&quot;</span>).Collection(<span class="string">&quot;hero&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入一行数据</span></span><br><span class="line">insertOneResult, err := collection.InsertOne(ctx, bson.M&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;张三&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">18</span>&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出写入文档的id</span></span><br><span class="line">fmt.Println(<span class="string">&quot;id&quot;</span>, insertOneResult.InsertedID)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入多行</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertMany</span><span class="params">(client *mongo.Client, ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 连接到要操作的集合</span></span><br><span class="line">collection := client.Database(<span class="string">&quot;test&quot;</span>).Collection(<span class="string">&quot;hero&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入多行数据</span></span><br><span class="line">docs := []<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line">bson.M&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">18</span>&#125;,</span><br><span class="line">bson.M&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;二狗&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">78</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定是否顺序写入，默认是true，一行报错中断后面的操作。设为false可以跳过报错的</span></span><br><span class="line">insertManyOpts := options.InsertMany().SetOrdered(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入多行</span></span><br><span class="line">insertManyResult, err := collection.InsertMany(ctx, docs, insertManyOpts)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出所有写入记录的id</span></span><br><span class="line">fmt.Println(<span class="string">&quot;ids&quot;</span>, insertManyResult.InsertedIDs)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新文档</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">updateDoc</span><span class="params">(client *mongo.Client, ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 连接到要操作的集合</span></span><br><span class="line">collection := client.Database(<span class="string">&quot;test&quot;</span>).Collection(<span class="string">&quot;hero&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果更新的文档不存在，则插入新的文档</span></span><br><span class="line">updateOneOpts := options.Update().SetUpsert(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新的条件</span></span><br><span class="line">updateOneFilter := bson.M&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;张三&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新后的值</span></span><br><span class="line">updateOneSet := bson.M&#123;<span class="string">&quot;$set&quot;</span>: bson.M&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;帅哥&quot;</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新操作</span></span><br><span class="line">updateOneResult, err := collection.UpdateOne(ctx, updateOneFilter, updateOneSet, updateOneOpts)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 匹配的行数 修改的行数 更新的行数(数据不存在插入的行数) 更新的id</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;matched:%d modified:%d upserted:%d upsertedID:%v&quot;</span>,</span><br><span class="line">updateOneResult.MatchedCount,</span><br><span class="line">updateOneResult.ModifiedCount,</span><br><span class="line">updateOneResult.UpsertedCount,</span><br><span class="line">updateOneResult.UpsertedID,</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询文档</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findDoc</span><span class="params">(client *mongo.Client, ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 连接到要操作的集合</span></span><br><span class="line">collection := client.Database(<span class="string">&quot;test&quot;</span>).Collection(<span class="string">&quot;hero&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置排序</span></span><br><span class="line">findOpts := options.Find().SetSort(bson.M&#123;<span class="string">&quot;name&quot;</span>: <span class="number">1</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询条件</span></span><br><span class="line">findCursor, err := collection.Find(ctx, bson.M&#123;<span class="string">&quot;age&quot;</span>: <span class="number">18</span>&#125;, findOpts)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询条件</span></span><br><span class="line"><span class="keyword">var</span> results []bson.M</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询</span></span><br><span class="line"><span class="keyword">if</span> err = findCursor.All(ctx, &amp;results); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对结果进行循环输出</span></span><br><span class="line"><span class="keyword">for</span> _, result := <span class="keyword">range</span> results &#123;</span><br><span class="line">fmt.Println(result)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除单个文档</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deleteDoc</span><span class="params">(client *mongo.Client, ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 连接到要操作的集合</span></span><br><span class="line">collection := client.Database(<span class="string">&quot;test&quot;</span>).Collection(<span class="string">&quot;hero&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 进行删除</span></span><br><span class="line">deleteResult, err := collection.DeleteOne(ctx, bson.M&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;二狗&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 错误判断</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出已经删除的行数</span></span><br><span class="line">fmt.Println(<span class="string">&quot;delete count:&quot;</span>, deleteResult.DeletedCount)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除多个文档</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deleteManyDoc</span><span class="params">(client *mongo.Client, ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 连接到要操作的集合</span></span><br><span class="line">collection := client.Database(<span class="string">&quot;test&quot;</span>).Collection(<span class="string">&quot;hero&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line">deleteManyResult, err := collection.DeleteMany(ctx, bson.D&#123;&#123;<span class="string">&quot;name&quot;</span>, <span class="string">&quot;李四&quot;</span>&#125;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 错误判断</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出删除的条数</span></span><br><span class="line">fmt.Println(<span class="string">&quot;delete count&quot;</span>, deleteManyResult.DeletedCount)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go mongodb</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/mongodb/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/mongodb/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;go.mongodb.org/mongo-driver/mongo&quot;</span></span><br><span class="line"><span class="string">&quot;go.mongodb.org/mongo-driver/mongo/options&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> client *mongo.Client</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initDB</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 设置客户端连接配置</span></span><br><span class="line">clientOptions := options.Client().ApplyURI(<span class="string">&quot;mongodb://localhost:27017&quot;</span>)</span><br><span class="line"><span class="comment">// 连接到mongodb</span></span><br><span class="line"><span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line">client, err = mongo.Connect(context.TODO(), clientOptions)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 检查连接</span></span><br><span class="line">err = client.Ping(context.TODO(), <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;connected to MongoDB&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">initDB()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go gorm-curd</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/gorm-curd/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/gorm-curd/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Product <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line">Code  <span class="type">string</span></span><br><span class="line">Price <span class="type">uint</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建表</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">create</span><span class="params">(db *gorm.DB)</span></span> &#123;</span><br><span class="line">db.AutoMigrate(&amp;Product&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入数据</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(db *gorm.DB)</span></span> &#123;</span><br><span class="line">p := Product&#123;</span><br><span class="line">Code:  <span class="string">&quot;4&quot;</span>,</span><br><span class="line">Price: <span class="number">12</span>,</span><br><span class="line">&#125;</span><br><span class="line">db.Create(&amp;p)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">query</span><span class="params">(db *gorm.DB)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> product Product</span><br><span class="line">db.First(&amp;product, <span class="number">2</span>) <span class="comment">// 查找主键</span></span><br><span class="line">fmt.Println(product)</span><br><span class="line"><span class="comment">//db.First(&amp;product, &quot;code = ?&quot;, &quot;D42&quot;) // 查找商品代码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">update</span><span class="params">(db *gorm.DB)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> product Product</span><br><span class="line">db.First(&amp;product, <span class="number">2</span>)</span><br><span class="line">db.Model(&amp;product).Update(<span class="string">&quot;Price&quot;</span>, <span class="number">1001</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除(软删除)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">del</span><span class="params">(db *gorm.DB)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> p Product</span><br><span class="line">db.Delete(&amp;p, <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_gorm&quot;</span></span><br><span class="line">db, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//insert(db)</span></span><br><span class="line"><span class="comment">//query(db)</span></span><br><span class="line"><span class="comment">//update(db)</span></span><br><span class="line">del(db)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go gorm基础</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/gorm/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/orm/gorm/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><blockquote><p><a href="https://gorm.io/docs/index.html">https://gorm.io/docs/index.html</a></p></blockquote><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// refer https://github.com/go-sql-driver/mysql#dsn-data-source-name for details</span></span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_gorm?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span><br><span class="line">db, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(db)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *gorm.DB</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库(init函数自动调用)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;init函数自动调用，连接数据库&quot;</span>)</span><br><span class="line"><span class="comment">// refer https://github.com/go-sql-driver/mysql#dsn-data-source-name for details</span></span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_gorm?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span><br><span class="line">d, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">db = d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// User 表结构</span></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line"><span class="comment">// 自定义自动全部需要大写</span></span><br><span class="line">Name     <span class="type">string</span></span><br><span class="line">Age      <span class="type">int</span></span><br><span class="line">Birthday time.Time</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建表</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createTable</span><span class="params">()</span></span> &#123;</span><br><span class="line">db.AutoMigrate(&amp;User&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">createTable()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *gorm.DB</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库(init函数自动调用)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;init函数自动调用，连接数据库&quot;</span>)</span><br><span class="line"><span class="comment">// refer https://github.com/go-sql-driver/mysql#dsn-data-source-name for details</span></span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_gorm?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span><br><span class="line">d, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">db = d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// User 表结构</span></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line"><span class="comment">// 自定义自动全部需要大写</span></span><br><span class="line">Name     <span class="type">string</span></span><br><span class="line">Age      <span class="type">int</span></span><br><span class="line">Birthday time.Time</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建表</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createTable</span><span class="params">()</span></span> &#123;</span><br><span class="line">db.AutoMigrate(&amp;User&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> user = User&#123;</span><br><span class="line">Name:     <span class="string">&quot;tom&quot;</span>,</span><br><span class="line">Age:      <span class="number">12</span>,</span><br><span class="line">Birthday: time.Now(),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入一条</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertOne</span><span class="params">()</span></span> &#123;</span><br><span class="line">result := db.Create(&amp;user)</span><br><span class="line">fmt.Println(<span class="string">&quot;result.RowsAffected&quot;</span>, result.RowsAffected)</span><br><span class="line">fmt.Println(<span class="string">&quot;user.ID&quot;</span>, user.ID)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定字段插入</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertSelect</span><span class="params">()</span></span> &#123;</span><br><span class="line">db.Select(<span class="string">&quot;Name&quot;</span>, <span class="string">&quot;Age&quot;</span>, <span class="string">&quot;CreateAt&quot;</span>).Create(&amp;user)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 批量插入</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertMany</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> users = []User&#123;</span><br><span class="line">&#123;Name: <span class="string">&quot;John&quot;</span>, Age: <span class="number">12</span>, Birthday: time.Now()&#125;,</span><br><span class="line">&#123;Name: <span class="string">&quot;Bob&quot;</span>, Age: <span class="number">17</span>, Birthday: time.Now()&#125;,</span><br><span class="line">&#123;Name: <span class="string">&quot;Zs&quot;</span>, Age: <span class="number">14</span>, Birthday: time.Now()&#125;&#125;</span><br><span class="line">db.Create(&amp;users)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入map类型</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertMap</span><span class="params">()</span></span> &#123;</span><br><span class="line">db.Model(&amp;User&#123;&#125;).Create(<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"><span class="string">&quot;Name&quot;</span>: <span class="string">&quot;Bob&quot;</span>, <span class="string">&quot;Age&quot;</span>: <span class="number">12</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(u *User)</span></span> BeforeCreate(tx *gorm.DB) (err <span class="type">error</span>) &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;BeforeCreate 钩子，每次插入数据之前执行&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//createTable()</span></span><br><span class="line"><span class="comment">//insertOne()</span></span><br><span class="line"><span class="comment">//insertSelect()</span></span><br><span class="line"><span class="comment">//insertMany()</span></span><br><span class="line">insertMap()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *gorm.DB</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库(init函数自动调用)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;init函数自动调用，连接数据库&quot;</span>)</span><br><span class="line"><span class="comment">// refer https://github.com/go-sql-driver/mysql#dsn-data-source-name for details</span></span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_gorm?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span><br><span class="line">d, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">db = d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// User 表结构</span></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line"><span class="comment">// 自定义自动全部需要大写</span></span><br><span class="line">Name     <span class="type">string</span></span><br><span class="line">Age      <span class="type">int</span></span><br><span class="line">Birthday time.Time</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建表</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createTable</span><span class="params">()</span></span> &#123;</span><br><span class="line">db.AutoMigrate(&amp;User&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//var user = User&#123;</span></span><br><span class="line"><span class="comment">//Name:     &quot;tom&quot;,</span></span><br><span class="line"><span class="comment">//Age:      12,</span></span><br><span class="line"><span class="comment">//Birthday: time.Now(),</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">selectOne</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> user User</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认找第一条</span></span><br><span class="line"><span class="comment">//db.First(&amp;user)</span></span><br><span class="line"><span class="comment">//// SELECT * FROM users ORDER BY id LIMIT 1;</span></span><br><span class="line"><span class="comment">//fmt.Println(user.ID)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 找最后一条（需要注释上面的查询）</span></span><br><span class="line">db.Last(&amp;user)</span><br><span class="line"><span class="comment">// SELECT * FROM users ORDER BY id DESC LIMIT 1;</span></span><br><span class="line">fmt.Println(user.ID)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用id查询</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findById</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//var user User</span></span><br><span class="line"><span class="comment">// SELECT * FROM users WHERE id = 10;</span></span><br><span class="line"><span class="comment">//db.First(&amp;user, 4)</span></span><br><span class="line"><span class="comment">//fmt.Println(user)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> users []User</span><br><span class="line">db.Find(&amp;users, []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;)</span><br><span class="line"><span class="comment">// SELECT * FROM users WHERE id IN (1,2,3);</span></span><br><span class="line"><span class="keyword">for</span> _, user := <span class="keyword">range</span> users &#123;</span><br><span class="line">fmt.Println(user.ID)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询所有</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findAll</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> users []User</span><br><span class="line">db.Find(&amp;users)</span><br><span class="line"><span class="comment">// SELECT * FROM users;</span></span><br><span class="line"><span class="keyword">for</span> _, user := <span class="keyword">range</span> users &#123;</span><br><span class="line">fmt.Println(user.ID)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//selectOne()</span></span><br><span class="line"><span class="comment">//findById()</span></span><br><span class="line">findAll()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *gorm.DB</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库(init函数自动调用)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;init函数自动调用，连接数据库&quot;</span>)</span><br><span class="line"><span class="comment">// refer https://github.com/go-sql-driver/mysql#dsn-data-source-name for details</span></span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_gorm?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span><br><span class="line">d, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">db = d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// User 表结构</span></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line"><span class="comment">// 自定义自动全部需要大写</span></span><br><span class="line">Name     <span class="type">string</span></span><br><span class="line">Age      <span class="type">int</span></span><br><span class="line">Birthday time.Time</span><br><span class="line">Active   <span class="type">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建表</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createTable</span><span class="params">()</span></span> &#123;</span><br><span class="line">db.AutoMigrate(&amp;User&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入数据</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">()</span></span> &#123;</span><br><span class="line">user := User&#123;</span><br><span class="line">Name:     <span class="string">&quot;tom&quot;</span>,</span><br><span class="line">Age:      <span class="number">10</span>,</span><br><span class="line">Birthday: time.Now(),</span><br><span class="line">Active:   <span class="literal">false</span>,</span><br><span class="line">&#125;</span><br><span class="line">db.Create(&amp;user)</span><br><span class="line">fmt.Println(user)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新第一条数据</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">update</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> user User</span><br><span class="line">db.First(&amp;user) <span class="comment">// id == 1</span></span><br><span class="line">user.Name = <span class="string">&quot;qq&quot;</span></span><br><span class="line">user.Age = <span class="number">99</span></span><br><span class="line">db.Save(&amp;user)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据条件更新</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">update2</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 所有用户的名字都改为lisi</span></span><br><span class="line"><span class="comment">//db.Model(&amp;User&#123;&#125;).Update(&quot;name&quot;, &quot;lisi&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将指定的用户（根据主键）修改名字</span></span><br><span class="line"><span class="comment">//var user User</span></span><br><span class="line"><span class="comment">//db.First(&amp;user, 1)</span></span><br><span class="line"><span class="comment">//db.Model(&amp;user).Update(&quot;name&quot;, &quot;hello&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据条件修改</span></span><br><span class="line">db.Model(&amp;User&#123;&#125;).Where(<span class="string">&quot;active=?&quot;</span>, <span class="literal">false</span>).Update(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用结构体更新</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">update3</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> user User</span><br><span class="line">db.First(&amp;user)</span><br><span class="line">db.Model(&amp;user).Updates(User&#123;Name: <span class="string">&quot;王五&quot;</span>, Age: <span class="number">0</span>, Active: <span class="literal">true</span>&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//createTable()</span></span><br><span class="line"><span class="comment">//insert()</span></span><br><span class="line"><span class="comment">//update()</span></span><br><span class="line"><span class="comment">//update2()</span></span><br><span class="line">update3()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *gorm.DB</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库(init函数自动调用)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;init函数自动调用，连接数据库&quot;</span>)</span><br><span class="line"><span class="comment">// refer https://github.com/go-sql-driver/mysql#dsn-data-source-name for details</span></span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_gorm?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span><br><span class="line">d, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">db = d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// User 表结构</span></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line"><span class="comment">// 自定义自动全部需要大写</span></span><br><span class="line">Name     <span class="type">string</span></span><br><span class="line">Age      <span class="type">int</span></span><br><span class="line">Birthday time.Time</span><br><span class="line">Active   <span class="type">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建表</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createTable</span><span class="params">()</span></span> &#123;</span><br><span class="line">db.AutoMigrate(&amp;User&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">()</span></span> &#123;</span><br><span class="line">user := User&#123;</span><br><span class="line">Name:     <span class="string">&quot;zs&quot;</span>,</span><br><span class="line">Age:      <span class="number">11</span>,</span><br><span class="line">Birthday: time.Now(),</span><br><span class="line">Active:   <span class="literal">true</span>,</span><br><span class="line">&#125;</span><br><span class="line">db.Create(&amp;user)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除数据（先查再删）</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">delete1</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> user User</span><br><span class="line">db.First(&amp;user)</span><br><span class="line">db.Delete(&amp;user) <span class="comment">// 软删除</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据id删除</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">delete2</span><span class="params">()</span></span> &#123;</span><br><span class="line">db.Delete(&amp;User&#123;&#125;, <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找软删除记录（相当于显示包含软删除的全部数据，正常情况软删除后的数据，不会再被查询出来）</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">unscoped</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> users []User</span><br><span class="line">db.Unscoped().Where(<span class="string">&quot;name=?&quot;</span>, <span class="string">&quot;zs&quot;</span>).Find(&amp;users)</span><br><span class="line"><span class="keyword">for</span> _, user := <span class="keyword">range</span> users &#123;</span><br><span class="line">fmt.Println(user.ID)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//delete1()</span></span><br><span class="line"><span class="comment">//insert()</span></span><br><span class="line"><span class="comment">//delete2()</span></span><br><span class="line">unscoped()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="原生sql"><a href="#原生sql" class="headerlink" title="原生sql"></a>原生sql</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;database/sql&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *gorm.DB</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库(init函数自动调用)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// refer https://github.com/go-sql-driver/mysql#dsn-data-source-name for details</span></span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_gorm?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span><br><span class="line">d, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">db = d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// User 表结构</span></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line"><span class="comment">// 自定义自动全部需要大写</span></span><br><span class="line">Name     <span class="type">string</span></span><br><span class="line">Age      <span class="type">int</span></span><br><span class="line">Birthday time.Time</span><br><span class="line">Active   <span class="type">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过原生sql查询</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sqlRaw1</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">type</span> Result <span class="keyword">struct</span> &#123;</span><br><span class="line">ID   <span class="type">int</span></span><br><span class="line">Name <span class="type">string</span></span><br><span class="line">Age  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> result Result</span><br><span class="line">db.Raw(<span class="string">&quot;select id,name,age from users where name=?&quot;</span>, <span class="string">&quot;zs&quot;</span>).Scan(&amp;result)</span><br><span class="line">fmt.Println(result)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过exec</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sqlRaw2</span><span class="params">()</span></span> &#123;</span><br><span class="line">db.Exec(<span class="string">&quot;update users set age=? where name=?&quot;</span>, <span class="string">&quot;100&quot;</span>, <span class="string">&quot;王五&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// sql命名参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sqlRaw3</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> user User</span><br><span class="line"><span class="comment">// sql.Named 第一个name指的是@myname!!!!!!!!!!</span></span><br><span class="line">db.Where(<span class="string">&quot;name=@myname&quot;</span>, sql.Named(<span class="string">&quot;myname&quot;</span>, <span class="string">&quot;zs1&quot;</span>)).Find(&amp;user)</span><br><span class="line">fmt.Println(user)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//sqlRaw1()</span></span><br><span class="line"><span class="comment">//sqlRaw2()</span></span><br><span class="line">sqlRaw3()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Belongs-To-many-to-one"><a href="#Belongs-To-many-to-one" class="headerlink" title="Belongs To (many to one)"></a>Belongs To (many to one)</h2><blockquote><p>多个用户属于一个企业</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *gorm.DB</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库(init函数自动调用)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// refer https://github.com/go-sql-driver/mysql#dsn-data-source-name for details</span></span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_gorm?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span><br><span class="line">d, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">db = d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createTable1</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// many to one</span></span><br><span class="line"><span class="keyword">type</span> Company <span class="keyword">struct</span> &#123;</span><br><span class="line">ID   <span class="type">int</span></span><br><span class="line">Name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line">Name <span class="type">string</span></span><br><span class="line"><span class="comment">// 默认外键ID 必须是模型+ID</span></span><br><span class="line">CompanyID <span class="type">int</span></span><br><span class="line">Company   Company</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">db.AutoMigrate(&amp;Company&#123;&#125;, &amp;User&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createTable2</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">type</span> Company <span class="keyword">struct</span> &#123;</span><br><span class="line">ID   <span class="type">int</span></span><br><span class="line">Name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line">Name         <span class="type">string</span></span><br><span class="line">CompanyRefer <span class="type">int</span></span><br><span class="line"><span class="comment">// 自定义外键名称</span></span><br><span class="line">Company Company <span class="string">`gorm:&quot;foreignKey:CompanyRefer&quot;`</span></span><br><span class="line"><span class="comment">// use CompanyRefer as foreign key</span></span><br><span class="line">&#125;</span><br><span class="line">db.AutoMigrate(&amp;Company&#123;&#125;, &amp;User&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">createTable2()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Has-One-one-to-one"><a href="#Has-One-one-to-one" class="headerlink" title="Has One (one to one)"></a>Has One (one to one)</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *gorm.DB</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库(init函数自动调用)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// refer https://github.com/go-sql-driver/mysql#dsn-data-source-name for details</span></span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_gorm?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span><br><span class="line">d, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">db = d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// one to one</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createTable1</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// User has one CreditCard, UserID is the foreign key</span></span><br><span class="line"><span class="keyword">type</span> CreditCard <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line">Number <span class="type">string</span></span><br><span class="line">UserID <span class="type">uint</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line">CreditCard CreditCard</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">db.AutoMigrate(&amp;User&#123;&#125;, &amp;CreditCard&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多态</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createTable2</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Toy <span class="keyword">struct</span> &#123;</span><br><span class="line">ID        <span class="type">int</span></span><br><span class="line">Name      <span class="type">string</span></span><br><span class="line">OwnerID   <span class="type">int</span>    <span class="comment">// 表主键</span></span><br><span class="line">OwnerType <span class="type">string</span> <span class="comment">// 表名</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> Cat <span class="keyword">struct</span> &#123;</span><br><span class="line">ID   <span class="type">int</span></span><br><span class="line">Name <span class="type">string</span></span><br><span class="line">Toy  Toy <span class="string">`gorm:&quot;polymorphic:Owner;&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Dog <span class="keyword">struct</span> &#123;</span><br><span class="line">ID   <span class="type">int</span></span><br><span class="line">Name <span class="type">string</span></span><br><span class="line">Toy  Toy <span class="string">`gorm:&quot;polymorphic:Owner;&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">db.AutoMigrate(&amp;Toy&#123;&#125;, &amp;Dog&#123;&#125;, &amp;Cat&#123;&#125;)</span><br><span class="line"></span><br><span class="line">db.Create(&amp;Dog&#123;Name: <span class="string">&quot;dog1&quot;</span>, Toy: Toy&#123;Name: <span class="string">&quot;toy1&quot;</span>&#125;&#125;)</span><br><span class="line"><span class="comment">// INSERT INTO `dogs` (`name`) VALUES (&quot;dog1&quot;)</span></span><br><span class="line"><span class="comment">// INSERT INTO `toys` (`name`,`owner_id`,`owner_type`) VALUES (&quot;toy1&quot;,&quot;1&quot;,&quot;dogs&quot;)</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//createTable1()</span></span><br><span class="line">createTable2()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Has-Many-one-to-many"><a href="#Has-Many-one-to-many" class="headerlink" title="Has Many (one to many)"></a>Has Many (one to many)</h2><blockquote><p>一个用户拥有多个信用卡</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *gorm.DB</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库(init函数自动调用)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// refer https://github.com/go-sql-driver/mysql#dsn-data-source-name for details</span></span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_gorm?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span><br><span class="line">d, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">db = d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line">CreditCards []CreditCard</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> CreditCard <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line">Number <span class="type">string</span></span><br><span class="line">UserID <span class="type">uint</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// one to many</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createTable1</span><span class="params">()</span></span> &#123;</span><br><span class="line">db.AutoMigrate(&amp;User&#123;&#125;, &amp;CreditCard&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">createTable1()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Many-To-Many"><a href="#Many-To-Many" class="headerlink" title="Many To Many"></a>Many To Many</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class="line"><span class="string">&quot;gorm.io/gorm&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *gorm.DB</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接数据库(init函数自动调用)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// refer https://github.com/go-sql-driver/mysql#dsn-data-source-name for details</span></span><br><span class="line">dsn := <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/go_gorm?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span><br><span class="line">d, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">db = d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line">Languages []Language <span class="string">`gorm:&quot;many2many:user_languages;&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Language <span class="keyword">struct</span> &#123;</span><br><span class="line">gorm.Model</span><br><span class="line">Name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// many to many</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createTable1</span><span class="params">()</span></span> &#123;</span><br><span class="line">db.AutoMigrate(&amp;User&#123;&#125;, &amp;Language&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">()</span></span> &#123;</span><br><span class="line">l := Language&#123;</span><br><span class="line">Name: <span class="string">&quot;chinese&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">l2 := Language&#123;</span><br><span class="line">Name: <span class="string">&quot;english&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">user := User&#123;</span><br><span class="line">Languages: []Language&#123;l, l2&#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 只插入user数据，上面关联的 l,l2 也会在 languages 表自动插入。并且中间表 user_languages 也会插入对应的数据</span></span><br><span class="line">db.Create(&amp;user)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//createTable1()</span></span><br><span class="line">insert()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="实体关联"><a href="#实体关联" class="headerlink" title="实体关联"></a>实体关联</h2><blockquote><p><a href="https://gorm.io/docs/associations.html">https://gorm.io/docs/associations.html</a></p></blockquote><h2 id="session"><a href="#session" class="headerlink" title="session"></a>session</h2><blockquote><p><a href="https://gorm.io/docs/session.html">https://gorm.io/docs/session.html</a></p></blockquote><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><ul><li>事务要么都成功，要么都失败。有一个失败就回滚</li></ul><blockquote><p><a href="https://gorm.io/docs/transactions.html">https://gorm.io/docs/transactions.html</a></p></blockquote><h3 id="跳过事务"><a href="#跳过事务" class="headerlink" title="跳过事务"></a>跳过事务</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// Globally disable</span></span><br><span class="line">db, err := gorm.Open(sqlite.Open(<span class="string">&quot;gorm.db&quot;</span>), &amp;gorm.Config&#123;</span><br><span class="line">SkipDefaultTransaction: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Continuous session mode</span></span><br><span class="line">tx := db.Session(&amp;Session&#123;SkipDefaultTransaction: <span class="literal">true</span>&#125;)</span><br><span class="line">tx.First(&amp;user, <span class="number">1</span>)</span><br><span class="line">tx.Find(&amp;users)</span><br><span class="line">tx.Model(&amp;user).Update(<span class="string">&quot;Age&quot;</span>, <span class="number">18</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go gin使用</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%A1%86%E6%9E%B6/gin/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%A1%86%E6%9E%B6/gin/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line">r.GET(<span class="string">&quot;/ping&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(<span class="number">200</span>, gin.H&#123;</span><br><span class="line"><span class="string">&quot;message&quot;</span>: <span class="string">&quot;pong&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">r.Run() <span class="comment">// 监听并在 0.0.0.0:8080 上启动服务</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="实现用户登录"><a href="#实现用户登录" class="headerlink" title="实现用户登录"></a>实现用户登录</h2><h3 id="main-go"><a href="#main-go" class="headerlink" title="main.go"></a>main.go</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Login</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;login.html&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Welcome</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">username := c.PostForm(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">password := c.PostForm(<span class="string">&quot;password&quot;</span>)</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;welcome.html&quot;</span>, gin.H&#123;</span><br><span class="line"><span class="string">&quot;username&quot;</span>: username,</span><br><span class="line"><span class="string">&quot;password&quot;</span>: password,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line">r.LoadHTMLGlob(<span class="string">&quot;templates/*&quot;</span>)</span><br><span class="line">r.GET(<span class="string">&quot;/login&quot;</span>, Login)</span><br><span class="line">r.POST(<span class="string">&quot;/login&quot;</span>, Welcome)</span><br><span class="line">r.Run() <span class="comment">// 监听并在 0.0.0.0:8080 上启动服务</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="login-html"><a href="#login-html" class="headerlink" title="login.html"></a>login.html</h3><blockquote><p>form 一定要把里面的input包起来，找了很久的问题！！！！！！！！！！</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="welcome-html"><a href="#welcome-html" class="headerlink" title="welcome.html"></a>welcome.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">welcome---&#123;&#123;.username&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参数处理"><a href="#参数处理" class="headerlink" title="参数处理"></a>参数处理</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// TestGet 取query参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestGet</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 取query里的参数  ---》 ?后面的</span></span><br><span class="line">s := c.Query(<span class="string">&quot;username&quot;</span>)</span><br><span class="line"><span class="comment">// 如果password没传，就设置默认参数</span></span><br><span class="line">pwd := c.DefaultQuery(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;999&quot;</span>)</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;username=%s,password=%s&quot;</span>, s, pwd)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TestGetParams 取params参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestGetParams</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">s := c.Param(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">s2 := c.Param(<span class="string">&quot;age&quot;</span>)</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;name=%s,age=%s&quot;</span>, s, s2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TestSearch form post 和 query</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestSearch</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">page := c.DefaultQuery(<span class="string">&quot;page&quot;</span>, <span class="string">&quot;0&quot;</span>)</span><br><span class="line">key := c.PostForm(<span class="string">&quot;key&quot;</span>)</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;page=%s,key=%s&quot;</span>, page, key)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line">r.LoadHTMLGlob(<span class="string">&quot;templates/*&quot;</span>)</span><br><span class="line">r.GET(<span class="string">&quot;/login&quot;</span>, TestGet)</span><br><span class="line">r.GET(<span class="string">&quot;/param/:name/:age&quot;</span>, TestGetParams)</span><br><span class="line">r.POST(<span class="string">&quot;/search&quot;</span>, TestSearch)</span><br><span class="line">r.Run() <span class="comment">// 监听并在 0.0.0.0:8080 上启动服务</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="参数绑定到结构体"><a href="#参数绑定到结构体" class="headerlink" title="参数绑定到结构体"></a>参数绑定到结构体</h2><h3 id="test-form-html"><a href="#test-form-html" class="headerlink" title="test_form.html"></a>test_form.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/register&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    名称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    爱好：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;swimming&quot;</span>&gt;</span>游泳</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;basketball&quot;</span>&gt;</span>篮球</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    性别：</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;m&quot;</span>&gt;</span>男</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">id</span>=<span class="string">&quot;2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;f&quot;</span>&gt;</span> 女</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    城市：</span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;city&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;beijing&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shanghai&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="main-go-1"><a href="#main-go-1" class="headerlink" title="main.go"></a>main.go</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">Username <span class="type">string</span>   <span class="string">`form:&quot;username&quot;`</span></span><br><span class="line">Password <span class="type">string</span>   <span class="string">`form:&quot;password&quot;`</span></span><br><span class="line">Hobby    []<span class="type">string</span> <span class="string">`form:&quot;hobby&quot;`</span></span><br><span class="line">Gender   <span class="type">string</span>   <span class="string">`form:&quot;gender&quot;`</span></span><br><span class="line">City     <span class="type">string</span>   <span class="string">`form:&quot;city&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GoRegister</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;test_form.html&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Register 绑定form post参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Register</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> user User</span><br><span class="line">c.ShouldBind(&amp;user)</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;form data= %s&quot;</span>, user)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// User2 绑定get参数，结构体也是使用也是form</span></span><br><span class="line"><span class="keyword">type</span> User2 <span class="keyword">struct</span> &#123;</span><br><span class="line">Username <span class="type">string</span> <span class="string">`form:&quot;username&quot;`</span></span><br><span class="line">Password <span class="type">string</span> <span class="string">`form:&quot;password&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetBindQuery http://localhost:8080/GetBindQuery?username=tom&amp;password=99</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetBindQuery</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> user User2</span><br><span class="line">c.ShouldBind(&amp;user)</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;get bind query %s&quot;</span>, user)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// User3 params绑定需要使用uri!!!!!!!!!!!!!!</span></span><br><span class="line"><span class="keyword">type</span> User3 <span class="keyword">struct</span> &#123;</span><br><span class="line">Username <span class="type">string</span> <span class="string">`uri:&quot;username&quot;`</span></span><br><span class="line">Password <span class="type">string</span> <span class="string">`uri:&quot;password&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetBindParams http://localhost:8080/GetBindParams/tom/66</span></span><br><span class="line"><span class="comment">// 绑定方法需要使用 c.ShouldBindUri</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetBindParams</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> user User3</span><br><span class="line">c.ShouldBindUri(&amp;user)</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;get bind params uri %s&quot;</span>, user)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line">r.LoadHTMLGlob(<span class="string">&quot;templates/*&quot;</span>)</span><br><span class="line">r.GET(<span class="string">&quot;/register&quot;</span>, GoRegister)</span><br><span class="line">r.POST(<span class="string">&quot;/register&quot;</span>, Register)</span><br><span class="line"></span><br><span class="line"><span class="comment">// get bind query</span></span><br><span class="line">r.GET(<span class="string">&quot;/GetBindQuery&quot;</span>, GetBindQuery)</span><br><span class="line"></span><br><span class="line"><span class="comment">// get bind params</span></span><br><span class="line">r.GET(<span class="string">&quot;/GetBindParams/:username/:password&quot;</span>, GetBindParams)</span><br><span class="line">r.Run() <span class="comment">// 监听并在 0.0.0.0:8080 上启动服务</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用静态文件"><a href="#使用静态文件" class="headerlink" title="使用静态文件"></a>使用静态文件</h2><blockquote><p>需要把bootstrap的css和js放到assets文件夹下</p></blockquote><h3 id="main-go-2"><a href="#main-go-2" class="headerlink" title="main.go"></a>main.go</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GoStatic</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;test_static.html&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"><span class="comment">// 第一个参数是使用的路径，第二个参数是实际路径（相对路径）</span></span><br><span class="line">r.Static(<span class="string">&quot;/assets&quot;</span>, <span class="string">&quot;./assets&quot;</span>)</span><br><span class="line">r.LoadHTMLGlob(<span class="string">&quot;templates/*&quot;</span>)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/GoStatic&quot;</span>, GoStatic)</span><br><span class="line">r.Run() <span class="comment">// 监听并在 0.0.0.0:8080 上启动服务</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="test-static-html"><a href="#test-static-html" class="headerlink" title="test_static.html"></a>test_static.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/assets/css/bootstrap.min.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/assets/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-select&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Default select example&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>&gt;</span>Open this select menu<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>One<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><ol><li>使用<code>gin.Default()</code>，默认自带两个中间件<code>Logger(),Recovery()</code></li><li>使用<code>gin.New()</code>，不自带中间件</li></ol><h3 id="自定义全局中间件和路由中间件"><a href="#自定义全局中间件和路由中间件" class="headerlink" title="自定义全局中间件和路由中间件"></a>自定义全局中间件和路由中间件</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;hello word&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">MyMiddleware</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;全局自定义中间件&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">MyMiddleware2</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;路由自定义中间件&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局中间件</span></span><br><span class="line"><span class="comment">// Logger 中间件将日志写入 gin.DefaultWriter，即使你将 GIN_MODE 设置为 release。</span></span><br><span class="line"><span class="comment">// By default gin.DefaultWriter = os.Stdout</span></span><br><span class="line"><span class="comment">//r.Use(gin.Logger())</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Recovery 中间件会 recover 任何 panic。如果有 panic 的话，会写入 500。</span></span><br><span class="line"><span class="comment">//r.Use(gin.Recovery())</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局中间件</span></span><br><span class="line">r.Use(MyMiddleware)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由中间件</span></span><br><span class="line">r.GET(<span class="string">&quot;/Test&quot;</span>, MyMiddleware2, Test)</span><br><span class="line">r.Run() <span class="comment">// 监听并在 0.0.0.0:8080 上启动服务</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="BasicAuth-中间件"><a href="#BasicAuth-中间件" class="headerlink" title="BasicAuth 中间件"></a>BasicAuth 中间件</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟私人数据，只有在弹窗输入正确用户密码时才会返回</span></span><br><span class="line"><span class="keyword">var</span> secrets = gin.H&#123;</span><br><span class="line"><span class="string">&quot;foo&quot;</span>: gin.H&#123;</span><br><span class="line"><span class="string">&quot;email&quot;</span>: <span class="string">&quot;foo@bar.com&quot;</span>,</span><br><span class="line"><span class="string">&quot;phone&quot;</span>: <span class="string">&quot;12345679811&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Handle</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">fmt.Println(gin.AuthUserKey)</span><br><span class="line"><span class="comment">// gin.AuthUserKey = &#x27;user&#x27;</span></span><br><span class="line"><span class="comment">// 是在输入后，gin存到上下文的相当于set(&quot;user&quot;,&quot;这里弹窗是输入的用户名&quot;)</span></span><br><span class="line"><span class="comment">// MustGet 取到gin存入的数据</span></span><br><span class="line">user := c.MustGet(gin.AuthUserKey).(<span class="type">string</span>)</span><br><span class="line">fmt.Println(user)</span><br><span class="line"><span class="comment">// 这里设置登录进去返回的数据，从 secrets 里取</span></span><br><span class="line"><span class="keyword">if</span> secret, ok := secrets[user]; ok &#123;</span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;<span class="string">&quot;user&quot;</span>: user, <span class="string">&quot;secret&quot;</span>: secret&#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;<span class="string">&quot;user&quot;</span>: user, <span class="string">&quot;secret&quot;</span>: <span class="string">&quot;no secret&quot;</span>&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里设置输入框输入的用户密码是否和 gin.Accounts 的对应。admin开头的接口都需要验证</span></span><br><span class="line">ra := r.Group(<span class="string">&quot;/admin&quot;</span>, gin.BasicAuth(gin.Accounts&#123;</span><br><span class="line"><span class="string">&quot;foo&quot;</span>: <span class="string">&quot;foo&quot;</span>,</span><br><span class="line"><span class="string">&quot;baz&quot;</span>: <span class="string">&quot;baz&quot;</span>,</span><br><span class="line">&#125;))</span><br><span class="line">ra.GET(<span class="string">&quot;/secrets&quot;</span>, Handle)</span><br><span class="line"></span><br><span class="line">r.Run() <span class="comment">// 监听并在 0.0.0.0:8080 上启动服务</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="cookies"><a href="#cookies" class="headerlink" title="cookies"></a>cookies</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Handle</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">s, err := c.Cookie(<span class="string">&quot;username&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">s = <span class="string">&quot;yw&quot;</span></span><br><span class="line"><span class="comment">// 键名，值，过期时间，路径（/ = 当前目录），域名，是否使用https（true是 false否），是否只允许http访问</span></span><br><span class="line">c.SetCookie(<span class="string">&quot;username&quot;</span>, s, <span class="number">60</span>*<span class="number">60</span>, <span class="string">&quot;/&quot;</span>, <span class="string">&quot;localhost&quot;</span>, <span class="literal">false</span>, <span class="literal">true</span>)</span><br><span class="line">&#125;</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;设置cookies&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := gin.Default()</span><br><span class="line">c.GET(<span class="string">&quot;/test_cookies&quot;</span>, Handle)</span><br><span class="line">c.Run()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Upload</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 单文件上传</span></span><br><span class="line">file, _ := c.FormFile(<span class="string">&quot;file&quot;</span>)</span><br><span class="line">fmt.Println(file.Filename)</span><br><span class="line"><span class="comment">// 上传文件到项目根目录，使用原文件名</span></span><br><span class="line"><span class="comment">//c.SaveUploadedFile(file, file.Filename)</span></span><br><span class="line"><span class="comment">// 上传到指定文件夹</span></span><br><span class="line">c.SaveUploadedFile(file, <span class="string">&quot;./files/&quot;</span>+file.Filename)</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;upload file filename=%s&quot;</span>, file.Filename)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GoUpload</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;test_upload.html&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := gin.Default()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 为multipart forms 设置较低的内存限制</span></span><br><span class="line">c.MaxMultipartMemory = <span class="number">8</span> &lt;&lt; <span class="number">20</span></span><br><span class="line">c.LoadHTMLGlob(<span class="string">&quot;templates/*&quot;</span>)</span><br><span class="line">c.GET(<span class="string">&quot;/upload&quot;</span>, GoUpload)</span><br><span class="line">c.POST(<span class="string">&quot;/upload&quot;</span>, Upload)</span><br><span class="line">c.Run()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="restful-curd"><a href="#restful-curd" class="headerlink" title="restful curd"></a>restful curd</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;strconv&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">UID  <span class="type">int</span>    <span class="string">`json:&quot;uid&quot;`</span></span><br><span class="line">Name <span class="type">string</span> <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">Age  <span class="type">int</span>    <span class="string">`json:&quot;age&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> users = <span class="built_in">make</span>([]User, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">u1 := User&#123;<span class="number">1</span>, <span class="string">&quot;tom&quot;</span>, <span class="number">11</span>&#125;</span><br><span class="line">u2 := User&#123;<span class="number">2</span>, <span class="string">&quot;kite&quot;</span>, <span class="number">44</span>&#125;</span><br><span class="line">u3 := User&#123;<span class="number">3</span>, <span class="string">&quot;rose&quot;</span>, <span class="number">88</span>&#125;</span><br><span class="line">users = <span class="built_in">append</span>(users, u1)</span><br><span class="line">users = <span class="built_in">append</span>(users, u2)</span><br><span class="line">users = <span class="built_in">append</span>(users, u3)</span><br><span class="line">fmt.Println(users)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Find 模拟从数据库找数据</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Find</span><span class="params">(uid <span class="type">int</span>)</span></span> (*User, <span class="type">int</span>) &#123;</span><br><span class="line"><span class="comment">// 循环，第一个是下标，第二个是用户数据</span></span><br><span class="line"><span class="keyword">for</span> i, u := <span class="keyword">range</span> users &#123;</span><br><span class="line"><span class="comment">// 如果用户数据和传入的id相等</span></span><br><span class="line"><span class="keyword">if</span> u.UID == uid &#123;</span><br><span class="line"><span class="comment">// 返回找到用户的地址，下标</span></span><br><span class="line"><span class="keyword">return</span> &amp;u, i</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 没找到用户数据为nil，下标为-1</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="number">-1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// AddUser 增加</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddUser</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">u4 := User&#123;</span><br><span class="line">UID:  <span class="number">4</span>,</span><br><span class="line">Name: <span class="string">&quot;joe&quot;</span>,</span><br><span class="line">Age:  <span class="number">2222</span>,</span><br><span class="line">&#125;</span><br><span class="line">users = <span class="built_in">append</span>(users, u4)</span><br><span class="line">c.JSON(<span class="number">200</span>, users)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DelUser 删除</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">DelUser</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 从params取到uid（字符串类型）</span></span><br><span class="line">uid := c.Param(<span class="string">&quot;uid&quot;</span>)</span><br><span class="line"><span class="comment">// 将字符串的uid转成int id</span></span><br><span class="line">id, _ := strconv.Atoi(uid)</span><br><span class="line"><span class="comment">// 查找用户</span></span><br><span class="line">_, i := Find(id)</span><br><span class="line"><span class="comment">// append users[:i]代表从下标0到i，user[i+1]: 代表从i+1到最后，...代表平铺</span></span><br><span class="line">users = <span class="built_in">append</span>(users[:i], users[i+<span class="number">1</span>:]...)</span><br><span class="line">c.JSON(<span class="number">200</span>, users)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UpdateUser 更新</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">UpdateUser</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">uid := c.Param(<span class="string">&quot;uid&quot;</span>)</span><br><span class="line">id, _ := strconv.Atoi(uid)</span><br><span class="line">u, _ := Find(id)</span><br><span class="line">u.Name = <span class="string">&quot;qq&quot;</span></span><br><span class="line">fmt.Println(u)</span><br><span class="line">fmt.Println(*u)</span><br><span class="line">c.JSON(<span class="number">200</span>, *u)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// FindUser 查找用户</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">FindUser</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">uid := c.Param(<span class="string">&quot;uid&quot;</span>)</span><br><span class="line">id, _ := strconv.Atoi(uid)</span><br><span class="line">u, _ := Find(id)</span><br><span class="line">c.JSON(<span class="number">200</span>, u)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := gin.Default()</span><br><span class="line"></span><br><span class="line">c.GET(<span class="string">&quot;/user/:uid&quot;</span>, FindUser)</span><br><span class="line">c.POST(<span class="string">&quot;/user/:uid&quot;</span>, AddUser)</span><br><span class="line">c.PUT(<span class="string">&quot;/user/:uid&quot;</span>, UpdateUser)</span><br><span class="line">c.DELETE(<span class="string">&quot;/user/:uid&quot;</span>, DelUser)</span><br><span class="line">c.Run()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 并发</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E5%B9%B6%E5%8F%91/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E5%B9%B6%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">str</span><span class="params">(str <span class="type">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">fmt.Println(str)</span><br><span class="line">time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 开启一个协程</span></span><br><span class="line"><span class="keyword">go</span> str(<span class="string">&quot;first&quot;</span>)</span><br><span class="line">str(<span class="string">&quot;second&quot;</span>)</span><br><span class="line"><span class="comment">//go str(&quot;second&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//上面全是协程函数时，最后不能写一个同步代码，如果有同步代码执行完，就直接结束主函数！！！！！！！</span></span><br><span class="line"><span class="comment">//fmt.Println(&quot;直接结束&quot;)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="通道channel"><a href="#通道channel" class="headerlink" title="通道channel"></a>通道channel</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;math/rand&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建int类型的通道，只能传入int类型值</span></span><br><span class="line"><span class="keyword">var</span> values = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">send</span><span class="params">()</span></span> &#123;</span><br><span class="line">rand.Seed(time.Now().UnixNano())</span><br><span class="line">value := rand.Intn(<span class="number">10</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;send:%v\n&quot;</span>, value)</span><br><span class="line"><span class="comment">//time.Sleep(time.Second *5)</span></span><br><span class="line">values &lt;- value</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 从通道接收值</span></span><br><span class="line"><span class="keyword">defer</span> <span class="built_in">close</span>(values)</span><br><span class="line"><span class="keyword">go</span> send()</span><br><span class="line">fmt.Println(<span class="string">&quot;wait..&quot;</span>)</span><br><span class="line">value := &lt;-values</span><br><span class="line">fmt.Printf(<span class="string">&quot;receive:%v\n&quot;</span>, value)</span><br><span class="line">fmt.Println(<span class="string">&quot;end&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="WaitGroup"><a href="#WaitGroup" class="headerlink" title="WaitGroup"></a>WaitGroup</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;sync&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">hello</span><span class="params">(i <span class="type">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> wg.Done()</span><br><span class="line">fmt.Println(<span class="string">&quot;hello goroutine&quot;</span>, i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> hello(i)</span><br><span class="line">&#125;</span><br><span class="line">wg.Wait()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 方法</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%96%B9%E6%B3%95/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="结构体方法"><a href="#结构体方法" class="headerlink" title="结构体方法"></a>结构体方法</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结构体方法，相当于把当前的函数挂载到结构体上，结构体初始化后，可以从对象调用方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Person)</span></span> eat() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;eat&quot;</span>, p.name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Person)</span></span> sleep() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;sleep&quot;</span>, p.name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Customer <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">pwd  <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c Customer)</span></span> login(name <span class="type">string</span>, pwd <span class="type">string</span>) <span class="type">bool</span> &#123;</span><br><span class="line">fmt.Println(c.name, c.pwd)</span><br><span class="line"><span class="keyword">if</span> name == c.name &amp;&amp; pwd == c.pwd &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//var p1 = Person&#123;</span></span><br><span class="line"><span class="comment">//name: &quot;张三&quot;,</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//p1.eat()</span></span><br><span class="line"><span class="comment">//p1.sleep()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c1 = Customer&#123;</span><br><span class="line">name: <span class="string">&quot;tom&quot;</span>,</span><br><span class="line">pwd:  <span class="string">&quot;123&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">r := c1.login(<span class="string">&quot;tom1&quot;</span>, <span class="string">&quot;123&quot;</span>)</span><br><span class="line">fmt.Println(r)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法接收者类型"><a href="#方法接收者类型" class="headerlink" title="方法接收者类型"></a>方法接收者类型</h2><h3 id="值类型结构体和指针类型结构体"><a href="#值类型结构体和指针类型结构体" class="headerlink" title="值类型结构体和指针类型结构体"></a>值类型结构体和指针类型结构体</h3><h4 id="demo1"><a href="#demo1" class="headerlink" title="demo1"></a>demo1</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p1 := Person&#123;</span><br><span class="line">name: <span class="string">&quot;tom&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(p1) <span class="comment">// 值类型</span></span><br><span class="line">p2 := &amp;Person&#123;</span><br><span class="line">name: <span class="string">&quot;tom&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v&quot;</span>, p2) <span class="comment">// 指针类型</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="demo2"><a href="#demo2" class="headerlink" title="demo2"></a>demo2</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f1</span><span class="params">(p Person)</span></span> &#123;</span><br><span class="line"><span class="comment">// 传值类型，修改后源数据不会变</span></span><br><span class="line">p.name = <span class="string">&quot;tom&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f2</span><span class="params">(p *Person)</span></span> &#123;</span><br><span class="line"><span class="comment">// 传指针类型，修改后源数据也会变</span></span><br><span class="line"><span class="comment">// p.name 自动解引用！！！！！！！！！</span></span><br><span class="line"><span class="comment">// 正常需要下面步骤</span></span><br><span class="line"><span class="comment">// (*p).name = &quot;list&quot;</span></span><br><span class="line">p.name = <span class="string">&quot;lisi&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p := Person&#123;</span><br><span class="line">name: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">p2 := &amp;Person&#123;</span><br><span class="line">name: <span class="string">&quot;tom&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(p)</span><br><span class="line">fmt.Println(<span class="string">&quot;调用值类型方法&quot;</span>)</span><br><span class="line">f1(p)</span><br><span class="line">fmt.Println(p)</span><br><span class="line">fmt.Println(<span class="string">&quot;调用指针类型方法&quot;</span>)</span><br><span class="line">f2(p2)</span><br><span class="line">fmt.Println(*p2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="demo3"><a href="#demo3" class="headerlink" title="demo3"></a>demo3</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Person)</span></span> f3() &#123;</span><br><span class="line">p.name = <span class="string">&quot;f3&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Person)</span></span> f4() &#123;</span><br><span class="line">p.name = <span class="string">&quot;f4&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p := Person&#123;</span><br><span class="line">name: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">p2 := &amp;Person&#123;</span><br><span class="line">name: <span class="string">&quot;tom&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(p)</span><br><span class="line">fmt.Println(<span class="string">&quot;调用值类型方法&quot;</span>)</span><br><span class="line">p.f3()</span><br><span class="line">fmt.Println(p)</span><br><span class="line">fmt.Println(<span class="string">&quot;调用指针类型方法&quot;</span>)</span><br><span class="line">p2.f4()</span><br><span class="line">fmt.Println(*p2)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 模拟构造函数</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%A8%A1%E6%8B%9F%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%A8%A1%E6%8B%9F%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">age  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewPerson</span><span class="params">(name <span class="type">string</span>, age <span class="type">int</span>)</span></span> (*Person, <span class="type">error</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> name == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">&quot;name 不能为空&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> age &lt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">&quot;age 不能小于0&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> &amp;Person&#123;name: name, age: age&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p, err := NewPerson(<span class="string">&quot;John&quot;</span>, <span class="number">11</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(p)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 函数</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E5%87%BD%E6%95%B0/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="普通函数"><a href="#普通函数" class="headerlink" title="普通函数"></a>普通函数</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 单返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span><span class="params">(a <span class="type">int</span>, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test2</span><span class="params">()</span></span> (<span class="type">string</span>, <span class="type">int</span>) &#123;</span><br><span class="line">name := <span class="string">&quot;张三&quot;</span></span><br><span class="line">age := <span class="number">11</span></span><br><span class="line"><span class="keyword">return</span> name, age</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 命名多返回值</span></span><br><span class="line"><span class="comment">// 命名多返回值不用声明变量 var name := &quot;张三&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test3</span><span class="params">()</span></span> (name <span class="type">string</span>, age <span class="type">int</span>) &#123;</span><br><span class="line">name = <span class="string">&quot;张三&quot;</span></span><br><span class="line">age = <span class="number">11</span></span><br><span class="line"><span class="keyword">return</span> name, age</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//s := sum(1, 2)</span></span><br><span class="line"><span class="comment">//fmt.Println(s)</span></span><br><span class="line"></span><br><span class="line">n, a := test2()</span><br><span class="line">fmt.Println(n, a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="函数类型"><a href="#函数类型" class="headerlink" title="函数类型"></a>函数类型</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span><span class="params">(a <span class="type">int</span>, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">max</span><span class="params">(a <span class="type">int</span>, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">if</span> a &gt; b &#123;</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">type</span> f1 <span class="function"><span class="keyword">func</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span></span> <span class="type">int</span></span><br><span class="line"><span class="comment">// 函数类型为f1</span></span><br><span class="line"><span class="keyword">var</span> ff f1 = sum</span><br><span class="line">r := ff(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">fmt.Println(r)</span><br><span class="line"></span><br><span class="line">ff = max</span><br><span class="line">r = ff(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">fmt.Println(r)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="类型定义和类型别名"><a href="#类型定义和类型别名" class="headerlink" title="类型定义和类型别名"></a>类型定义和类型别名</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 类型定义 创建一个新类型</span></span><br><span class="line"><span class="comment">//type MyInt int</span></span><br><span class="line"><span class="comment">//var i MyInt = 100</span></span><br><span class="line"><span class="comment">//fmt.Printf(&quot;%T,%v&quot;, i, i) // main.MyInt,100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 类型别名 类型不变</span></span><br><span class="line"><span class="keyword">type</span> MyInt = <span class="type">int</span></span><br><span class="line"><span class="keyword">var</span> i MyInt = <span class="number">100</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T,%v&quot;</span>, i, i) <span class="comment">// int,100</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h2><h3 id="函数作为参数"><a href="#函数作为参数" class="headerlink" title="函数作为参数"></a>函数作为参数</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">say</span><span class="params">(name <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f1</span><span class="params">(name <span class="type">string</span>, f <span class="keyword">func</span>(<span class="type">string</span>)</span></span>) &#123;</span><br><span class="line">f(name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">f1(<span class="string">&quot;hello world&quot;</span>, say)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="返回值为函数"><a href="#返回值为函数" class="headerlink" title="返回值为函数"></a>返回值为函数</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(a <span class="type">int</span>, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sub</span><span class="params">(a <span class="type">int</span>, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a - b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">cal</span><span class="params">(operator <span class="type">string</span>)</span></span> <span class="function"><span class="keyword">func</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> operator &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;+&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> add</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;-&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> sub</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ff := cal(<span class="string">&quot;+&quot;</span>)</span><br><span class="line">r := ff(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">fmt.Println(r)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 匿名执行函数</span></span><br><span class="line">r := <span class="function"><span class="keyword">func</span><span class="params">(a <span class="type">int</span>, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">if</span> a &lt; b &#123;</span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line">&#125;(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">fmt.Println(r)</span><br><span class="line"></span><br><span class="line"><span class="comment">//匿名函数</span></span><br><span class="line">max := <span class="function"><span class="keyword">func</span><span class="params">(a <span class="type">int</span>, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">if</span> a &lt; b &#123;</span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">r2 := max(<span class="number">1</span>, <span class="number">4</span>)</span><br><span class="line">fmt.Println(r2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">f1 := add()</span><br><span class="line">r := f1(<span class="number">10</span>)</span><br><span class="line">fmt.Println(r)</span><br><span class="line"></span><br><span class="line">r2 := f1(<span class="number">20</span>)</span><br><span class="line">fmt.Println(r2)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;---------&quot;</span>)</span><br><span class="line"><span class="comment">// 重新创建一个函数，闭包就被清空，值不会被保存</span></span><br><span class="line">f2 := add()</span><br><span class="line">r5 := f2(<span class="number">10</span>)</span><br><span class="line">fmt.Println(r5)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">cal</span><span class="params">(base <span class="type">int</span>)</span></span> (<span class="function"><span class="keyword">func</span><span class="params">(<span class="type">int</span>)</span></span> <span class="type">int</span>, <span class="function"><span class="keyword">func</span><span class="params">(<span class="type">int</span>)</span></span> <span class="type">int</span>) &#123;</span><br><span class="line">add := <span class="function"><span class="keyword">func</span><span class="params">(a <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">base += a</span><br><span class="line"><span class="keyword">return</span> base</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sub := <span class="function"><span class="keyword">func</span><span class="params">(a <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">base -= a</span><br><span class="line"><span class="keyword">return</span> base</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> add, sub</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">add, sub := cal(<span class="number">1</span>)</span><br><span class="line">r := add(<span class="number">9</span>)</span><br><span class="line">fmt.Println(r) <span class="comment">// 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 因为没有重新调用cal函数，所以执行减函数时，是复用加后的值</span></span><br><span class="line">r2 := sub(<span class="number">2</span>)</span><br><span class="line">fmt.Println(r2) <span class="comment">// 8</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="可变参数列表"><a href="#可变参数列表" class="headerlink" title="可变参数列表"></a>可变参数列表</h2><blockquote><p>func sumArgs(values …int)  </p></blockquote><ul><li>可传入多个值</li><li>值的类型为<code>...</code>后面的类型</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sumArgs</span><span class="params">(values ...<span class="type">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> values &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">sumArgs(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 继承</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E7%BB%A7%E6%89%BF/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E7%BB%A7%E6%89%BF/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Animal <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">age  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a Animal)</span></span> eat() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;a eat&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a Animal)</span></span> sleep() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;a sleep&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Dog <span class="keyword">struct</span> &#123;</span><br><span class="line">Animal</span><br><span class="line">test <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> Cat <span class="keyword">struct</span> &#123;</span><br><span class="line">animal Animal</span><br><span class="line">color  <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 匿名继承，需要按顺序来</span></span><br><span class="line">dog := Dog&#123;</span><br><span class="line">Animal&#123;</span><br><span class="line">name: <span class="string">&quot;小狗&quot;</span>,</span><br><span class="line">age:  <span class="number">1</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;测试&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">dog.eat()</span><br><span class="line">dog.sleep()</span><br><span class="line"><span class="comment">// 具名继承，因为eat和sleep方法是挂载在Animal上，所以具名继承需要从animal调用</span></span><br><span class="line">cat := Cat&#123;animal: Animal&#123;name: <span class="string">&quot;大黄&quot;</span>, age: <span class="number">1</span>&#125;, color: <span class="string">&quot;white&quot;</span>&#125;</span><br><span class="line">cat.animal.eat()</span><br><span class="line">cat.animal.sleep()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 接口</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%8E%A5%E5%8F%A3/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> USB <span class="keyword">interface</span> &#123;</span><br><span class="line">read()</span><br><span class="line">write()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Computer <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Mobile <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结构体方法实现了某一个接口上的方法，就相当于实现了这个接口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c Computer)</span></span> read() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;computer read&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c Computer)</span></span> write() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;computer read&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m Mobile)</span></span> read() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;mobile read name --- &quot;</span>, m.name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m Mobile)</span></span> write() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;mobile write name --- &quot;</span>, m.name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">c := Computer&#123;&#125;</span><br><span class="line">c.write()</span><br><span class="line">c.read()</span><br><span class="line"></span><br><span class="line"><span class="comment">//m := Mobile&#123;</span></span><br><span class="line"><span class="comment">//name: &quot;华为&quot;,</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">m := <span class="built_in">new</span>(Mobile) <span class="comment">// 快速初始化</span></span><br><span class="line">m.write()</span><br><span class="line">m.read()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="结果结构体方法接收者（值类型和指针类型，和方法一致）"><a href="#结果结构体方法接收者（值类型和指针类型，和方法一致）" class="headerlink" title="结果结构体方法接收者（值类型和指针类型，和方法一致）"></a>结果结构体方法接收者（值类型和指针类型，和方法一致）</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Pet <span class="keyword">interface</span> &#123;</span><br><span class="line">eat()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Dog <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Cat <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 和方法一致 */</span></span><br><span class="line"><span class="comment">// 值类型接收者不会改变源数据</span></span><br><span class="line"><span class="comment">//func (dog Dog) eat() &#123;</span></span><br><span class="line"><span class="comment">//dog.name = &quot;dog1&quot;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 指针类型接收者会改变源数据</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(dog *Dog)</span></span> eat() &#123;</span><br><span class="line">dog.name = <span class="string">&quot;dog1&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不同结构体方法可以实现函数重名，类似重载！！！！！！！！！</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Cat)</span></span> eat() &#123;</span><br><span class="line">c.name = <span class="string">&quot;dog1&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//d := Dog&#123;</span></span><br><span class="line"><span class="comment">//name: &quot;dog&quot;,</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">d := &amp;Dog&#123;</span><br><span class="line">name: <span class="string">&quot;dog&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(d.name)</span><br><span class="line">d.eat()</span><br><span class="line">fmt.Println(d.name)</span><br><span class="line">&#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h2 id="结构体实现多个接口"><a href="#结构体实现多个接口" class="headerlink" title="结构体实现多个接口"></a>结构体实现多个接口</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Player <span class="keyword">interface</span> &#123;</span><br><span class="line">playMusic()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Video <span class="keyword">interface</span> &#123;</span><br><span class="line">playVideo()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个结构体可以实现多个接口（同一个结构体，不同名的方法）</span></span><br><span class="line"><span class="keyword">type</span> Mobile <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m Mobile)</span></span> playMusic() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;playMusic&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m Mobile)</span></span> playVideo() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;playVideo&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">m := Mobile&#123;&#125;</span><br><span class="line">m.playVideo()</span><br><span class="line">m.playMusic()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="多个结构体实现同一个接口"><a href="#多个结构体实现同一个接口" class="headerlink" title="多个结构体实现同一个接口"></a>多个结构体实现同一个接口</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Pet <span class="keyword">interface</span> &#123;</span><br><span class="line">eat()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Cat <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Dog <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d Cat)</span></span> eat() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;cat eat&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d Dog)</span></span> eat() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;dog eat&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">d := Dog&#123;name: <span class="string">&quot;dog&quot;</span>&#125;</span><br><span class="line">c := Cat&#123;name: <span class="string">&quot;cat&quot;</span>&#125;</span><br><span class="line">d.eat()</span><br><span class="line">c.eat()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="实现嵌套接口"><a href="#实现嵌套接口" class="headerlink" title="实现嵌套接口"></a>实现嵌套接口</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Flyer <span class="keyword">interface</span> &#123;</span><br><span class="line">fly()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Swimmer <span class="keyword">interface</span> &#123;</span><br><span class="line">swim()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> FlyFish <span class="keyword">interface</span> &#123;</span><br><span class="line">Flyer</span><br><span class="line">Swimmer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Fish <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(f Fish)</span></span> fly() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Fish fly&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(f Fish)</span></span> swim() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Fish fly&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 结构体想要调嵌套接口的方法，除了需要实现嵌套接口里的方法，还需要将结构体初始化后对象的类型设置为嵌套组合的接口</span></span><br><span class="line"><span class="keyword">var</span> ff FlyFish = Fish&#123;name: <span class="string">&quot;fish&quot;</span>&#125;</span><br><span class="line">ff.swim()</span><br><span class="line">ff.fly()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ocp-设计原则"><a href="#ocp-设计原则" class="headerlink" title="ocp 设计原则"></a>ocp 设计原则</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Pet <span class="keyword">interface</span> &#123;</span><br><span class="line">eat()</span><br><span class="line">sleep()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Dog <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Cat <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d Dog)</span></span> eat() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;dog eat&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d Dog)</span></span> sleep() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;dog sleep&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c Cat)</span></span> eat() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;cat eat&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c Cat)</span></span> sleep() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;cat sleep&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Person)</span></span> care(pet Pet) &#123;</span><br><span class="line">pet.sleep()</span><br><span class="line">pet.eat()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">dog := <span class="built_in">new</span>(Dog)</span><br><span class="line">cat := <span class="built_in">new</span>(Cat)</span><br><span class="line"></span><br><span class="line">person := <span class="built_in">new</span>(Person)</span><br><span class="line">person.care(dog)</span><br><span class="line">person.care(cat)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="oop-思想的实现和方法"><a href="#oop-思想的实现和方法" class="headerlink" title="oop 思想的实现和方法"></a>oop 思想的实现和方法</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">age  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Person)</span></span> eat() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;person eat&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Person)</span></span> sleep() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;person sleep&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Person)</span></span> work() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;person work&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p := Person&#123;</span><br><span class="line">name: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">age:  <span class="number">22</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p.eat()</span><br><span class="line">p.work()</span><br><span class="line">p.sleep()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 结构体</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E7%BB%93%E6%9E%84%E4%BD%93/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E7%BB%93%E6%9E%84%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span>&#123;</span><br><span class="line">id <span class="type">int</span></span><br><span class="line">name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">showPerson2</span><span class="params">(p *Person)</span></span>&#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;showPerson2&quot;</span>,p)</span><br><span class="line">p.id = <span class="number">1</span></span><br><span class="line">p.name = <span class="string">&quot;nike&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 值传递，拷贝了一份副本</span></span><br><span class="line"><span class="comment">// func showPerson(p Person)&#123;</span></span><br><span class="line"><span class="comment">// p.id = 1</span></span><br><span class="line"><span class="comment">// p.name = &quot;nike&quot;</span></span><br><span class="line"><span class="comment">// fmt.Println(p)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> tom = Person&#123;</span><br><span class="line">id:<span class="number">100</span>,</span><br><span class="line">name:<span class="string">&quot;tom&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传递结构体指针参数，方法改变传递对象的值，源对象也会改变</span></span><br><span class="line">per := &amp;tom</span><br><span class="line">fmt.Println(tom)</span><br><span class="line">fmt.Println(<span class="string">&quot;-------&quot;</span>)</span><br><span class="line">showPerson2(per)</span><br><span class="line">fmt.Println(per)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传递结构体参数，方法改变传递对象的值，源对象不会改变</span></span><br><span class="line"><span class="comment">// fmt.Println(tom)</span></span><br><span class="line"><span class="comment">// fmt.Println(&quot;-------&quot;)</span></span><br><span class="line"><span class="comment">// showPerson(tom)</span></span><br><span class="line"><span class="comment">// fmt.Println(tom)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="结构体嵌套"><a href="#结构体嵌套" class="headerlink" title="结构体嵌套"></a>结构体嵌套</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Dog <span class="keyword">struct</span> &#123;</span><br><span class="line">name  <span class="type">string</span></span><br><span class="line">age   <span class="type">int</span></span><br><span class="line">color <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">dog  Dog</span><br><span class="line">name <span class="type">string</span></span><br><span class="line">age  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> p Person</span><br><span class="line">p.name = <span class="string">&quot;张三&quot;</span></span><br><span class="line">p.age = <span class="number">100</span></span><br><span class="line">p.dog.color = <span class="string">&quot;black&quot;</span></span><br><span class="line">p.dog.age = <span class="number">11</span></span><br><span class="line">p.dog.name = <span class="string">&quot;大黄&quot;</span></span><br><span class="line"></span><br><span class="line">fmt.Println(p)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 模块</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%A8%A1%E5%9D%97/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="“-”作用"><a href="#“-”作用" class="headerlink" title="“_”作用"></a>“_”作用</h2><p><em>import 下划线（如：import _ github&#x2F;demo）的作用：当导入一个包时，该包下的文件里所有init()函数都会被执行，然而，有些时候我们并不需要把整个包都导入进来，仅仅是是希望它执行init()函数而已。这个时候就可以使用 import _ 引用该包。</em></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 条件判断</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="if"><a href="#if" class="headerlink" title="if"></a>if</h2><h3 id="默认"><a href="#默认" class="headerlink" title="默认"></a>默认</h3><blockquote><p>变量在函数里有效</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">const</span> filename = <span class="string">&quot;abc.txt&quot;</span></span><br><span class="line">contents, err := os.ReadFile(filename)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="type">string</span>(contents))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="if-变量写在判断条件里"><a href="#if-变量写在判断条件里" class="headerlink" title="if 变量写在判断条件里"></a>if 变量写在判断条件里</h3><blockquote><p>变量只在if条件判断里有效</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">const</span> filename = <span class="string">&quot;abc.txt&quot;</span></span><br><span class="line"><span class="keyword">if</span> contents, err := os.ReadFile(filename); err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="type">string</span>(contents))</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 报错以下</span></span><br><span class="line">    <span class="comment">// fmt.Println(string(contents))</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h2><h3 id="默认-1"><a href="#默认-1" class="headerlink" title="默认"></a>默认</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">eval</span><span class="params">(a, b <span class="type">int</span>, op <span class="type">string</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">var</span> result <span class="type">int</span></span><br><span class="line"><span class="comment">// 无需break</span></span><br><span class="line"><span class="keyword">switch</span> op &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;+&quot;</span>:</span><br><span class="line">result = a + b</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;-&quot;</span>:</span><br><span class="line">result = a - b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> r = eval(<span class="number">1</span>, <span class="number">3</span>, <span class="string">&quot;-&quot;</span>)</span><br><span class="line">fmt.Println(r)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="fallthrough"><a href="#fallthrough" class="headerlink" title="fallthrough"></a>fallthrough</h3><blockquote><p>go switch默认break，不向下传递。如果需要穿透，就使用 fallthrough</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">eval</span><span class="params">(a, b <span class="type">int</span>, op <span class="type">string</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">var</span> result <span class="type">int</span></span><br><span class="line"><span class="comment">// 无需break</span></span><br><span class="line"><span class="keyword">switch</span> op &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;+&quot;</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;+&quot;</span>)</span><br><span class="line">result = a + b</span><br><span class="line"><span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;-&quot;</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;-&quot;</span>)</span><br><span class="line">result = a - b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> r = eval(<span class="number">1</span>, <span class="number">3</span>, <span class="string">&quot;+&quot;</span>)</span><br><span class="line">fmt.Println(r)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 循环</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E5%BE%AA%E7%8E%AF/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="默认"><a href="#默认" class="headerlink" title="默认"></a>默认</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="循环数组-切片"><a href="#循环数组-切片" class="headerlink" title="循环数组&#x2F;切片"></a>循环数组&#x2F;切片</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> slice1 = []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(slice1); i++ &#123;</span><br><span class="line">fmt.Println(slice1[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="死循环"><a href="#死循环" class="headerlink" title="死循环"></a>死循环</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;死循环&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 指针</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%8C%87%E9%92%88/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> ip *<span class="type">int</span></span><br><span class="line">fmt.Println(ip) <span class="comment">// &lt;nil&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i = <span class="number">100</span></span><br><span class="line"><span class="comment">// &amp; 表示取内存地址</span></span><br><span class="line">ip = &amp;i</span><br><span class="line">fmt.Println(ip) <span class="comment">// 0xc00001a0e0</span></span><br><span class="line"><span class="comment">// * 表示取值</span></span><br><span class="line">fmt.Println(*ip) <span class="comment">// 100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sp *<span class="type">string</span></span><br><span class="line"><span class="keyword">var</span> s = <span class="string">&quot;hello world&quot;</span></span><br><span class="line">sp = &amp;s</span><br><span class="line">fmt.Println(sp)  <span class="comment">// 0xc00004c050</span></span><br><span class="line">fmt.Println(*sp) <span class="comment">// hello world</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="指针数组"><a href="#指针数组" class="headerlink" title="指针数组"></a>指针数组</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := [<span class="number">3</span>]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">var</span> pa [<span class="number">3</span>]*<span class="type">int</span></span><br><span class="line"></span><br><span class="line">fmt.Println(pa)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(pa); i++ &#123;</span><br><span class="line"><span class="comment">// 指针变量只能接收指针地址</span></span><br><span class="line">pa[i] = &amp;a[i]</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(pa)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(pa); i++ &#123;</span><br><span class="line"><span class="comment">// 打印指针指向的值</span></span><br><span class="line">fmt.Println(*pa[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go defer</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/defer/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/defer/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;start&quot;</span>)</span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">&quot;step1&quot;</span>)</span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">&quot;step2&quot;</span>)</span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">&quot;step3&quot;</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;end&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">start</span></span><br><span class="line"><span class="comment">end</span></span><br><span class="line"><span class="comment">step3</span></span><br><span class="line"><span class="comment">step2</span></span><br><span class="line"><span class="comment">step1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go map</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/map/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/map/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mapFunc</span><span class="params">()</span></span> &#123;</span><br><span class="line">m1 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>)</span><br><span class="line">m1[<span class="string">&quot;name&quot;</span>] = <span class="string">&quot;tom&quot;</span></span><br><span class="line"><span class="comment">// 判断某个值在map里是否存在</span></span><br><span class="line">v1, ok := m1[<span class="string">&quot;name&quot;</span>]</span><br><span class="line">fmt.Println(v1, ok)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不存在某个值，value会是个空字符串，ok为false</span></span><br><span class="line">v2, ok := m1[<span class="string">&quot;age&quot;</span>]</span><br><span class="line">fmt.Println(v2, ok)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mapFor</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// map 遍历是无序的</span></span><br><span class="line">m1 := <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;tom&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="string">&quot;12&quot;</span>, <span class="string">&quot;email&quot;</span>: <span class="string">&quot;tom@example&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> m1 &#123;</span><br><span class="line">fmt.Println(k, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">mapFunc()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go slice</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/go/slice/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/go/slice/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="slice-扩展"><a href="#slice-扩展" class="headerlink" title="slice 扩展"></a>slice 扩展</h2><blockquote><p>slice只能向后扩展！！！</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">arr := [...]<span class="type">int</span>&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;</span><br><span class="line">s1 := arr[<span class="number">2</span>:<span class="number">6</span>] <span class="comment">// len -&gt; [2 3 4 5] cap-&gt;[2, 3, 4, 5, 6, 7, 8]</span></span><br><span class="line">s2 := s1[<span class="number">3</span>:<span class="number">6</span>]  <span class="comment">// len -&gt; [5 6 7] cap-&gt;[5, 6, 7, 8]</span></span><br><span class="line">s3 := s2[<span class="number">0</span>:<span class="number">4</span>]  <span class="comment">// len -&gt; [5 6 7 8] cap-&gt;[5, 6, 7, 8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// s1 取arr的[2:6] 为 [2 3 4 5] 正常的</span></span><br><span class="line">fmt.Println(<span class="string">&quot;s1=&quot;</span>, s1, <span class="string">&quot;len(s1)=&quot;</span>, <span class="built_in">len</span>(s1), <span class="string">&quot;cap(s1)=&quot;</span>, <span class="built_in">cap</span>(s1)) <span class="comment">// s1= [2 3 4 5] len(s1)= 4 cap(s1)= 7</span></span><br><span class="line"><span class="comment">// s2 能取到s1的[5 6 7] 是因为s1的容量为7 相当于s1为[2, 3, 4, 5, 6, 7, 8]，正常情况s1只能取 [2 3 4 5] ,</span></span><br><span class="line"><span class="comment">// 但是因为slice扩展的特性，所以可以取超过 [2 3 4 5] 之后的值，但是不能超过最大容量，也就是[2, 3, 4, 5, 6, 7, 8]之外</span></span><br><span class="line"><span class="comment">// 下面s2 s3 同理。</span></span><br><span class="line">fmt.Println(<span class="string">&quot;s2=&quot;</span>, s2, <span class="string">&quot;len(s2)=&quot;</span>, <span class="built_in">len</span>(s2), <span class="string">&quot;cap(s2)=&quot;</span>, <span class="built_in">cap</span>(s2)) <span class="comment">// s2= [5 6 7] len(s2)= 3 cap(s2)= 4</span></span><br><span class="line">fmt.Println(<span class="string">&quot;s3=&quot;</span>, s3, <span class="string">&quot;len(s3)=&quot;</span>, <span class="built_in">len</span>(s3), <span class="string">&quot;cap(s3)=&quot;</span>, <span class="built_in">cap</span>(s3)) <span class="comment">// s3= [5 6 7 8] len(s3)= 4 cap(s3)= 4</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="slice只能向后扩展"><a href="#slice只能向后扩展" class="headerlink" title="slice只能向后扩展"></a>slice只能向后扩展</h3><blockquote><p>slice 下标一旦从前往后取，就无法再向前，容量会越来越少，可越界的也会变少！！！！！！！！</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">arr := [...]<span class="type">int</span>&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;</span><br><span class="line">s1 := arr[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">s2 := s1[<span class="number">0</span>:<span class="number">1</span>]</span><br><span class="line">s3 := s2[<span class="number">0</span>:<span class="number">1</span>]</span><br><span class="line">s4 := s3[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">fmt.Println(<span class="string">&quot;s1=&quot;</span>, s1, <span class="string">&quot;len(s1)=&quot;</span>, <span class="built_in">len</span>(s1), <span class="string">&quot;cap(s1)=&quot;</span>, <span class="built_in">cap</span>(s1)) <span class="comment">// s1= [2 3] len(s1)= 2 cap(s1)= 7</span></span><br><span class="line">fmt.Println(<span class="string">&quot;s2=&quot;</span>, s2, <span class="string">&quot;len(s2)=&quot;</span>, <span class="built_in">len</span>(s2), <span class="string">&quot;cap(s2)=&quot;</span>, <span class="built_in">cap</span>(s2)) <span class="comment">// s2= [0] len(s2)= 1 cap(s2)= 9</span></span><br><span class="line">fmt.Println(<span class="string">&quot;s3=&quot;</span>, s3, <span class="string">&quot;len(s3)=&quot;</span>, <span class="built_in">len</span>(s3), <span class="string">&quot;cap(s3)=&quot;</span>, <span class="built_in">cap</span>(s3)) <span class="comment">// s3= [2] len(s3)= 1 cap(s3)= 7</span></span><br><span class="line">fmt.Println(<span class="string">&quot;s4=&quot;</span>, s4, <span class="string">&quot;len(s4)=&quot;</span>, <span class="built_in">len</span>(s4), <span class="string">&quot;cap(s4)=&quot;</span>, <span class="built_in">cap</span>(s4)) <span class="comment">// s4= [4 5] len(s4)= 2 cap(s4)= 5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="切片的增删改查"><a href="#切片的增删改查" class="headerlink" title="切片的增删改查"></a>切片的增删改查</h2><h3 id="demo1"><a href="#demo1" class="headerlink" title="demo1"></a>demo1</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// copy</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">copyFunc</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 不copy ，直接赋值 s1 = s2 ，这样改了一个，另一个切片也会改变</span></span><br><span class="line"><span class="keyword">var</span> s1 = []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"><span class="keyword">var</span> s2 = <span class="built_in">make</span>([]<span class="type">int</span>, <span class="built_in">len</span>(s1))</span><br><span class="line"><span class="built_in">copy</span>(s2, s1)</span><br><span class="line">s2[<span class="number">0</span>] = <span class="number">100</span></span><br><span class="line">fmt.Println(s1)</span><br><span class="line">fmt.Println(s2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// query</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">query</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s1 = []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"><span class="keyword">var</span> key = <span class="number">2</span></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> s1 &#123;</span><br><span class="line"><span class="keyword">if</span> v == key &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;key的下标为&quot;</span>, i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// update</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">update</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s1 = []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">s1[<span class="number">1</span>] = <span class="number">100</span></span><br><span class="line">fmt.Println(s1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// del</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">del</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s1 = []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"><span class="comment">// 相当于覆盖，从哪个位置覆盖哪些内容</span></span><br><span class="line">s1 = <span class="built_in">append</span>(s1[:<span class="number">2</span>], s1[<span class="number">3</span>:]...)</span><br><span class="line">fmt.Println(s1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// add</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> s1 []<span class="type">int</span></span><br><span class="line">s1 = <span class="built_in">append</span>(s1, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">fmt.Println(s1)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">copyFunc()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="demo2"><a href="#demo2" class="headerlink" title="demo2"></a>demo2</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">s1 := []<span class="type">int</span>&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//s9 := []int&#123;9&#125;</span></span><br><span class="line"><span class="comment">// 增加</span></span><br><span class="line"><span class="comment">//s2 := append(s1, s9...)</span></span><br><span class="line"><span class="comment">//fmt.Println(s2)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 截取</span></span><br><span class="line"><span class="comment">// 取第一个</span></span><br><span class="line">first := s1[<span class="number">0</span>]</span><br><span class="line">fmt.Println(first)</span><br><span class="line"><span class="comment">// 取最后一个</span></span><br><span class="line">last := s1[<span class="built_in">len</span>(s1)<span class="number">-1</span>]</span><br><span class="line">fmt.Println(last)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line"><span class="comment">// 删除第一个</span></span><br><span class="line">delfirst := s1[<span class="number">1</span>:]</span><br><span class="line">fmt.Println(delfirst)</span><br><span class="line"><span class="comment">// 删除最后一个</span></span><br><span class="line">dellast := s1[:<span class="built_in">len</span>(s1)<span class="number">-1</span>]</span><br><span class="line">fmt.Println(dellast)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更改</span></span><br><span class="line">s1[<span class="number">2</span>] = <span class="number">9</span></span><br><span class="line">fmt.Println(s1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs 定时任务</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>任务调度 Task Scheduling(定时任务)</p><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save @nestjs/schedule</span><br><span class="line">npm install --save-dev @types/cron</span><br></pre></td></tr></table></figure><h2 id="app-module-ts，引入"><a href="#app-module-ts，引入" class="headerlink" title="app.module.ts，引入"></a>app.module.ts，引入</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ScheduleModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/schedule&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">imports</span>: [<span class="title class_">ScheduleModule</span>.<span class="title function_">forRoot</span>()],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="tasks-文件夹"><a href="#tasks-文件夹" class="headerlink" title="tasks 文件夹"></a>tasks 文件夹</h2><h3 id="tasks-module-ts"><a href="#tasks-module-ts" class="headerlink" title="tasks.module.ts"></a>tasks.module.ts</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">TasksService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./tasks.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">TasksService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">TasksModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="tasks-service-ts"><a href="#tasks-service-ts" class="headerlink" title="tasks.service.ts"></a>tasks.service.ts</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span>, <span class="title class_">Logger</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Cron</span>, <span class="title class_">Interval</span>, <span class="title class_">Timeout</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/schedule&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">TasksService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> logger = <span class="keyword">new</span> <span class="title class_">Logger</span>(<span class="title class_">TasksService</span>.<span class="property">name</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Cron</span>(<span class="string">&quot;45 * * * * *&quot;</span>)</span><br><span class="line">    <span class="title function_">handleCron</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">logger</span>.<span class="title function_">debug</span>(<span class="string">&quot;Called when the current second is 45&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Interval</span>(<span class="number">10000</span>)</span><br><span class="line">    <span class="title function_">handleInterval</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">logger</span>.<span class="title function_">debug</span>(<span class="string">&quot;Called every 10 seconds&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Timeout</span>(<span class="number">5000</span>)</span><br><span class="line">    <span class="title function_">handleTimeout</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">logger</span>.<span class="title function_">debug</span>(<span class="string">&quot;Called once after 5 seconds&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="星号"><a href="#星号" class="headerlink" title="星号******"></a>星号<code>******</code></h2><ul><li><code>* * * * * *</code> 每一秒</li><li><code>每分钟，第 45 秒</code> 每分钟，第 45 秒</li><li><code>0 10 * * * *</code> 每小时，在第 10 分钟开始时</li><li><code>0 */30 9-17 * * *</code> 上午 9 点至下午 5 点之间每 30 分钟一班</li><li><code>0 30 11 * * 1-5</code> 周一至周五上午 11:30</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">* * * * * *</span><br><span class="line">| | | | | |</span><br><span class="line">| | | | | day of week</span><br><span class="line">| | | | months</span><br><span class="line">| | | day of month</span><br><span class="line">| | hours</span><br><span class="line">| minutes</span><br><span class="line">seconds (optional)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs 服务监控页面</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E6%9C%8D%E5%8A%A1%E7%9B%91%E6%8E%A7%E9%A1%B5%E9%9D%A2/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E6%9C%8D%E5%8A%A1%E7%9B%91%E6%8E%A7%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 状态监控包</span><br><span class="line">npm i nest-status-monitor</span><br><span class="line">//  socket 包 不能用最新版，否则页面数据不显示</span><br><span class="line">npm i @nestjs/platform-socket.io 7.0.0</span><br></pre></td></tr></table></figure><h2 id="监控配置文件"><a href="#监控配置文件" class="headerlink" title="监控配置文件"></a>监控配置文件</h2><p>&#x2F;config&#x2F;statusMonitor.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">pageTitle</span>: <span class="string">&quot;Nest.js Monitoring &quot;</span>,</span><br><span class="line">    <span class="comment">// 配置端口</span></span><br><span class="line">    <span class="attr">port</span>: <span class="number">3000</span>,</span><br><span class="line">    <span class="comment">// 这里记得加全局路由 &#x27;/api&#x27;</span></span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/status&quot;</span>,</span><br><span class="line">    <span class="attr">ignoreStartsWith</span>: <span class="string">&quot;/health/alive&quot;</span>,</span><br><span class="line">    <span class="attr">spans</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">interval</span>: <span class="number">1</span>, <span class="comment">// Every second</span></span><br><span class="line">            <span class="attr">retention</span>: <span class="number">60</span>, <span class="comment">// Keep 60 datapoints in memory</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">interval</span>: <span class="number">5</span>, <span class="comment">// Every 5 seconds</span></span><br><span class="line">            <span class="attr">retention</span>: <span class="number">60</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">interval</span>: <span class="number">15</span>, <span class="comment">// Every 15 seconds</span></span><br><span class="line">            <span class="attr">retention</span>: <span class="number">60</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">chartVisibility</span>: &#123;</span><br><span class="line">        <span class="attr">cpu</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">mem</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">load</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">responseTime</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">rps</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">statusCodes</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">healthChecks</span>: [],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="app-modules-ts"><a href="#app-modules-ts" class="headerlink" title="app.modules.ts"></a>app.modules.ts</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">StatusMonitorModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;nest-status-monitor&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> statusMonitorConfig <span class="keyword">from</span> <span class="string">&quot;./config/statusMonitor&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">imports</span>: [<span class="title class_">StatusMonitorModule</span>.<span class="title function_">setUp</span>(statusMonitorConfig)],</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">AppController</span>],</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">AppService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs 管道</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E7%AE%A1%E9%81%93/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E7%AE%A1%E9%81%93/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>管道有两个典型的用例：</p><ul><li>转换：将输入数据转换为所需的形式（例如，从字符串到整数）</li><li>验证：评估输入数据，如果有效，则简单地通过不变；否则，当数据不正确时抛出异常</li></ul><h2 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h2><p>在 controller 里使用</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Get</span>(<span class="string">&#x27;:id&#x27;</span>)</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">findOne</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&#x27;id&#x27;</span>, ParseIntPipe) id: <span class="built_in">number</span></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">catsService</span>.<span class="title function_">findOne</span>(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请求(传非数字)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET localhost:3000/abc</span><br></pre></td></tr></table></figure><p>报错(将阻止 findOne()方法的主体执行)</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;statusCode&quot;</span><span class="punctuation">:</span> <span class="number">400</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Validation failed (numeric string is expected)&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Bad Request&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs 全局配置</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="配置公共前缀-setGlobalPrefix"><a href="#配置公共前缀-setGlobalPrefix" class="headerlink" title="配置公共前缀 setGlobalPrefix"></a>配置公共前缀 setGlobalPrefix</h2><p>访问 <code>localhost:3000/api/user</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">NestFactory</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/core&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.module&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">bootstrap</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> app = <span class="keyword">await</span> <span class="title class_">NestFactory</span>.<span class="title function_">create</span>(<span class="title class_">AppModule</span>);</span><br><span class="line">    app.<span class="title function_">setGlobalPrefix</span>(<span class="string">&quot;api&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 全局中间件</span></span><br><span class="line">    <span class="comment">// app.use(logger)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 全局异常过滤器</span></span><br><span class="line">    <span class="comment">// app.useGlobalFilters()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 全局管道</span></span><br><span class="line">    <span class="comment">// app.useGlobalPipes()</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> app.<span class="title function_">listen</span>(<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">bootstrap</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs使用mongoose</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/mongoose/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/mongoose/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="安装-mongoose"><a href="#安装-mongoose" class="headerlink" title="安装 mongoose"></a>安装 mongoose</h2><p><code>npm i @nestjs/mongoose mongoose</code></p><h2 id="nestjs-使用-mongoose-模块"><a href="#nestjs-使用-mongoose-模块" class="headerlink" title="nestjs 使用 mongoose 模块"></a>nestjs 使用 mongoose 模块</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.module.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MongooseModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/mongoose&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">VideoModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./video/video.module&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UserModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./user/user.module&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// nest 中的模块装饰器</span></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="comment">// 引入子模块</span></span><br><span class="line">    <span class="attr">imports</span>: [</span><br><span class="line">        <span class="title class_">VideoModule</span>,</span><br><span class="line">        <span class="title class_">UserModule</span>,</span><br><span class="line">        <span class="title class_">MongooseModule</span>.<span class="title function_">forRoot</span>(<span class="string">&quot;mongodb://localhost:27017/nestApp&quot;</span>),</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">AppController</span>],</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">AppService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="创建-schema"><a href="#创建-schema" class="headerlink" title="创建 schema"></a>创建 schema</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /src/user/schemas/user.schemas.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Prop</span>, <span class="title class_">Schema</span>, <span class="title class_">SchemaFactory</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/mongoose&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Document</span> &#125; <span class="keyword">from</span> <span class="string">&quot;mongoose&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将User 和 Document类型合并</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> <span class="title class_">UserDocument</span> = <span class="title class_">User</span> &amp; <span class="title class_">Document</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Schema 装饰器</span></span><br><span class="line"><span class="comment">// 装饰器将@Schema()一个类标记为模式定义。它将我们的类映射Cat到同名的 MongoDB 集合</span></span><br><span class="line"><span class="meta">@Schema</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Document</span> &#123;</span><br><span class="line">    <span class="comment">// 配置schema属性</span></span><br><span class="line">    <span class="meta">@Prop</span>(&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">type</span>: <span class="title class_">String</span> &#125;)</span><br><span class="line">    <span class="comment">// 这里的类型是ts的类型</span></span><br><span class="line">    <span class="attr">username</span>: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Prop</span>(&#123; <span class="attr">required</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">    <span class="attr">email</span>: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// select 是否允许查询是查到的数据</span></span><br><span class="line">    <span class="meta">@Prop</span>(&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">select</span>: <span class="literal">false</span> &#125;)</span><br><span class="line">    <span class="attr">password</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建schema</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">UserSchema</span> = <span class="title class_">SchemaFactory</span>.<span class="title function_">createForClass</span>(<span class="title class_">User</span>);</span><br></pre></td></tr></table></figure><h2 id="引入到对应的功能的-module"><a href="#引入到对应的功能的-module" class="headerlink" title="引入到对应的功能的 module"></a>引入到对应的功能的 module</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// user.module.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UserService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./user.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UserController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./user.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MongooseModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/mongoose&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">User</span>, <span class="title class_">UserSchema</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./schemas/user.schemas&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">imports</span>: [</span><br><span class="line">        <span class="title class_">MongooseModule</span>.<span class="title function_">forFeature</span>([&#123; <span class="attr">name</span>: <span class="title class_">User</span>.<span class="property">name</span>, <span class="attr">schema</span>: <span class="title class_">UserSchema</span> &#125;]),</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">UserController</span>],</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">UserService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="实现增删改查功能"><a href="#实现增删改查功能" class="headerlink" title="实现增删改查功能"></a>实现增删改查功能</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// user.controller.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    <span class="title class_">Controller</span>,</span><br><span class="line">    <span class="title class_">Get</span>,</span><br><span class="line">    <span class="title class_">Post</span>,</span><br><span class="line">    <span class="title class_">Body</span>,</span><br><span class="line">    <span class="title class_">Patch</span>,</span><br><span class="line">    <span class="title class_">Param</span>,</span><br><span class="line">    <span class="title class_">Delete</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UserService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./user.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/create-user.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UpdateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/update-user.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiTags</span>, <span class="title class_">ApiOperation</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// swagger 标签分类</span></span><br><span class="line"><span class="meta">@ApiTags</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="comment">// 将装饰的class 装饰成controller</span></span><br><span class="line"><span class="comment">// 路径 http://localhost3000/user</span></span><br><span class="line"><span class="comment">// 括号里是路由</span></span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="comment">// 使用依赖注入的方式引入 service</span></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> userService: UserService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(&#123;</span><br><span class="line">        <span class="attr">summary</span>: <span class="string">&quot;添加用户&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方法装饰器，将controller里的方法装饰成路由，并且以请求方法调用</span></span><br><span class="line">    <span class="comment">// @Post post调用 http://localhost3000/user</span></span><br><span class="line">    <span class="comment">// 以下方法装饰器同理</span></span><br><span class="line">    <span class="meta">@Post</span>()</span><br><span class="line">    <span class="comment">// @Body() 使用装饰器装饰 http 请求体参数</span></span><br><span class="line">    <span class="comment">// CreateUserDto ts 参数类型约束</span></span><br><span class="line">    <span class="title function_">create</span>(<span class="params"><span class="meta">@Body</span>() createUserDto: CreateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">create</span>(createUserDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @Get get调用 http://localhost3000/user</span></span><br><span class="line">    <span class="meta">@Get</span>()</span><br><span class="line">    <span class="title function_">findAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">findAll</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @Get get调用 http://localhost3000/user/123</span></span><br><span class="line">    <span class="meta">@Get</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">findOne</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">findOne</span>(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Patch</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">update</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span>, <span class="meta">@Body</span>() updateUserDto: UpdateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">update</span>(id, updateUserDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">remove</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">remove</span>(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自定义路径</span></span><br><span class="line">    <span class="comment">// 和上面 @Get(&#x27;:id&#x27;) 装饰的方法会冲突</span></span><br><span class="line">    <span class="comment">// @Get(&#x27;/customPath&#x27;)</span></span><br><span class="line">    <span class="comment">// customPath() &#123;</span></span><br><span class="line">    <span class="comment">//   return this.userService.customPath();</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// user.service.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">InjectModel</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/mongoose&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">User</span>, <span class="title class_">UserDocument</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./schemas/user.schemas&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/create-user.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UpdateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/update-user.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Model</span> &#125; <span class="keyword">from</span> <span class="string">&quot;mongoose&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">        <span class="meta">@InjectModel</span>(User.name) <span class="keyword">private</span> userModel: Model&lt;UserDocument&gt;</span></span><br><span class="line"><span class="params">    </span>) &#123;&#125;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">create</span>(<span class="params">createUserDto: CreateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> createdUser = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">userModel</span>.<span class="title function_">create</span>(createUserDto);</span><br><span class="line">        <span class="keyword">return</span> createdUser;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">findAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">userModel</span>.<span class="title function_">find</span>().<span class="title function_">exec</span>();</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">findOne</span>(<span class="params">id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">userModel</span>.<span class="title function_">findById</span>(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">update</span>(<span class="params">id: <span class="built_in">string</span>, updateUserDto: UpdateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">userModel</span>.<span class="title function_">findByIdAndUpdate</span>(id, updateUserDto, &#123;</span><br><span class="line">            <span class="attr">new</span>: <span class="literal">true</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">remove</span>(<span class="params">id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">userModel</span>.<span class="title function_">findByIdAndRemove</span>(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs guards守卫</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/guards/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/guards/</url>
      
        <content type="html"><![CDATA[<p>说明（废话）：警卫有一个单一的责任。它们根据运行时存在的某些条件（如权限、角色、ACL 等）确定给定请求是否将由路由处理程序处理。这通常称为授权。授权（及其通常与之协作的表亲身份验证）通常由传统 Express 应用程序中的中间件处理。中间件是身份验证的最佳选择，因为诸如令牌验证和将属性附加到 request 对象之类的事情与特定的路由上下文（及其元数据）没有紧密的联系。</p><h2 id="身份验证"><a href="#身份验证" class="headerlink" title="身份验证"></a>身份验证</h2><h3 id="guard-用于检验"><a href="#guard-用于检验" class="headerlink" title="guard 用于检验"></a>guard 用于检验</h3><p>创建 <code>roles.guard.ts</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span>, <span class="title class_">CanActivate</span>, <span class="title class_">ExecutionContext</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Reflector</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/core&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">RolesGuard</span> <span class="keyword">implements</span> <span class="title class_">CanActivate</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> reflector: Reflector</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">canActivate</span>(<span class="attr">context</span>: <span class="title class_">ExecutionContext</span>): <span class="built_in">boolean</span> &#123;</span><br><span class="line">        <span class="comment">// 从元数据获取身份数组</span></span><br><span class="line">        <span class="keyword">const</span> roles = <span class="variable language_">this</span>.<span class="property">reflector</span>.<span class="property">get</span>&lt;<span class="built_in">string</span>[]&gt;(</span><br><span class="line">            <span class="string">&quot;roles&quot;</span>,</span><br><span class="line">            context.<span class="title function_">getHandler</span>()</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果没有设置访问权限，直接允许下一步</span></span><br><span class="line">        <span class="keyword">if</span> (!roles) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> request = context.<span class="title function_">switchToHttp</span>().<span class="title function_">getRequest</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从query取出前端传输的身份</span></span><br><span class="line">        <span class="keyword">const</span> &#123; user &#125; = request.<span class="property">query</span>;</span><br><span class="line">        <span class="comment">// 判断前端传输的身份，在允许访问的数组中是否有保护传入的身份</span></span><br><span class="line">        <span class="comment">// console.log(!!roles.find((role) =&gt; role === user));</span></span><br><span class="line">        <span class="comment">// console.log(roles.includes(user));</span></span><br><span class="line">        <span class="keyword">return</span> roles.<span class="title function_">includes</span>(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建-decorator，用于设置元数据"><a href="#创建-decorator，用于设置元数据" class="headerlink" title="创建 decorator，用于设置元数据"></a>创建 decorator，用于设置元数据</h3><p>创建 <code>roles.decorator.ts</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">SetMetadata</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用装饰器设置哪些身份允许使用接口</span></span><br><span class="line"><span class="comment">// 把允许的身份数组设置到元数据中</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Roles</span> = (<span class="params">...args: <span class="built_in">string</span>[]</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">SetMetadata</span>(<span class="string">&quot;roles&quot;</span>, args);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="在-controller-使用"><a href="#在-controller-使用" class="headerlink" title="在 controller 使用"></a>在 controller 使用</h3><p>创建 <code>role-guard.controller.ts</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Controller</span>, <span class="title class_">Query</span>, <span class="title class_">Get</span>, <span class="title class_">UseGuards</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RoleGuardService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./role-guard.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RolesGuard</span> &#125; <span class="keyword">from</span> <span class="string">&quot;../../common/guards/roles.guard&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiTags</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Roles</span> &#125; <span class="keyword">from</span> <span class="string">&quot;../../common/decorators/roles.decorator&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiTags</span>(<span class="string">&quot;role-guard&quot;</span>)</span><br><span class="line"><span class="comment">// 守卫：检验身份的装饰器</span></span><br><span class="line"><span class="meta">@UseGuards</span>(<span class="title class_">RolesGuard</span>)</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;role-guard&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">RoleGuardController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> roleGuardService: RoleGuardService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Get</span>()</span><br><span class="line">    <span class="comment">// 设置权限，哪些身份允许访问接口</span></span><br><span class="line">    <span class="meta">@Roles</span>(<span class="string">&quot;admin&quot;</span>)</span><br><span class="line">    <span class="title function_">get</span>(<span class="params"><span class="meta">@Query</span>() &#123; id &#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">roleGuardService</span>.<span class="title function_">findOne</span>(+id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>依赖注入</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="注入自定义值"><a href="#注入自定义值" class="headerlink" title="注入自定义值"></a>注入自定义值</h2><ul><li>注册一个静态值 appName</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">  <span class="attr">imports</span>: [],</span><br><span class="line">  <span class="attr">controllers</span>: [<span class="title class_">AppController</span>],</span><br><span class="line">  <span class="attr">providers</span>: [</span><br><span class="line">    <span class="title class_">AppService</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">provide</span>: <span class="string">&quot;appName&quot;</span>,</span><br><span class="line">      <span class="attr">useValue</span>: <span class="string">&quot;appName&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><ul><li>注入及使用<ul><li>@Inject() 里的 key 要和 providers 里的 provide key 一致</li></ul></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Controller</span>, <span class="title class_">Get</span>, <span class="title class_">Inject</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppController</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">    <span class="keyword">private</span> <span class="keyword">readonly</span> appService: AppService,</span></span><br><span class="line"><span class="params">    <span class="meta">@Inject</span>(<span class="string">&quot;appName&quot;</span>) <span class="keyword">private</span> appName: <span class="built_in">string</span></span></span><br><span class="line"><span class="params">  </span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>()</span><br><span class="line">  <span class="title function_">getHello</span>(): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">appName</span>); <span class="comment">//输出 appName</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">appService</span>.<span class="title function_">getHello</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>注册某配置项</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.module.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> configService = &#123;</span><br><span class="line">  <span class="attr">provide</span>: <span class="string">&quot;config&quot;</span>,</span><br><span class="line">  <span class="attr">useValue</span>: &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;mongodb&quot;</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;database&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">  <span class="attr">imports</span>: [],</span><br><span class="line">  <span class="attr">controllers</span>: [<span class="title class_">AppController</span>],</span><br><span class="line">  <span class="attr">providers</span>: [<span class="title class_">AppService</span>, configService],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.controller.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Controller</span>, <span class="title class_">Get</span>, <span class="title class_">Inject</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppController</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">    <span class="keyword">private</span> <span class="keyword">readonly</span> appService: AppService,</span></span><br><span class="line"><span class="params">    <span class="meta">@Inject</span>(<span class="string">&quot;config&quot;</span>) <span class="keyword">private</span> config: <span class="built_in">object</span></span></span><br><span class="line"><span class="params">  </span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>()</span><br><span class="line">  <span class="title function_">getHello</span>(): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">config</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">appService</span>.<span class="title function_">getHello</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="根据-env-文件使用对应的-service"><a href="#根据-env-文件使用对应的-service" class="headerlink" title="根据 env 文件使用对应的 service"></a>根据 env 文件使用对应的 service</h2><blockquote><p>需要用到 dotenv 库</p></blockquote><ul><li>app.module.ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; config &#125; <span class="keyword">from</span> <span class="string">&quot;dotenv&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; join &#125; <span class="keyword">from</span> <span class="string">&quot;path&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">DevService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dev.service&quot;</span>;</span><br><span class="line"><span class="title function_">config</span>(&#123; <span class="attr">path</span>: <span class="title function_">join</span>(__dirname, <span class="string">&quot;../.env.dev&quot;</span>) &#125;);</span><br><span class="line"><span class="keyword">const</span> configService = &#123;</span><br><span class="line">  <span class="attr">provide</span>: <span class="string">&quot;configService&quot;</span>,</span><br><span class="line">  <span class="attr">useClass</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;dev&quot;</span> ? <span class="title class_">DevService</span> : <span class="title class_">AppService</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">  <span class="attr">imports</span>: [],</span><br><span class="line">  <span class="attr">controllers</span>: [<span class="title class_">AppController</span>],</span><br><span class="line">  <span class="attr">providers</span>: [configService],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><ul><li>app.controller.ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Controller</span>, <span class="title class_">Get</span>, <span class="title class_">Inject</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppController</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">    <span class="comment">// private readonly appService: AppService,</span></span></span><br><span class="line"><span class="params">    <span class="meta">@Inject</span>(<span class="string">&quot;configService&quot;</span>) <span class="keyword">private</span> config: <span class="built_in">any</span></span></span><br><span class="line"><span class="params">  </span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Get</span>()</span><br><span class="line">  <span class="title function_">getHello</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">config</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">config</span>.<span class="title function_">getHello</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>app.service.ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppService</span> &#123;</span><br><span class="line">  <span class="title function_">getHello</span>(): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;AppService!&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>dev.service.ts</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">DevService</span> &#123;</span><br><span class="line">  <span class="title function_">getHello</span>(): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;DevService!&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs Exception异常和Filters过滤器</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/Exception%E5%BC%82%E5%B8%B8%E5%92%8CFilters%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/Exception%E5%BC%82%E5%B8%B8%E5%92%8CFilters%E8%BF%87%E6%BB%A4%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ul><li>异常：抛出简单的内容</li><li>过滤器：抛出详细内容</li><li>优先级：<code>controller</code> 的<code>@UseFilters()</code> &gt; 方法的<code>@UseFilters()</code> &gt; 方法内部的 <code>throw</code></li></ul><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><h3 id="默认全局异常"><a href="#默认全局异常" class="headerlink" title="默认全局异常"></a>默认全局异常</h3><p>开箱即用，此操作由内置的全局异常过滤器执行，该过滤器处理类型 HttpException（及其子类）的异常。当异常无法识别（既不是 HttpException 也不是继承自的类 HttpException）时，内置异常过滤器会生成以下默认 JSON 响应：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;statusCode&quot;</span><span class="punctuation">:</span> <span class="number">500</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Internal server error&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="手动抛出异常"><a href="#手动抛出异常" class="headerlink" title="手动抛出异常"></a>手动抛出异常</h3><h4 id="标准-默认"><a href="#标准-默认" class="headerlink" title="标准(默认)"></a>标准(默认)</h4><ul><li>标准异常包含 <code>statusCode</code>和<code>message</code></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// cats.controller.ts</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Get</span>()</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">findAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">HttpException</span>(<span class="string">&#x27;Forbidden&#x27;</span>, <span class="title class_">HttpStatus</span>.<span class="property">FORBIDDEN</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;statusCode&quot;</span><span class="punctuation">:</span> <span class="number">403</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Forbidden&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="自定义参数"><a href="#自定义参数" class="headerlink" title="自定义参数"></a>自定义参数</h4><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Get</span>()</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">findAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">HttpException</span>(&#123;</span><br><span class="line">    <span class="attr">status</span>: <span class="title class_">HttpStatus</span>.<span class="property">FORBIDDEN</span>,</span><br><span class="line">    <span class="attr">error</span>: <span class="string">&#x27;This is a custom message&#x27;</span>,</span><br><span class="line">  &#125;, <span class="title class_">HttpStatus</span>.<span class="property">FORBIDDEN</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">403</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This is a custom message&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="自定义异常-文件"><a href="#自定义异常-文件" class="headerlink" title="自定义异常(文件)"></a>自定义异常(文件)</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// forbidden.exception.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">ForbiddenException</span> <span class="keyword">extends</span> <span class="title class_ inherited__">HttpException</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(<span class="string">&quot;Forbidden&quot;</span>, <span class="title class_">HttpStatus</span>.<span class="property">FORBIDDEN</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// cats.controller.ts</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Get</span>()</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">findAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ForbiddenException</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><h2 id="普通过滤器"><a href="#普通过滤器" class="headerlink" title="普通过滤器"></a>普通过滤器</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// http-exception.filter.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    <span class="title class_">ExceptionFilter</span>,</span><br><span class="line">    <span class="title class_">Catch</span>,</span><br><span class="line">    <span class="title class_">ArgumentsHost</span>,</span><br><span class="line">    <span class="title class_">HttpException</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Request</span>, <span class="title class_">Response</span> &#125; <span class="keyword">from</span> <span class="string">&quot;express&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Catch</span>(<span class="title class_">HttpException</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">HttpExceptionFilter</span> <span class="keyword">implements</span> <span class="title class_">ExceptionFilter</span> &#123;</span><br><span class="line">    <span class="keyword">catch</span>(<span class="attr">exception</span>: <span class="title class_">HttpException</span>, <span class="attr">host</span>: <span class="title class_">ArgumentsHost</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> ctx = host.<span class="title function_">switchToHttp</span>();</span><br><span class="line">        <span class="keyword">const</span> response = ctx.<span class="property">getResponse</span>&lt;<span class="title class_">Response</span>&gt;();</span><br><span class="line">        <span class="keyword">const</span> request = ctx.<span class="property">getRequest</span>&lt;<span class="title class_">Request</span>&gt;();</span><br><span class="line">        <span class="keyword">const</span> status = exception.<span class="title function_">getStatus</span>();</span><br><span class="line"></span><br><span class="line">        response.<span class="title function_">status</span>(status).<span class="title function_">json</span>(&#123;</span><br><span class="line">            <span class="attr">statusCode</span>: status,</span><br><span class="line">            <span class="attr">timestamp</span>: <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toISOString</span>(),</span><br><span class="line">            <span class="attr">path</span>: request.<span class="property">url</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// cats.controller.ts</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Post</span>()</span><br><span class="line"><span class="comment">// @UseFilters(new HttpExceptionFilter())</span></span><br><span class="line"><span class="meta">@UseFilters</span>(<span class="title class_">HttpExceptionFilter</span>)</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">create</span>(<span class="params"><span class="meta">@Body</span>() createCatDto: CreateCatDto</span>) &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ForbiddenException</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义全局过滤器"><a href="#自定义全局过滤器" class="headerlink" title="自定义全局过滤器"></a>自定义全局过滤器</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// all-exceptions.filter.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Catch</span>, <span class="title class_">ArgumentsHost</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BaseExceptionFilter</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/core&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Catch</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AllExceptionsFilter</span> <span class="keyword">extends</span> <span class="title class_ inherited__">BaseExceptionFilter</span> &#123;</span><br><span class="line">    <span class="keyword">catch</span>(<span class="attr">exception</span>: <span class="built_in">unknown</span>, <span class="attr">host</span>: <span class="title class_">ArgumentsHost</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>.<span class="title function_">catch</span>(exception, host);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.ts</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">bootstrap</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> app = <span class="keyword">await</span> <span class="title class_">NestFactory</span>.<span class="title function_">create</span>(<span class="title class_">AppModule</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> &#123; httpAdapter &#125; = app.<span class="title function_">get</span>(<span class="title class_">HttpAdapterHost</span>);</span><br><span class="line">    app.<span class="title function_">useGlobalFilters</span>(<span class="keyword">new</span> <span class="title class_">AllExceptionsFilter</span>(httpAdapter));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> app.<span class="title function_">listen</span>(<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">bootstrap</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nest 邮箱</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E9%82%AE%E7%AE%B1/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E9%82%AE%E7%AE%B1/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>授权码 <code>邮箱授权码</code></p><h2 id="安装邮箱模块"><a href="#安装邮箱模块" class="headerlink" title="安装邮箱模块"></a>安装邮箱模块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save @nestjs-modules/mailer nodemailer</span><br></pre></td></tr></table></figure><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="module"><a href="#module" class="headerlink" title="module"></a>module</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// email.module.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">EmailService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./email.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">EmailController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./email.controller&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">EmailController</span>],</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">EmailService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">EmailModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// email.controller.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Controller</span>, <span class="title class_">Get</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">EmailService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./email.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiTags</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiTags</span>(<span class="string">&quot;email&quot;</span>)</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;email&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">EmailController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> emailService: EmailService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Get</span>()</span><br><span class="line">    <span class="title function_">sendEmail</span>(): <span class="built_in">string</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">emailService</span>.<span class="title function_">sendEmail</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="service"><a href="#service" class="headerlink" title="service"></a>service</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// email.service.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MailerService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs-modules/mailer&quot;</span>;</span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">EmailService</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> mailerService: MailerService</span>) &#123;&#125;</span><br><span class="line">    <span class="title function_">sendEmail</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">mailerService</span>.<span class="title function_">sendMail</span>(&#123;</span><br><span class="line">            <span class="attr">to</span>: <span class="string">&quot;904116587@qq.com&quot;</span>,</span><br><span class="line">            <span class="attr">from</span>: <span class="string">&quot;1690312648@qq.com&quot;</span>,</span><br><span class="line">            <span class="attr">subject</span>: <span class="string">&quot;subject&quot;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="app-module-ts-（重要）"><a href="#app-module-ts-（重要）" class="headerlink" title="app.module.ts （重要）"></a>app.module.ts （重要）</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MailerModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs-modules/mailer&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">EmailModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./modules/email/email.module&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">imports</span>: [</span><br><span class="line">        <span class="title class_">EmailModule</span>,</span><br><span class="line">        <span class="title class_">MailerModule</span>.<span class="title function_">forRoot</span>(&#123;</span><br><span class="line">            <span class="attr">transport</span>: <span class="string">&quot;smtps://1690312648@qq.com:xqqpdxmqsuvjcgci@smtp.qq.com&quot;</span>,</span><br><span class="line">            <span class="attr">defaults</span>: &#123;</span><br><span class="line">                <span class="attr">from</span>: <span class="string">&#x27;&quot;nest-email&quot; &lt;1690312648@qq.com&gt;&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">AppController</span>],</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">AppService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="发送邮件"><a href="#发送邮件" class="headerlink" title="发送邮件"></a>发送邮件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/email</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs 中间件</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E4%B8%AD%E9%97%B4%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>中间件是在路由处理程序之前调用的函数。中间件函数可以访问请求和响应对象，以及 next()应用程序请求-响应周期中的中间件函数。下一个中间件函数通常由一个名为 的变量表示 next。</p><ol><li>创建一个中间件</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// logger.middleware.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span>, <span class="title class_">NestMiddleware</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Request</span>, <span class="title class_">Response</span>, <span class="title class_">NextFunction</span> &#125; <span class="keyword">from</span> <span class="string">&quot;express&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">LoggerMiddleware</span> <span class="keyword">implements</span> <span class="title class_">NestMiddleware</span> &#123;</span><br><span class="line">    <span class="title function_">use</span>(<span class="params">req: Request, res: Response, next: NextFunction</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Request...&quot;</span>);</span><br><span class="line">        <span class="title function_">next</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>使用中间件</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.module.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span>, <span class="title class_">NestModule</span>, <span class="title class_">MiddlewareConsumer</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LoggerMiddleware</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./common/middleware/logger.middleware&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CatsModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./cats/cats.module&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">imports</span>: [<span class="title class_">CatsModule</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> <span class="keyword">implements</span> <span class="title class_">NestModule</span> &#123;</span><br><span class="line">    <span class="title function_">configure</span>(<span class="params">consumer: MiddlewareConsumer</span>) &#123;</span><br><span class="line">        consumer.<span class="title function_">apply</span>(<span class="title class_">LoggerMiddleware</span>).<span class="title function_">forRoutes</span>(<span class="string">&quot;cats&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs 装饰器</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E8%A3%85%E9%A5%B0%E5%99%A8/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E8%A3%85%E9%A5%B0%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    <span class="title class_">Controller</span>,</span><br><span class="line">    <span class="title class_">Get</span>,</span><br><span class="line">    <span class="title class_">Post</span>,</span><br><span class="line">    <span class="title class_">Body</span>,</span><br><span class="line">    <span class="title class_">Patch</span>,</span><br><span class="line">    <span class="title class_">Param</span>,</span><br><span class="line">    <span class="title class_">Delete</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UserService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./user.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/create-user.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UpdateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/update-user.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiTags</span>, <span class="title class_">ApiOperation</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// swagger 标签分类</span></span><br><span class="line"><span class="meta">@ApiTags</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="comment">// 将装饰的class 装饰成controller</span></span><br><span class="line"><span class="comment">// 路径 http://localhost3000/user</span></span><br><span class="line"><span class="comment">// 括号里是路由</span></span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="comment">// 使用依赖注入的方式引入 service</span></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> userService: UserService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(&#123;</span><br><span class="line">        <span class="attr">summary</span>: <span class="string">&quot;添加用户&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方法装饰器，将controller里的方法装饰成路由，并且以请求方法调用</span></span><br><span class="line">    <span class="comment">// @Post post调用 http://localhost3000/user</span></span><br><span class="line">    <span class="comment">// 以下方法装饰器同理</span></span><br><span class="line">    <span class="meta">@Post</span>()</span><br><span class="line">    <span class="comment">// @Body() 使用装饰器装饰 http 请求体参数</span></span><br><span class="line">    <span class="comment">// CreateUserDto ts 参数类型约束</span></span><br><span class="line">    <span class="title function_">create</span>(<span class="params"><span class="meta">@Body</span>() createUserDto: CreateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">create</span>(createUserDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @Get get调用 http://localhost3000/user</span></span><br><span class="line">    <span class="meta">@Get</span>()</span><br><span class="line">    <span class="title function_">findAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">findAll</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @Get get调用 http://localhost3000/user/123</span></span><br><span class="line">    <span class="meta">@Get</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">findOne</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">findOne</span>(+id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Patch</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">update</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span>, <span class="meta">@Body</span>() updateUserDto: UpdateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">update</span>(+id, updateUserDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">remove</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">remove</span>(+id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自定义路径</span></span><br><span class="line">    <span class="comment">// 和上面 @Get(&#x27;:id&#x27;) 装饰的方法会冲突</span></span><br><span class="line">    <span class="comment">// @Get(&#x27;/customPath&#x27;)</span></span><br><span class="line">    <span class="comment">// customPath() &#123;</span></span><br><span class="line">    <span class="comment">//   return this.userService.customPath();</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs dto (Data Transfer Object) 数据传输对象</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/dto/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/dto/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ul><li>对接口的参数进行约束</li><li>dto 是做表示层（展示给用户）的，而实体是数据对象（表）</li><li>dto 是面向对象的，实体是面向数据库的。</li><li>数据传输对象，这个对象封装你需要传输的数据 在 M，V，C 这三个层传递</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /src/user/dto/create-user.dto.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiProperty</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用swagger和ts配合使用，对参数进行约束及说明</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">CreateUserDto</span> &#123;</span><br><span class="line">    <span class="comment">// 对属性在swagger里进行说明</span></span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123; <span class="attr">description</span>: <span class="string">&quot;邮箱&quot;</span> &#125;)</span><br><span class="line">    <span class="comment">// 配置只读属性，在接口使用时，不允许修改</span></span><br><span class="line">    <span class="keyword">readonly</span> <span class="attr">email</span>: <span class="built_in">string</span>; <span class="comment">// 只读</span></span><br><span class="line">    <span class="comment">// 配置默认值</span></span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123; <span class="attr">description</span>: <span class="string">&quot;密码&quot;</span>, <span class="attr">default</span>: <span class="string">&quot;123456&quot;</span> &#125;)</span><br><span class="line">    <span class="attr">password</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123; <span class="attr">description</span>: <span class="string">&quot;用户名&quot;</span>, <span class="attr">default</span>: <span class="string">&quot;用户名&quot;</span> &#125;)</span><br><span class="line">    <span class="attr">username</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /src/user/user.controller.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/create-user.dto&quot;</span>;</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> userService: UserService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Post</span>()</span><br><span class="line">    <span class="comment">// @Body()装饰器 将从客户端获取到的参数赋给 createUserDto</span></span><br><span class="line">    <span class="comment">// CreateUserDto 用于约束 createUserDto里的属性值</span></span><br><span class="line">    <span class="title function_">create</span>(<span class="params"><span class="meta">@Body</span>() createUserDto: CreateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">create</span>(createUserDto);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="可选更新"><a href="#可选更新" class="headerlink" title="可选更新"></a>可选更新</h2><ul><li><p>在构建输入验证类型（也称为 DTO）时，在同一类型上构建创建和更新变体通常很有用。例如，创建变体可能需要所有字段，而更新变体可能使所有字段都是可选的。</p></li><li><p>Nest 提供了 PartialType()实用功能来简化此任务并最大限度地减少样板文件。</p></li><li><p>该 PartialType()函数返回一个类型（类），其中输入类型的所有属性都设置为可选</p></li><li><p><code>CreateUserDto</code> 里属性都是必选的，使用 <code>PartialType()</code>函数设置为可选</p></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// update-user.dto.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PartialType</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/mapped-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./create-user.dto&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UpdateUserDto</span> <span class="keyword">extends</span> <span class="title class_ inherited__">PartialType</span>(<span class="title class_">CreateUserDto</span>) &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs dto和entities</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/dto%E5%92%8Centities/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/dto%E5%92%8Centities/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ul><li>dto 是面对前端的，和前端打交道，检验前端传递的数据</li><li>entities 是面对数据库的，和数据库打交道，检验从数据库返回的数据</li><li>实体，nestjs 对象和数据库的映射关系</li></ul><h2 id="dto-文件"><a href="#dto-文件" class="headerlink" title="dto 文件"></a>dto 文件</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">IsInt</span>, <span class="title class_">IsString</span> &#125; <span class="keyword">from</span> <span class="string">&quot;class-validator&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">CreateCatDto</span> &#123;</span><br><span class="line">    <span class="meta">@IsString</span>()</span><br><span class="line">    <span class="keyword">readonly</span> <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@IsInt</span>()</span><br><span class="line">    <span class="keyword">readonly</span> <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@IsString</span>()</span><br><span class="line">    <span class="keyword">readonly</span> <span class="attr">breed</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="entity-文件"><a href="#entity-文件" class="headerlink" title="entity 文件"></a>entity 文件</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiProperty</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Cat</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The name of the Cat</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@example</span> <span class="variable">Kitty</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123; <span class="attr">example</span>: <span class="number">1</span>, <span class="attr">description</span>: <span class="string">&quot;The age of the Cat&quot;</span> &#125;)</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123;</span><br><span class="line">        <span class="attr">example</span>: <span class="string">&quot;Maine Coon&quot;</span>,</span><br><span class="line">        <span class="attr">description</span>: <span class="string">&quot;The breed of the Cat&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="attr">breed</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在-controller-中使用"><a href="#在-controller-中使用" class="headerlink" title="在 controller 中使用"></a>在 controller 中使用</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Body</span>, <span class="title class_">Controller</span>, <span class="title class_">Get</span>, <span class="title class_">Param</span>, <span class="title class_">Post</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    <span class="title class_">ApiBearerAuth</span>,</span><br><span class="line">    <span class="title class_">ApiOperation</span>,</span><br><span class="line">    <span class="title class_">ApiResponse</span>,</span><br><span class="line">    <span class="title class_">ApiTags</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CatsService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./cats.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateCatDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/create-cat.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Cat</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./entities/cat.entity&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiBearerAuth</span>()</span><br><span class="line"><span class="meta">@ApiTags</span>(<span class="string">&quot;cats&quot;</span>)</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;cats&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">CatsController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> catsService: CatsService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Post</span>()</span><br><span class="line">    <span class="meta">@ApiOperation</span>(&#123; <span class="attr">summary</span>: <span class="string">&quot;Create cat&quot;</span> &#125;)</span><br><span class="line">    <span class="meta">@ApiResponse</span>(&#123; <span class="attr">status</span>: <span class="number">403</span>, <span class="attr">description</span>: <span class="string">&quot;Forbidden.&quot;</span> &#125;)</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">create</span>(<span class="meta">@Body</span>() <span class="attr">createCatDto</span>: <span class="title class_">CreateCatDto</span>): <span class="title class_">Promise</span>&lt;<span class="title class_">Cat</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">catsService</span>.<span class="title function_">create</span>(createCatDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Get</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="meta">@ApiResponse</span>(&#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="attr">description</span>: <span class="string">&quot;The found record&quot;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">Cat</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="title function_">findOne</span>(<span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) <span class="attr">id</span>: <span class="built_in">string</span>): <span class="title class_">Cat</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">catsService</span>.<span class="title function_">findOne</span>(+id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs使用jwt</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/jwt/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/jwt/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="nestjs-jwt-验证文档"><a href="#nestjs-jwt-验证文档" class="headerlink" title="nestjs jwt 验证文档"></a><a href="https://docs.nestjs.com/security/authentication#authentication">nestjs jwt 验证文档</a></h2><h2 id="安装相关依赖"><a href="#安装相关依赖" class="headerlink" title="安装相关依赖"></a>安装相关依赖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install --save @nestjs/passport passport passport-local</span><br><span class="line">npm install --save-dev @types/passport-local</span><br><span class="line"></span><br><span class="line">npm install --save @nestjs/jwt passport-jwt</span><br><span class="line">npm install --save-dev @types/passport-jwt</span><br></pre></td></tr></table></figure><h2 id="创建-auth-模块"><a href="#创建-auth-模块" class="headerlink" title="创建 auth 模块"></a>创建 auth 模块</h2><ul><li>&#x2F;modules&#x2F;auth</li><li>登录验证相关代码</li></ul><h2 id="创建-jwt-密钥"><a href="#创建-jwt-密钥" class="headerlink" title="创建 jwt 密钥"></a>创建 jwt 密钥</h2><p>&#x2F;modules&#x2F;auth&#x2F;constants.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> jwtConstants = &#123;</span><br><span class="line">    <span class="attr">secret</span>: <span class="string">&quot;secretKey&quot;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="创建local-strategy-ts，用于无需-token-验证"><a href="#创建local-strategy-ts，用于无需-token-验证" class="headerlink" title="创建local.strategy.ts，用于无需 token 验证"></a>创建<code>local.strategy.ts</code>，用于无需 token 验证</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Strategy</span> &#125; <span class="keyword">from</span> <span class="string">&quot;passport-local&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PassportStrategy</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/passport&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span>, <span class="title class_">UnauthorizedException</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./auth.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">LocalStrategy</span> <span class="keyword">extends</span> <span class="title class_ inherited__">PassportStrategy</span>(<span class="title class_">Strategy</span>) &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> authService: AuthService</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">validate</span>(<span class="attr">username</span>: <span class="built_in">string</span>, <span class="attr">password</span>: <span class="built_in">string</span>): <span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">authService</span>.<span class="title function_">validateUser</span>(username, password);</span><br><span class="line">        <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnauthorizedException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建jwt-strategy-ts，用于需要-token-校验"><a href="#创建jwt-strategy-ts，用于需要-token-校验" class="headerlink" title="创建jwt.strategy.ts，用于需要 token 校验"></a>创建<code>jwt.strategy.ts</code>，用于需要 token 校验</h2><ul><li>jwtFromRequest: 提供从 Request. 我们将使用在 API 请求的 Authorization 标头中提供不记名令牌的标准方法。此处描述了其他选项。</li><li>ignoreExpiration：为了明确起见，我们选择默认 false 设置，它将确保 JWT 未过期的责任委托给 Passport 模块。这意味着如果我们的路由提供了过期的 JWT，请求将被拒绝并 401 Unauthorized 发送响应。Passport 可以方便地自动为我们处理这个问题。</li><li>secretOrKey：我们正在使用权宜之计选项，即提供对称密钥来签署令牌。其他选项，例如 PEM 编码的公钥，可能更适合生产应用程序（请参阅此处了解更多信息）。无论如何，如前所述，不要公开揭露这个秘密。</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ExtractJwt</span>, <span class="title class_">Strategy</span> &#125; <span class="keyword">from</span> <span class="string">&quot;passport-jwt&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PassportStrategy</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/passport&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; jwtConstants &#125; <span class="keyword">from</span> <span class="string">&quot;./constants&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">JwtStrategy</span> <span class="keyword">extends</span> <span class="title class_ inherited__">PassportStrategy</span>(<span class="title class_">Strategy</span>) &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(&#123;</span><br><span class="line">            <span class="attr">jwtFromRequest</span>: <span class="title class_">ExtractJwt</span>.<span class="title function_">fromAuthHeaderAsBearerToken</span>(),</span><br><span class="line">            <span class="attr">ignoreExpiration</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">secretOrKey</span>: jwtConstants.<span class="property">secret</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解密token，获取token里的数据</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">validate</span>(<span class="params">payload: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> payload;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建身份守卫"><a href="#创建身份守卫" class="headerlink" title="创建身份守卫"></a>创建身份守卫</h2><ul><li>用于指定路由是 local 还是 jwt</li><li>jwt 需要 token 验证</li><li>local 无需验证</li></ul><h3 id="jwt-auth-guard-ts-，jwt-验证守卫"><a href="#jwt-auth-guard-ts-，jwt-验证守卫" class="headerlink" title="jwt-auth.guard.ts ，jwt 验证守卫"></a><code>jwt-auth.guard.ts</code> ，jwt 验证守卫</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthGuard</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/passport&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">JwtAuthGuard</span> <span class="keyword">extends</span> <span class="title class_ inherited__">AuthGuard</span>(<span class="string">&quot;jwt&quot;</span>) &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="local-auth-guard-ts，本地守卫"><a href="#local-auth-guard-ts，本地守卫" class="headerlink" title="local-auth.guard.ts，本地守卫"></a><code>local-auth.guard.ts</code>，本地守卫</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthGuard</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/passport&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">LocalAuthGuard</span> <span class="keyword">extends</span> <span class="title class_ inherited__">AuthGuard</span>(<span class="string">&quot;local&quot;</span>) &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-具体看auth-controller-ts"><a href="#使用-具体看auth-controller-ts" class="headerlink" title="使用,具体看auth.controller.ts"></a>使用,具体看<code>auth.controller.ts</code></h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AuthController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> authService: AuthService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不使用守卫文件，使用自带的守卫</span></span><br><span class="line">    <span class="meta">@UseGuards</span>(<span class="title class_">AuthGuard</span>(<span class="string">&quot;local&quot;</span>))</span><br><span class="line">    <span class="comment">// @UseGuards(LocalAuthGuard)</span></span><br><span class="line">    <span class="meta">@Post</span>(<span class="string">&quot;login&quot;</span>)</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params"><span class="meta">@Request</span>() req</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">authService</span>.<span class="title function_">login</span>(req.<span class="property">user</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用守卫文件</span></span><br><span class="line">    <span class="meta">@UseGuards</span>(<span class="title class_">JwtAuthGuard</span>)</span><br><span class="line">    <span class="meta">@Get</span>(<span class="string">&quot;profile&quot;</span>)</span><br><span class="line">    <span class="title function_">getProfile</span>(<span class="params"><span class="meta">@Query</span>() req</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> req;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建-service，auth-service-ts"><a href="#创建-service，auth-service-ts" class="headerlink" title="创建 service，auth.service.ts"></a>创建 service，<code>auth.service.ts</code></h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">JwtService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/jwt&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AuthService</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> jwtService: JwtService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">validateUser</span>(<span class="attr">username</span>: <span class="built_in">string</span>, <span class="attr">pass</span>: <span class="built_in">string</span>): <span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> user = &#123; <span class="attr">name</span>: <span class="string">&quot;name&quot;</span>, <span class="attr">password</span>: <span class="string">&quot;123&quot;</span> &#125;;</span><br><span class="line">        <span class="keyword">if</span> (user &amp;&amp; user.<span class="property">password</span> === pass) &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; password, ...result &#125; = user;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">user: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> payload = &#123; <span class="attr">username</span>: user.<span class="property">username</span>, <span class="attr">sub</span>: user.<span class="property">userId</span> &#125;;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">access_token</span>: <span class="variable language_">this</span>.<span class="property">jwtService</span>.<span class="title function_">sign</span>(payload),</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建-controller，auth-controller-ts"><a href="#创建-controller，auth-controller-ts" class="headerlink" title="创建 controller，auth.controller.ts"></a>创建 controller，<code>auth.controller.ts</code></h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    <span class="title class_">Controller</span>,</span><br><span class="line">    <span class="title class_">Get</span>,</span><br><span class="line">    <span class="title class_">Request</span>,</span><br><span class="line">    <span class="title class_">Post</span>,</span><br><span class="line">    <span class="title class_">UseGuards</span>,</span><br><span class="line">    <span class="title class_">Query</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthGuard</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/passport&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">JwtAuthGuard</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./jwt-auth.guard&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LocalAuthGuard</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./local-auth.guard&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./auth.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;auth&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AuthController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> authService: AuthService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不校验</span></span><br><span class="line">    <span class="meta">@UseGuards</span>(<span class="title class_">AuthGuard</span>(<span class="string">&quot;local&quot;</span>))</span><br><span class="line">    <span class="comment">// @UseGuards(LocalAuthGuard)</span></span><br><span class="line">    <span class="meta">@Post</span>(<span class="string">&quot;login&quot;</span>)</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params"><span class="meta">@Request</span>() req</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">authService</span>.<span class="title function_">login</span>(req.<span class="property">user</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//需token</span></span><br><span class="line">    <span class="meta">@UseGuards</span>(<span class="title class_">JwtAuthGuard</span>)</span><br><span class="line">    <span class="meta">@Get</span>(<span class="string">&quot;profile&quot;</span>)</span><br><span class="line">    <span class="title function_">getProfile</span>(<span class="params"><span class="meta">@Query</span>() req</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> req;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建-module，auth-module-ts"><a href="#创建-module，auth-module-ts" class="headerlink" title="创建 module，auth.module.ts"></a>创建 module，<code>auth.module.ts</code></h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PassportModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/passport&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">JwtModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/jwt&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./auth.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./auth.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; jwtConstants &#125; <span class="keyword">from</span> <span class="string">&quot;./constants&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">JwtStrategy</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./jwt.strategy&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LocalStrategy</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./local.strategy&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">imports</span>: [</span><br><span class="line">        <span class="title class_">PassportModule</span>,</span><br><span class="line">        <span class="comment">// 注册</span></span><br><span class="line">        <span class="title class_">JwtModule</span>.<span class="title function_">register</span>(&#123;</span><br><span class="line">            <span class="comment">// jwt密钥</span></span><br><span class="line">            <span class="attr">secret</span>: jwtConstants.<span class="property">secret</span>,</span><br><span class="line">            <span class="comment">// token过期时间</span></span><br><span class="line">            <span class="attr">signOptions</span>: &#123; <span class="attr">expiresIn</span>: <span class="string">&quot;360s&quot;</span> &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// 重要！！！</span></span><br><span class="line">    <span class="comment">// JwtStrategy, LocalStrategy 这两个2文件必须引入</span></span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">AuthService</span>, <span class="title class_">JwtStrategy</span>, <span class="title class_">LocalStrategy</span>],</span><br><span class="line">    <span class="attr">exports</span>: [<span class="title class_">AuthService</span>],</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">AuthController</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AuthModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="在app-module-ts，中引入"><a href="#在app-module-ts，中引入" class="headerlink" title="在app.module.ts，中引入"></a>在<code>app.module.ts</code>，中引入</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AuthModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./modules/auth/auth.module&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">imports</span>: [<span class="title class_">AuthModule</span>],</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">AppController</span>],</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">AppService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs 模块</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E6%A8%A1%E5%9D%97/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>app.module.ts</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">VideoModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./video/video.module&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UserModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./user/user.module&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// nest 中的模块装饰器</span></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="comment">// 引入子模块</span></span><br><span class="line">    <span class="attr">imports</span>: [<span class="title class_">VideoModule</span>, <span class="title class_">UserModule</span>],</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">AppController</span>],</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">AppService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs providers</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/providers/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/providers/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ul><li>所有使用 <code>@Injectable()</code> ，装饰的类，想使用都必须在<code>module.ts</code>，里注册。<ul><li><code>@Module(&#123;providers: [AuthService, JwtStrategy, LocalStrategy],&#125;)</code></li></ul></li><li>废话：提供者是 Nest 的一个基本概念。许多基本的 Nest 类可以被视为提供者——服务、存储库、工厂、助手等等。提供者的主要思想是它可以作为依赖注入；这意味着对象之间可以创建各种关系，并且“连接”对象实例的功能在很大程度上可以委托给 Nest 运行时系统。</li></ul><h2 id="创建一个提供者-provider-一般是-Services-文件"><a href="#创建一个提供者-provider-一般是-Services-文件" class="headerlink" title="创建一个提供者(provider) 一般是 Services 文件"></a>创建一个提供者(provider) 一般是 Services 文件</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// cats.service.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Injectable</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Cat</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./interfaces/cat.interface&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">CatsService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="attr">cats</span>: <span class="title class_">Cat</span>[] = [];</span><br><span class="line"></span><br><span class="line">    <span class="title function_">create</span>(<span class="params">cat: Cat</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cats</span>.<span class="title function_">push</span>(cat);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">findAll</span>(): <span class="title class_">Cat</span>[] &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">cats</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在模块中注册"><a href="#在模块中注册" class="headerlink" title="在模块中注册"></a>在模块中注册</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.module.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Module</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CatsController</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./cats/cats.controller&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CatsService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./cats/cats.service&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Module</span>(&#123;</span><br><span class="line">    <span class="attr">controllers</span>: [<span class="title class_">CatsController</span>],</span><br><span class="line">    <span class="attr">providers</span>: [<span class="title class_">CatsService</span>],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppModule</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="在-controller-里使用"><a href="#在-controller-里使用" class="headerlink" title="在 controller 里使用"></a>在 controller 里使用</h2><ul><li>创建一个 interface(非必须)</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// interfaces / cat.interface.ts;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">Cat</span> &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="attr">breed</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Controller</span>, <span class="title class_">Get</span>, <span class="title class_">Post</span>, <span class="title class_">Body</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateCatDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/create-cat.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CatsService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./cats.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Cat</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./interfaces/cat.interface&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;cats&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">CatsController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> catsService: CatsService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Post</span>()</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">create</span>(<span class="params"><span class="meta">@Body</span>() createCatDto: CreateCatDto</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">catsService</span>.<span class="title function_">create</span>(createCatDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Get</span>()</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">findAll</span>(): <span class="title class_">Promise</span>&lt;<span class="title class_">Cat</span>[]&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">catsService</span>.<span class="title function_">findAll</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注"><a href="#注" class="headerlink" title="注"></a>注</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> catsService: CatsService</span>) &#123;&#125;</span><br></pre></td></tr></table></figure><p><code>CatsService</code> 是通过类构造函数注入的。注意 <code>private</code> 语法的使用。这种简写方式允许我们 <code>catsService</code> 在同一位置立即声明和初始化成员。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs swagger</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/swagger/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/swagger/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="main-ts-配置-swagger"><a href="#main-ts-配置-swagger" class="headerlink" title="main.ts 配置 swagger"></a>main.ts 配置 swagger</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">NestFactory</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/core&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">SwaggerModule</span>, <span class="title class_">DocumentBuilder</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AppModule</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./app.module&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">bootstrap</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 创建nest应用 （引入根模块）</span></span><br><span class="line">    <span class="keyword">const</span> app = <span class="keyword">await</span> <span class="title class_">NestFactory</span>.<span class="title function_">create</span>(<span class="title class_">AppModule</span>);</span><br><span class="line">    <span class="comment">// 创建swagger接口文档及接口测试</span></span><br><span class="line">    <span class="keyword">const</span> options = <span class="keyword">new</span> <span class="title class_">DocumentBuilder</span>()</span><br><span class="line">        .<span class="title function_">setTitle</span>(<span class="string">&quot;接口文档标题&quot;</span>)</span><br><span class="line">        .<span class="title function_">setDescription</span>(<span class="string">&quot;描述&quot;</span>)</span><br><span class="line">        .<span class="title function_">setVersion</span>(<span class="string">&quot;1.0&quot;</span>)</span><br><span class="line">        .<span class="title function_">build</span>();</span><br><span class="line">    <span class="keyword">const</span> <span class="variable language_">document</span> = <span class="title class_">SwaggerModule</span>.<span class="title function_">createDocument</span>(app, options);</span><br><span class="line">    <span class="title class_">SwaggerModule</span>.<span class="title function_">setup</span>(<span class="string">&quot;docs&quot;</span>, app, <span class="variable language_">document</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> app.<span class="title function_">listen</span>(<span class="number">3000</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;http://localhost:3000&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">bootstrap</span>();</span><br></pre></td></tr></table></figure><h2 id="设置-swagger-元素"><a href="#设置-swagger-元素" class="headerlink" title="设置 swagger 元素"></a>设置 swagger 元素</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiTags</span>, <span class="title class_">ApiOperation</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"><span class="comment">// 设置 controller 标签 ApiTags</span></span><br><span class="line"><span class="meta">@ApiTags</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="comment">// 设置接口属性 ApiOperation</span></span><br><span class="line">    <span class="comment">// ApiOperation 传入一个对象</span></span><br><span class="line">    <span class="meta">@ApiOperation</span>(&#123;</span><br><span class="line">        <span class="attr">summary</span>: <span class="string">&quot;添加用户&quot;</span>, <span class="comment">// 描述</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="meta">@Post</span>()</span><br><span class="line">    <span class="title function_">create</span>(<span class="params"><span class="meta">@Body</span>() createUserDto: CreateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">create</span>(createUserDto);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="具体使用"><a href="#具体使用" class="headerlink" title="具体使用"></a>具体使用</h2><ul><li>controller</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    <span class="title class_">Controller</span>,</span><br><span class="line">    <span class="title class_">Get</span>,</span><br><span class="line">    <span class="title class_">Post</span>,</span><br><span class="line">    <span class="title class_">Body</span>,</span><br><span class="line">    <span class="title class_">Patch</span>,</span><br><span class="line">    <span class="title class_">Param</span>,</span><br><span class="line">    <span class="title class_">Delete</span>,</span><br><span class="line">    <span class="title class_">Query</span>,</span><br><span class="line">    <span class="title class_">Headers</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/common&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    <span class="title class_">ApiQuery</span>,</span><br><span class="line">    <span class="title class_">ApiTags</span>,</span><br><span class="line">    <span class="title class_">ApiOperation</span>,</span><br><span class="line">    <span class="title class_">ApiResponse</span>,</span><br><span class="line">    <span class="title class_">ApiBody</span>,</span><br><span class="line">    <span class="title class_">ApiParam</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UserService</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./user.service&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CreateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/create-user.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UpdateUserDto</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./dto/update-user.dto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">User</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./entities/user.entity&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiTags</span>(<span class="string">&quot;User&quot;</span>)</span><br><span class="line"><span class="meta">@Controller</span>(<span class="string">&quot;user&quot;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="keyword">readonly</span> userService: UserService</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Get</span>()</span><br><span class="line">    <span class="meta">@ApiQuery</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;id&quot;</span>, <span class="attr">required</span>: <span class="literal">false</span>, <span class="attr">description</span>: <span class="string">&quot;用户id&quot;</span> &#125;)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(&#123; <span class="attr">summary</span>: <span class="string">&quot;根据Query查询&quot;</span> &#125;)</span><br><span class="line">    <span class="meta">@ApiResponse</span>(&#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="attr">description</span>: <span class="string">&quot;返回用户信息&quot;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">User</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="title function_">findByQuery</span>(<span class="params"><span class="meta">@Query</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span>, <span class="meta">@Headers</span>() &#123; authorization &#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">findByQuery</span>(+id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiBody</span>(&#123; <span class="attr">description</span>: <span class="string">&quot;填写创建内容&quot;</span> &#125;)</span><br><span class="line">    <span class="meta">@Post</span>()</span><br><span class="line">    <span class="title function_">create</span>(<span class="params"><span class="meta">@Body</span>() createUserDto: CreateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">create</span>(createUserDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(&#123; <span class="attr">summary</span>: <span class="string">&quot;查询所有用户&quot;</span> &#125;)</span><br><span class="line">    <span class="meta">@Get</span>(<span class="string">&quot;all&quot;</span>)</span><br><span class="line">    <span class="title function_">findAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">findAll</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 下面几个必须包含id的方法，可以不加 @ApiParam，因为swagger默认加上了</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// @ApiParam(&#123; name: &#x27;id&#x27; &#125;)</span></span><br><span class="line">    <span class="meta">@Get</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">findOne</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">findOne</span>(+id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @ApiParam(&#123; name: &#x27;id&#x27; &#125;)</span></span><br><span class="line">    <span class="meta">@ApiBody</span>(&#123; <span class="attr">description</span>: <span class="string">&quot;填写更新内容&quot;</span> &#125;)</span><br><span class="line">    <span class="meta">@Patch</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">update</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span>, <span class="meta">@Body</span>() updateUserDto: UpdateUserDto</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">update</span>(+id, updateUserDto);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @ApiParam(&#123; name: &#x27;id&#x27; &#125;)</span></span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">&quot;:id&quot;</span>)</span><br><span class="line">    <span class="title function_">remove</span>(<span class="params"><span class="meta">@Param</span>(<span class="string">&quot;id&quot;</span>) id: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">userService</span>.<span class="title function_">remove</span>(+id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>entity</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApiProperty</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@nestjs/swagger&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123; <span class="attr">example</span>: <span class="string">&quot;张三&quot;</span>, <span class="attr">description</span>: <span class="string">&quot;名字&quot;</span> &#125;)</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123; <span class="attr">example</span>: <span class="number">1</span>, <span class="attr">description</span>: <span class="string">&quot;年龄&quot;</span> &#125;)</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiProperty</span>(&#123;</span><br><span class="line">        <span class="attr">example</span>: <span class="string">&quot;品种&quot;</span>,</span><br><span class="line">        <span class="attr">description</span>: <span class="string">&quot;白人&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="attr">breed</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nestjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nestjs typeorm基本使用</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/orm/typeorm%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nestjs/orm/typeorm%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// database.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; join &#125; <span class="keyword">from</span> <span class="string">&quot;path&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;mysql&quot;</span>,</span><br><span class="line">    <span class="attr">host</span>: <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">    <span class="attr">port</span>: <span class="number">3306</span>,</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&quot;youwei&quot;</span>,</span><br><span class="line">    <span class="attr">database</span>: <span class="string">&quot;nest&quot;</span>,</span><br><span class="line">    <span class="comment">// 实体，nestjs对象和数据库的映射关系</span></span><br><span class="line">    <span class="attr">entities</span>: [<span class="title function_">join</span>(__dirname, <span class="string">&quot;../&quot;</span>, <span class="string">&quot;**/**.entity&#123;.ts,.js&#125;&quot;</span>)],</span><br><span class="line">    <span class="comment">// synchronize可以让数据库根据实体类自动生成表及元数据（严禁在生产环境中使用,会破坏表结构）</span></span><br><span class="line">    <span class="attr">synchronize</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Column</span>, <span class="title class_">Entity</span>, <span class="title class_">PrimaryGeneratedColumn</span> &#125; <span class="keyword">from</span> <span class="string">&quot;typeorm&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认表名为class名称的小写，也可以通过设置@Entity(‘coffee’)来定义表名</span></span><br><span class="line"><span class="meta">@Entity</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;user-by-mysql&quot;</span> &#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserByMysql</span> &#123;</span><br><span class="line">    <span class="meta">@PrimaryGeneratedColumn</span>()</span><br><span class="line">    <span class="attr">id</span>: <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column</span>(&#123; <span class="attr">length</span>: <span class="number">20</span> &#125;)</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column</span>(<span class="string">&quot;varchar&quot;</span>)</span><br><span class="line">    <span class="attr">password</span>: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column</span>()</span><br><span class="line">    <span class="attr">status</span>: <span class="built_in">boolean</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><h3 id="错误-1"><a href="#错误-1" class="headerlink" title="错误 1"></a>错误 1</h3><p>如果有报下面的错误。导致这个错误的原因是，目前，最新的 mysql 模块并未完全支持 MySQL 8 的“caching_sha2_password”加密方式，而“caching_sha2_password”在 MySQL 8 中是默认的加密方式。因此，下面的方式命令是默认已经使用了“caching_sha2_password”加密方式，该账号、密码无法在 mysql 模块中使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client</span><br></pre></td></tr></table></figure><p>解决方法是从新修改用户 root 的密码，并指定 mysql 模块能够支持的加密方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><h3 id="错误-2"><a href="#错误-2" class="headerlink" title="错误 2"></a>错误 2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Nest can&#x27;t resolve dependencies of the TypeOrmCoreModule (TypeOrmModuleOptions, ?). Please make sure that the argument ModuleRef at index [1] is available in the TypeOrmCoreModule context.</span><br></pre></td></tr></table></figure><ul><li>把<code>@nestjs/typeorm</code>和<code>typeorm</code>，降级</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;@nestjs/typeorm&quot;: &quot;^7.0.0&quot;,</span><br><span class="line">&quot;typeorm&quot;: &quot;^0.2.24&quot;</span><br></pre></td></tr></table></figure><p><a href="https://docs.nestjs.com/techniques/database#database">看文档</a><br><a href="https://www.bilibili.com/video/BV1bQ4y1A77L?p=13&vd_source=1849c61e1da64155e8d0f1ff99761382">看视频</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typeorm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodejs常用工具库</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%BA%93/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="密码加密"><a href="#密码加密" class="headerlink" title="密码加密"></a>密码加密</h2><ol><li><p>bcrypt</p><ul><li><p>加密</p><ul><li><p>hash （异步）</p></li><li><p>hashSync （同步）第一个为加密的值（密码），第二个为加密的等级</p></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bcrypt = <span class="built_in">require</span>(<span class="string">&quot;bcrypt&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">UserSchema</span> = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">username</span>: &#123; </span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">unique</span>: <span class="literal">true</span>, <span class="comment">//限唯一值</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">password</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="title function_">set</span>(<span class="params">value</span>) &#123; <span class="comment">//在这里使用 bcrypt.hashSync 加密（散列）密码</span></span><br><span class="line">      <span class="keyword">return</span> bcrypt.<span class="title function_">hashSync</span>(value, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//加密后 $2b$04$ziX.qnWtqjnnwrYjTEG.tuYGmQXCgK8PjjFn3VjWJo/2pBpaqTye6</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = mongoose.<span class="title function_">model</span>(<span class="string">&quot;User&quot;</span>, <span class="title class_">UserSchema</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; <span class="title class_">User</span> &#125;;</span><br></pre></td></tr></table></figure><ul><li><p>​对比</p><ul><li>compare （异步）</li><li>compareSync（同步） 第一个为接口传入，第二个为数据库取出。返回<code>boolean</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/api/login&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, password &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123;</span><br><span class="line">    username,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">422</span>).<span class="title function_">send</span>(&#123; <span class="attr">msg</span>: <span class="string">&quot;用户名不存在&quot;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> isPasswordValid = bcrypt.<span class="title function_">compareSync</span>(password, user.<span class="property">password</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(isPasswordValid);<span class="comment">// true/false</span></span><br><span class="line">  res.<span class="title function_">send</span>(user);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="token"><a href="#token" class="headerlink" title="token"></a>token</h2><ol><li><p>jsonwebtoken</p><ul><li><p>jwt.sign({ id: String(user._id) }, SECRET,option)  第一个参数为id等可以查找对应用户的数据（对象）</p><p>第二个为<code>SECRET</code>一般放在.env等被gitignore忽略的文件中，第三个为配置项（过期时间等）：<code>&#123;expiresIn:3600&#125;</code>,第四个为回调函数</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&quot;jsonwebtoken&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SECRET</span> = <span class="string">&quot;secret&quot;</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/api/login&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, password &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="comment">//查询用户</span></span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123;</span><br><span class="line">    username,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//用户是否存在</span></span><br><span class="line">  <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">422</span>).<span class="title function_">send</span>(&#123; <span class="attr">msg</span>: <span class="string">&quot;用户名不存在&quot;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//校验密码</span></span><br><span class="line">  <span class="keyword">const</span> isPasswordValid = bcrypt.<span class="title function_">compareSync</span>(password, user.<span class="property">password</span>);</span><br><span class="line">  <span class="keyword">if</span> (!isPasswordValid) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">422</span>).<span class="title function_">send</span>(&#123; <span class="attr">msg</span>: <span class="string">&quot;密码无效&quot;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//生成token</span></span><br><span class="line">  <span class="keyword">const</span> token = jwt.<span class="title function_">sign</span>(&#123; <span class="attr">id</span>: <span class="title class_">String</span>(user.<span class="property">_id</span>) &#125;, <span class="variable constant_">SECRET</span>); <span class="comment">//eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyNGE2MmNmYjNmMDg4MmUyMmY1NmMyMiIsImlhdCI6MTY0OTA0OTM0OX0.O0poGl9KpakXAN9v0CDDiJXrEGqNpzRTYjppkn9Uvs8</span></span><br><span class="line">  </span><br><span class="line">    res.<span class="title function_">send</span>(&#123;</span><br><span class="line">    user,</span><br><span class="line">    token,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jwt.verify(token, SECRET) 第一个参数为前端传来的<code>token</code>，第二个为<code>SECRET</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&quot;jsonwebtoken&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SECRET</span> = <span class="string">&quot;secret&quot;</span>;</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/api/profile&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line"> <span class="keyword">let</span> authorization = req.<span class="property">headers</span>.<span class="property">authorization</span>;</span><br><span class="line"> <span class="keyword">const</span> token = <span class="title class_">String</span>(authorization).<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>)[<span class="number">1</span>];</span><br><span class="line"> <span class="comment">// const tokenVerify = jwt.verify(token, SECRET); //&#123; id: &#x27;624a62cfb3f0882e22f56c22&#x27;, iat: 1649049349 &#125;</span></span><br><span class="line"> <span class="keyword">const</span> &#123; id &#125; = jwt.<span class="title function_">verify</span>(token, <span class="variable constant_">SECRET</span>);</span><br><span class="line"> <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findById</span>(id);</span><br><span class="line"> res.<span class="title function_">send</span>(user);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>验证token是否过期并规定哪些路由不用验证，需要npm 引入 express-jwt</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> expressJwt = <span class="built_in">require</span>(<span class="string">&#x27;express-jwt&#x27;</span>)</span><br><span class="line"><span class="comment">// app.use(</span></span><br><span class="line"><span class="comment">//   expressJwt(&#123;</span></span><br><span class="line"><span class="comment">//     secret: &quot;mes_qdhd_mobile_xhykjyxgs&quot;,</span></span><br><span class="line"><span class="comment">//   &#125;).unless(&#123;</span></span><br><span class="line"><span class="comment">//     path: [&quot;/login&quot;], //除了这个地址，其他的URL都需要验证</span></span><br><span class="line"><span class="comment">//   &#125;)</span></span><br><span class="line"><span class="comment">// );</span></span><br></pre></td></tr></table></figure></li><li><p>passport &amp; passport-jwt</p><ol><li>具体使用看这个项目<code>https://gitee.com/youwei997/nodejs-element-wuhaiyang</code></li></ol></li></ol><h2 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h2><ol><li><p>cors</p></li><li><p>手动封装跨域中间件</p><ol><li>接口形式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置跨域访问</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>,<span class="keyword">function</span>(<span class="params">req,res,next</span>)&#123;</span><br><span class="line">    <span class="comment">//设置允许跨域的域名，*代表允许任意域名跨域</span></span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>,<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    <span class="comment">//允许的header类型</span></span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>,<span class="string">&quot;content-type&quot;</span>);</span><br><span class="line">    <span class="comment">//跨域允许的请求方式 </span></span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Access-Control-Allow-Methods&quot;</span>,<span class="string">&quot;DELETE,PUT,POST,GET,OPTIONS&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">method</span>.<span class="title function_">toLowerCase</span>() == <span class="string">&#x27;options&#x27;</span>)</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="number">200</span>);  <span class="comment">//让options尝试请求快速结束</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="title function_">next</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>全局中间件形式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义跨域中间件</span></span><br><span class="line"><span class="keyword">var</span> allowCors = <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, req.<span class="property">headers</span>.<span class="property">origin</span>);</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span>, <span class="string">&#x27;GET,PUT,POST,DELETE,OPTIONS&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class="string">&#x27;Content-Type&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span>,<span class="string">&#x27;true&#x27;</span>);</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">&#125;;</span><br><span class="line">app.<span class="title function_">use</span>(allowCors);<span class="comment">//使用跨域中间件</span></span><br></pre></td></tr></table></figure></li><li><p>cors 第三方中间件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>()); <span class="comment">//允许跨域</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务端启动&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><h2 id="参数解析"><a href="#参数解析" class="headerlink" title="参数解析"></a>参数解析</h2><ol><li><strong>内置</strong> <code>express.json &amp; express.urlencoded(&#123; extended: false &#125;)</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;)); <span class="comment">//x-www-form-urlencoded</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>()); <span class="comment">//使用ui框架，发送纯json时有用，或者postman body raw。使用postman x-www-form-urlencoded无效</span></span><br></pre></td></tr></table></figure><ol start="2"><li><strong>第三方</strong> body-parser</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&quot;body-parser&quot;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>());</span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nodejs原生获取参数</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E5%8E%9F%E7%94%9F%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E5%8E%9F%E7%94%9F%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//req.body</span></span><br><span class="line"><span class="comment">//包含了提交数据的键值对在请求的body中，默认是underfined,</span></span><br><span class="line">解析body不是nodejs默认提供的，你需要载入body-parser中间件才可以使用req.<span class="property">body</span>；</span><br><span class="line">此方法通常用来解析<span class="variable constant_">POST</span>请求中的数据</span><br><span class="line"></span><br><span class="line"><span class="comment">//原生获取参数</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line">app.<span class="title function_">createServer</span>(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">method</span>);</span><br><span class="line">  <span class="keyword">if</span>(req.<span class="property">method</span> === <span class="string">&#x27;POST&#x27;</span>)&#123;</span><br><span class="line">  <span class="comment">//数据格式</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;content-type&#x27;</span>,req.<span class="property">headers</span>[<span class="string">&#x27;content-type&#x27;</span>])</span><br><span class="line">      <span class="comment">//接收数据</span></span><br><span class="line">      <span class="keyword">let</span> postData = <span class="string">&#x27;&#x27;</span></span><br><span class="line">      req.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,<span class="function"><span class="params">chunk</span>=&gt;</span>&#123;</span><br><span class="line">          postData+=chunk.<span class="title function_">toString</span>()</span><br><span class="line">      &#125;)</span><br><span class="line">      req.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(postData)</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">3000</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//req.query</span></span><br><span class="line"><span class="comment">//包含在路由中每个查询字符串参数属性的对象。如果没有，默认为&#123;&#125;</span></span><br><span class="line"><span class="comment">// GET /search?q=tobi+ferret</span></span><br><span class="line">req.<span class="property">query</span>.<span class="property">q</span></span><br><span class="line"><span class="comment">// =&gt; &quot;tobi ferret&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// GET /shoes?order=desc&amp;shoe[color]=blue&amp;shoe[type]=converse</span></span><br><span class="line">req.<span class="property">query</span>.<span class="property">order</span></span><br><span class="line"><span class="comment">// =&gt; &quot;desc&quot;</span></span><br><span class="line">req.<span class="property">query</span>.<span class="property">shoe</span>.<span class="property">color</span></span><br><span class="line"><span class="comment">// =&gt; &quot;blue&quot;</span></span><br><span class="line">req.<span class="property">query</span>.<span class="property">shoe</span>.<span class="property">type</span></span><br><span class="line"><span class="comment">// =&gt; &quot;converse&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//req.params</span></span><br><span class="line"><span class="comment">//包含映射到指定的路线“参数”属性的对象。</span></span><br><span class="line">例如，如果你有route/user/：name，那么“name”属性可作为req.<span class="property">params</span>.<span class="property">name</span>。</span><br><span class="line">该对象默认为&#123;&#125;。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nodejs跨域</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E8%B7%A8%E5%9F%9F/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E8%B7%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h2 id="koa"><a href="#koa" class="headerlink" title="koa"></a>koa</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置跨域访问</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    ctx.<span class="title function_">set</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">    ctx.<span class="title function_">set</span>(<span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class="string">&#x27;Content-Type,Content-Length,Authorization,Accept,X-Requested-With&#x27;</span>)</span><br><span class="line">    ctx.<span class="title function_">set</span>(<span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span>, <span class="string">&#x27;PUT,POST,GET,DELETE,OPTIONS&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (ctx.<span class="property">method</span> == <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">        ctx.<span class="property">body</span> = <span class="number">200</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">next</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="express"><a href="#express" class="headerlink" title="express"></a>express</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置跨域访问</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&#x27;*&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="string">&quot;X-Requested-With&quot;</span>);</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Access-Control-Allow-Methods&quot;</span>,<span class="string">&quot;PUT,POST,GET,DELETE,OPTIONS&quot;</span>);</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;X-Powered-By&quot;</span>,<span class="string">&#x27; 3.2.1&#x27;</span>)</span><br><span class="line">    res.<span class="title function_">header</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>koa洋葱模型</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/koa%E6%B4%8B%E8%91%B1%E6%A8%A1%E5%9E%8B/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/koa%E6%B4%8B%E8%91%B1%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//洋葱模型</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Koa</span>=<span class="built_in">require</span>(<span class="string">&#x27;koa&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app=<span class="keyword">new</span> <span class="title class_">Koa</span>();</span><br><span class="line">app.<span class="title function_">use</span>(<span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第一1&#x27;</span>);</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">next</span>(); <span class="comment">// 调用下一个middleware</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第一2&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第二1&#x27;</span>);</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">next</span>(); <span class="comment">// 调用下一个middleware</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第二2&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第三1&#x27;</span>);</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第三2&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">输出顺序：</span><br><span class="line">第一<span class="number">1</span></span><br><span class="line">第二<span class="number">1</span></span><br><span class="line">第三<span class="number">1</span></span><br><span class="line">第三<span class="number">2</span></span><br><span class="line">第二<span class="number">2</span></span><br><span class="line">第一<span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> koa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongoose，findOne查询使用变量做字段名</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/mongoose%EF%BC%8CfindOne%E6%9F%A5%E8%AF%A2%E4%BD%BF%E7%94%A8%E5%8F%98%E9%87%8F%E5%81%9A%E5%AD%97%E6%AE%B5%E5%90%8D/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/mongoose%EF%BC%8CfindOne%E6%9F%A5%E8%AF%A2%E4%BD%BF%E7%94%A8%E5%8F%98%E9%87%8F%E5%81%9A%E5%AD%97%E6%AE%B5%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><ol><li>使用新建对象<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">validateCustom</span> = <span class="keyword">async</span> (<span class="params">type, val</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> obj = &#123;&#125;;</span><br><span class="line">  obj[type] = val;</span><br><span class="line">  <span class="keyword">const</span> validate = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(obj);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 同上</span></span><br><span class="line">  <span class="comment">// const validate = await User.findOne(&#123; [type]: val &#125;);</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (validate) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>使用where<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">validateCustom</span> = <span class="keyword">async</span> (<span class="params">type, val</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> validate = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">find</span>().<span class="title function_">where</span>(type, val);</span><br><span class="line">  <span class="keyword">if</span> (validate.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongoose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云点播上传视频入门</title>
      <link href="/2023/11/11/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0/%E8%85%BE%E8%AE%AF%E4%BA%91%E7%82%B9%E6%92%AD%E4%B8%8A%E4%BC%A0%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8/"/>
      <url>/2023/11/11/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0/%E8%85%BE%E8%AE%AF%E4%BA%91%E7%82%B9%E6%92%AD%E4%B8%8A%E4%BC%A0%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>## 前端- 前端使用的`vue3`- 需要安装 `vod-js-sdk-v6`<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TcVod</span> <span class="keyword">from</span> <span class="string">&quot;vod-js-sdk-v6&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">inputChange</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> tcVod = <span class="keyword">new</span> <span class="title class_">TcVod</span>(&#123;</span><br><span class="line">    <span class="attr">getSignature</span>: getSignature, <span class="comment">// 获取上传签名的函数</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> vUploader = tcVod.<span class="title function_">upload</span>(&#123;</span><br><span class="line">    <span class="comment">// 腾讯云-初始化上传功能</span></span><br><span class="line">    <span class="attr">mediaFile</span>: e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>],</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  vUploader.<span class="title function_">done</span>().<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 上传完成回调</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取签名  这里的签名请求是由后端提供的，只需要拿到后端给的签名请求即可</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getVodSignature</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="string">&quot;http://localhost:3000/api/video/getvod&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">fetch</span>(url)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> data);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//必须以函数的形式返回  sdk参数限制</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getSignature</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">getVodSignature</span>();</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;inputChange&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="后端-返回签名"><a href="#后端-返回签名" class="headerlink" title="后端 返回签名"></a>后端 返回签名</h2><ul><li>使用<code>nodejs express</code>框架</li><li><code>querystring</code>和<code>crypto</code>是<code>node</code>自带的模块，无需安装<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> querystring = <span class="built_in">require</span>(<span class="string">&quot;querystring&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&quot;crypto&quot;</span>);</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">getvod</span> = <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 腾讯云生成签名文档 https://cloud.tencent.com/document/product/266/10638</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> querystring = <span class="built_in">require</span>(<span class="string">&quot;querystring&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line">    <span class="comment">// 确定 app 的云 API 密钥</span></span><br><span class="line">    <span class="keyword">const</span> secret_id = <span class="string">&quot;这里填secret_id&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> secret_key = <span class="string">&quot;这里填secret_key&quot;</span>;</span><br><span class="line">    <span class="comment">// 确定签名的当前时间和失效时间</span></span><br><span class="line">    <span class="keyword">const</span> current = <span class="built_in">parseInt</span>((<span class="keyword">new</span> <span class="title class_">Date</span>()).<span class="title function_">getTime</span>() / <span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">const</span> expired = current + <span class="number">86400</span>;  <span class="comment">// 签名有效期：1天</span></span><br><span class="line">    <span class="comment">// 向参数列表填入参数</span></span><br><span class="line">    <span class="keyword">const</span> arg_list = &#123;</span><br><span class="line">        <span class="attr">secretId</span>: secret_id,</span><br><span class="line">        <span class="attr">currentTimeStamp</span>: current,</span><br><span class="line">        <span class="attr">expireTime</span>: expired,</span><br><span class="line">        <span class="attr">random</span>: <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, <span class="number">32</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 计算签名</span></span><br><span class="line">    <span class="keyword">const</span> orignal = querystring.<span class="title function_">stringify</span>(arg_list);</span><br><span class="line">    <span class="keyword">const</span> orignal_buffer = <span class="keyword">new</span> <span class="title class_">Buffer</span>(orignal, <span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> hmac = crypto.<span class="title function_">createHmac</span>(<span class="string">&quot;sha1&quot;</span>, secret_key);</span><br><span class="line">    <span class="keyword">const</span> hmac_buffer = hmac.<span class="title function_">update</span>(orignal_buffer).<span class="title function_">digest</span>();</span><br><span class="line">    <span class="keyword">const</span> signature = <span class="title class_">Buffer</span>.<span class="title function_">concat</span>([hmac_buffer, orignal_buffer]).<span class="title function_">toString</span>(<span class="string">&quot;base64&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(signature);</span><br><span class="line">    res.<span class="title function_">json</span>(signature)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="点击上传"><a href="#点击上传" class="headerlink" title="点击上传"></a>点击上传</h2><ul><li>没有报错就是上传成功</li><li>在<a href="https://console.cloud.tencent.com/vod/media">腾讯云点播控制台查看上传的视频</a><br><img src="https://img-blog.csdnimg.cn/2d9056e36798484a89d26563e23c2f9a.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> 第三方平台 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>nodejs入门</title>
      <link href="/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E5%85%A5%E9%97%A8/"/>
      <url>/2023/11/11/%E5%90%8E%E7%AB%AF/nodejs/nodejs%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>web 服务 如何处理一个请求</p></blockquote><h2 id="url–-网络–-dns-解析–-目标服务器"><a href="#url–-网络–-dns-解析–-目标服务器" class="headerlink" title="url–&gt;网络–&gt;dns 解析–&gt;目标服务器"></a>url–&gt;网络–&gt;dns 解析–&gt;目标服务器</h2><ol><li>如何响应这个请求 –&gt; 路由&#x2F;&#x2F;规则</li></ol><h2 id="Express"><a href="#Express" class="headerlink" title="Express"></a>Express</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);  </span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();  </span><br><span class="line"><span class="comment">//app --&gt; application --&gt; web服务的实例  </span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;  </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务器启动成功&quot;</span>);  </span><br><span class="line">&#125;);  </span><br></pre></td></tr></table></figure><h2 id="请求的方法来区分"><a href="#请求的方法来区分" class="headerlink" title="请求的方法来区分"></a>请求的方法来区分</h2><ol><li>get  </li><li>post  </li><li>put  </li><li>delete  </li><li>…</li></ol><h2 id="通过-uri-–-路径"><a href="#通过-uri-–-路径" class="headerlink" title="通过 uri –&gt; 路径"></a>通过 uri –&gt; 路径</h2><p><code>/user/getList</code>  </p><h3 id="需要定义一个-api-路由，需要满足客户端，无论什么请求方式，请求方法或-uri-都可以得到响应"><a href="#需要定义一个-api-路由，需要满足客户端，无论什么请求方式，请求方法或-uri-都可以得到响应" class="headerlink" title="需要定义一个 api&#x2F;路由，需要满足客户端，无论什么请求方式，请求方法或 uri 都可以得到响应"></a>需要定义一个 api&#x2F;路由，需要满足客户端，无论什么请求方式，请求方法或 uri 都可以得到响应</h3><ol><li>使用 app.all</li></ol><ul><li>任何请求方法都响应</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/demo&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;  </span><br><span class="line">  res.<span class="title function_">json</span>(&#123;  </span><br><span class="line">    <span class="attr">msg</span>: <span class="string">&quot;任何请求方法都响应&quot;</span>,  </span><br><span class="line">    <span class="attr">method</span>: req.<span class="property">method</span>,  </span><br><span class="line">  &#125;);  </span><br><span class="line">&#125;);  </span><br></pre></td></tr></table></figure><ul><li>任何请求方法及任何 uri 都响应</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用通配符  </span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;  </span><br><span class="line">  res.<span class="title function_">json</span>(&#123;    <span class="attr">msg</span>: <span class="string">&quot;任何请求方法及任何uri都响应&quot;</span>,  </span><br><span class="line">    <span class="attr">method</span>: req.<span class="property">method</span>,    <span class="attr">uri</span>: req.<span class="property">path</span>,  &#125;);&#125;);  </span><br></pre></td></tr></table></figure><ol start="2"><li>使用中间件，无论客户端使用任何 uri，服务端都可以响应 （日志）</li></ol><ul><li>使用中间件拦截请求–任何请求方法都响应</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/middleware&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;  </span><br><span class="line">  res.<span class="title function_">json</span>(&#123;  </span><br><span class="line">    <span class="attr">msg</span>: <span class="string">&quot;使用中间件拦截请求--任何请求方法都响应&quot;</span>,  </span><br><span class="line">    <span class="attr">method</span>: req.<span class="property">method</span>,  </span><br><span class="line">    <span class="attr">path</span>: req.<span class="property">path</span>,  </span><br><span class="line">  &#125;);  </span><br><span class="line">&#125;);  </span><br></pre></td></tr></table></figure><ul><li>使用中间件拦截请求–任何请求方法及任何 uri 都响应</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;  </span><br><span class="line">  res.<span class="title function_">json</span>(&#123;  </span><br><span class="line">    <span class="attr">msg</span>: <span class="string">&quot;使用中间件拦截请求--任何请求方法及任何uri都响应&quot;</span>,  </span><br><span class="line">    <span class="attr">method</span>: req.<span class="property">method</span>,  </span><br><span class="line">    <span class="attr">path</span>: req.<span class="property">path</span>,  </span><br><span class="line">  &#125;);  </span><br><span class="line">&#125;);  </span><br></pre></td></tr></table></figure><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><h3 id="路由拆分"><a href="#路由拆分" class="headerlink" title="路由拆分"></a>路由拆分</h3><ol><li>user  </li><li>login  </li><li>register</li></ol><h3 id="express-Router"><a href="#express-Router" class="headerlink" title="express.Router"></a>express.Router</h3><ol><li><p>创建 routes 目录，存放路由文件  </p><ul><li><p>路由文件 如<strong>user</strong>  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);   </span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();   </span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/user&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;     </span><br><span class="line">    res.<span class="title function_">json</span>(&#123;       </span><br><span class="line">        <span class="attr">id</span>: <span class="number">123</span>,       </span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,  </span><br><span class="line">&#125;);   </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>app.js 使用  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);   </span><br><span class="line"><span class="keyword">const</span> userRouter = <span class="built_in">require</span>(<span class="string">&quot;./routes/user&quot;</span>);   </span><br><span class="line">app.<span class="title function_">use</span>(userRouter);  </span><br><span class="line"><span class="comment">//路由前缀命名空间  </span></span><br><span class="line"><span class="comment">// app.use(&#x27;/&#x27;,userRouter);  </span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;     </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务器启动成功&quot;</span>);  </span><br><span class="line">&#125;);  </span><br></pre></td></tr></table></figure></li></ol><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><h3 id="是一个函数"><a href="#是一个函数" class="headerlink" title="是一个函数"></a>是一个函数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// err, req, res, next--&gt;function  </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">demo_middleware</span>(<span class="params">err, req, res, next</span>) &#123;  </span><br><span class="line">  <span class="comment">// 1. 异常处理  </span></span><br><span class="line">  <span class="comment">// 2. 处理业务功能，然后转交控制权--next  </span></span><br><span class="line">  <span class="comment">// 3. 响应请求--结束响应--&gt;当作路由的处理函数  </span></span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><ol><li><p>app 级别  </p><ul><li>app 注册时，在最上层  </li><li>app.use(middleware) app 级别中间件，处理任何请求</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//下面两个几乎相等  </span><br><span class="line">// app.all(&quot;\*&quot;, valid_name_middleware);  </span><br><span class="line">app.use(valid_name_middleware);   </span><br></pre></td></tr></table></figure><ul><li>express 内置中间件  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//express.static() 第一个参数为和 package.json 同级的一个目录。第二个为配置参数  </span></span><br><span class="line"><span class="comment">//浏览器输入 localhost:3000/index.html 会显示 static 目录下 index.html 页面  </span></span><br><span class="line"><span class="comment">//在配置参数配置 extensions: [&quot;html&quot;, &quot;htm&quot;], 就可以不写后面的,html。否则会去匹配路由  </span></span><br><span class="line">app.<span class="title function_">use</span>(  </span><br><span class="line">  express.<span class="title function_">static</span>(<span class="string">&quot;static&quot;</span>, &#123;       </span><br><span class="line">      <span class="comment">// extensions: [&quot;html&quot;, &quot;htm&quot;],     </span></span><br><span class="line">  &#125;)   </span><br><span class="line">);  </span><br></pre></td></tr></table></figure></li></ul></li><li><p>router 级别  </p><ul><li><p>在 app 使用  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/user&quot;</span>, userRouter);  </span><br></pre></td></tr></table></figure></li><li><p>路由中间件  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);   </span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>(); <span class="comment">//路由对象，类似子app  </span></span><br><span class="line">router.<span class="title function_">use</span>(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;     </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;user 路由中间件&quot;</span>);  </span><br><span class="line"><span class="title function_">next</span>();   </span><br><span class="line">&#125;);   </span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/demo&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;     </span><br><span class="line">    res.<span class="title function_">json</span>(&#123;       </span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;user 路由&quot;</span>,  </span><br><span class="line">&#125;);   </span><br><span class="line">&#125;);   </span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;  </span><br></pre></td></tr></table></figure></li></ul></li><li><p>异常处理  </p><ul><li><p>app 级别异常处理  </p></li><li><p>路由级别异常处理，每个路由使用不同的异常处理</p></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack.config.js基本使用</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/webpack/webapck.config.js%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/webpack/webapck.config.js%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&quot;html-webpack-plugin&quot;</span>);</span><br><span class="line"><span class="comment">// const &#123; CleanWebpackPlugin &#125; = require(&quot;clean-webpack-plugin&quot;);</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">mode</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;development&quot;</span> ? <span class="string">&quot;development&quot;</span> : <span class="string">&quot;production&quot;</span>,</span><br><span class="line">  <span class="comment">// 入口文件</span></span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&quot;./src/index.ts&quot;</span>,</span><br><span class="line">  <span class="comment">// 输出到某个文件</span></span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&quot;main.js&quot;</span>,</span><br><span class="line">    <span class="attr">clean</span>: <span class="literal">true</span>, <span class="comment">// 输出之前清理文件，开启这个就可以不用 clean-webpack-plugin</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="comment">// 自动解析文件拓展。引入js文件时，无需再加上文件后缀</span></span><br><span class="line">    <span class="attr">extensions</span>: [<span class="string">&quot;.js&quot;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="comment">// 匹配文件名，使用loader</span></span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.tsx?$/</span>,</span><br><span class="line">        <span class="attr">use</span>: <span class="string">&quot;ts-loader&quot;</span>,</span><br><span class="line">        <span class="comment">// 排除某些文件夹下对应的文件</span></span><br><span class="line">        <span class="attr">exclude</span>: <span class="regexp">/node_module/</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 开发环境启用source-map，用于定位文件代码</span></span><br><span class="line">  <span class="attr">devtool</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;development&quot;</span> ? <span class="string">&quot;inline-source-map&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="comment">// 基于哪个目录运行代码</span></span><br><span class="line">    <span class="comment">// contentBase: &quot;./dist&quot;,</span></span><br><span class="line">    <span class="comment">// 启用压缩</span></span><br><span class="line">    <span class="attr">compress</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">// host</span></span><br><span class="line">    <span class="attr">host</span>: <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">    <span class="comment">//端口</span></span><br><span class="line">    <span class="attr">port</span>: <span class="number">8089</span>,</span><br><span class="line">    <span class="comment">// 监测html文件</span></span><br><span class="line">    <span class="attr">watchFiles</span>: [<span class="string">&quot;./src/index.html&quot;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// new CleanWebpackPlugin(&#123; cleanOnceBeforeBuildPatterns: [&quot;./dist&quot;] &#125;),</span></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123; <span class="attr">template</span>: <span class="string">&quot;./src/index.html&quot;</span> &#125;),</span><br><span class="line">  ],</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 控制台显示哪些信息</span></span><br><span class="line">  <span class="attr">stats</span>: <span class="string">&quot;errors-only&quot;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;typescript-lison&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cross-env NODE_ENV=development webpack-dev-server --config ./build/webpack.config.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cross-env NODE_ENV=production webpack --config ./build/webpack.config.js&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;cross-env&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eslint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.25.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ts-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^9.4.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;typescript&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.8.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.74.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.10.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-dev-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.11.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;clean-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;html-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.5.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hook基础用法</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/hook%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/hook%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="鼠标追踪"><a href="#鼠标追踪" class="headerlink" title="鼠标追踪"></a>鼠标追踪</h2><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// mouse.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref, onMounted, onUnmounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 按照惯例，组合式函数名以“use”开头</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">useMouse</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 被组合式函数封装和管理的状态</span></span><br><span class="line">  <span class="keyword">const</span> x = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line">  <span class="keyword">const</span> y = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 组合式函数可以随时更改其状态。</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">update</span>(<span class="params">event</span>) &#123;</span><br><span class="line">    x.<span class="property">value</span> = event.<span class="property">pageX</span></span><br><span class="line">    y.<span class="property">value</span> = event.<span class="property">pageY</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 一个组合式函数也可以挂靠在所属组件的生命周期上</span></span><br><span class="line">  <span class="comment">// 来启动和卸载副作用</span></span><br><span class="line">  <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, update))</span><br><span class="line">  <span class="title function_">onUnmounted</span>(<span class="function">() =&gt;</span> <span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, update))</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通过返回值暴露所管理的状态</span></span><br><span class="line">  <span class="keyword">return</span> &#123; x, y &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="vue文件使用"><a href="#vue文件使用" class="headerlink" title="vue文件使用"></a>vue文件使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; useMouse &#125; <span class="keyword">from</span> <span class="string">&#x27;./mouse.js&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> &#123; x, y &#125; = <span class="title function_">useMouse</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span>Mouse position is at: &#123;&#123; x &#125;&#125;, &#123;&#123; y &#125;&#125;<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义指令</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="函数形式"><a href="#函数形式" class="headerlink" title="函数形式"></a>函数形式</h2><ol><li>指令函数触发时机：<ol><li>指令与元素成功绑定时（一开始）</li><li>指令所在的模板被重新解析时（绑定的值变化时）</li></ol></li></ol><h2 id="全局指令"><a href="#全局指令" class="headerlink" title="全局指令"></a>全局指令</h2><ul><li>使用：<code>v-has:键=&quot;&#39;值&#39;&quot;</code> -&gt; <code>v-has:add=&quot;&#39;user-create&#39;&quot;</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义指令</span></span><br><span class="line">app.<span class="title function_">directive</span>(<span class="string">&quot;has&quot;</span>, &#123;</span><br><span class="line">    <span class="comment">// 第一个是dom元素，第二个是包含指令键值的对象。arg是键（参数）类似v-on:click=&quot;function&quot; 的click，value是值 类似v-on:click=&quot;function&quot; 的function</span></span><br><span class="line">    <span class="comment">// v-has:键=&quot;&#x27;值&#x27;&quot;。 值如果传字符串必须再包一层单引号，否则就是一个变量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// beforeMount。如果是 beforeMount 就无法操作dom（增删改），因为dom还在内存中，还没渲染到页面上</span></span><br><span class="line">    <span class="attr">mounted</span>: <span class="keyword">function</span> (<span class="params">el, binding</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(el, binding);</span><br><span class="line">        <span class="comment">// 获取按钮权限</span></span><br><span class="line">        <span class="keyword">const</span> actionList = storage.<span class="title function_">getItem</span>(<span class="string">&quot;actionList&quot;</span>);</span><br><span class="line">        <span class="keyword">const</span> value = binding.<span class="property">value</span>;</span><br><span class="line">        <span class="comment">// 查找权限列表中是否有对应的权限标识</span></span><br><span class="line">        <span class="keyword">const</span> hasPermission = actionList.<span class="title function_">includes</span>(value);</span><br><span class="line">        <span class="keyword">if</span> (!hasPermission) &#123;</span><br><span class="line">            <span class="comment">// 隐藏按钮</span></span><br><span class="line">            el.<span class="property">style</span> = <span class="string">&quot;display:none&quot;</span>;</span><br><span class="line">            <span class="comment">// 删除按钮dom</span></span><br><span class="line">            el.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(el);</span><br><span class="line">            <span class="comment">// setTimeout(() =&gt; el.parentNode.removeChild(el), 0) // 使用beforeMount时 ，使用宏任务形式，不是很了解，以后再看看</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="组件指令"><a href="#组件指令" class="headerlink" title="组件指令"></a>组件指令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;input v-focus /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">    const directives = &#123;</span><br><span class="line">        focus:&#123;</span><br><span class="line">            mounted(el)&#123;</span><br><span class="line">                el.focus();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    export default &#123;</span><br><span class="line">        directives</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="全局指令-1"><a href="#全局指令-1" class="headerlink" title="全局指令"></a>全局指令</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里等于下面的</span></span><br><span class="line"><span class="comment">// app.directive(&#x27;focus&#x27;,(el,binding)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//  el.focus();</span></span><br><span class="line"><span class="comment">//&#125;)</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">directive</span>(<span class="string">&#x27;focus,&#x27;</span>&#123;</span><br><span class="line">    <span class="title function_">mounted</span>(<span class="params">el,binding</span>)&#123;</span><br><span class="line">    el.<span class="title function_">focus</span>();</span><br><span class="line">&#125;,</span><br><span class="line">    <span class="title function_">updated</span>(<span class="params">el,binding</span>)&#123;</span><br><span class="line">    el.<span class="title function_">focus</span>();</span><br><span class="line">&#125;</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><h2 id="指令传值（value）"><a href="#指令传值（value）" class="headerlink" title="指令传值（value）"></a>指令传值（value）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;input v-top=&quot;100&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">    const directives = &#123;</span><br><span class="line">        top:&#123;</span><br><span class="line">            // 第一个参数为dom，第二个为参数</span><br><span class="line">            mounted(el,binding)&#123;</span><br><span class="line">               el.style.top = (binding.value + &#x27;px&#x27;)</span><br><span class="line">            &#125;,</span><br><span class="line">            updated(el,binding)&#123;</span><br><span class="line">               el.style.top = (binding.value + &#x27;px&#x27;)</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    export default &#123;</span><br><span class="line">        directives</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="指令参数（arg）"><a href="#指令参数（arg）" class="headerlink" title="指令参数（arg）"></a>指令参数（arg）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;input v-pos:top=&quot;100&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">    const directives = &#123;</span><br><span class="line">        top:&#123;</span><br><span class="line">            // 第一个参数为dom，第二个为参数</span><br><span class="line">            // binding： value 值，arg 参数</span><br><span class="line">            mounted(el,binding)&#123;</span><br><span class="line">               el.style[binding.arg] = (binding.value + &#x27;px&#x27;)</span><br><span class="line">            &#125;,</span><br><span class="line">            updated(el,binding)&#123;</span><br><span class="line">               el.style[binding.arg] = (binding.value + &#x27;px&#x27;)</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    export default &#123;</span><br><span class="line">        directives</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异步组件 Suspense</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<ol><li>不使用异步组件，页面展示：父组件会等子组件加载完成一起显示。</li><li>使用异步组件，页面展示：页面会先加载父组件，再加载子组件。</li><li>父组件使用 <code>defineAsyncComponent</code> 导入组件时，且子组件<code>setup</code> 不返回<code>promise</code>实例时，父组件使用子组件时，不需要使用<code>Suspense</code>标签包裹，</li><li>子组件<code>setup</code>返回promise实例时，父组件需要使用<code>Suspense</code>标签包裹，子组件展示会等待<code>promise</code>响应结束时再显示</li></ol><h2 id="父组件"><a href="#父组件" class="headerlink" title="父组件"></a>父组件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    &lt;Test msg=&quot;666&quot; @onSayHello=&quot;onSayHello&quot;&gt;&lt;/Test&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Suspense</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Test</span>&gt;</span><span class="tag">&lt;/<span class="name">Test</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:fallback</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>loading...<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Suspense</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// import Test from &#x27;./components/test.vue&#x27; //普通组件</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;defineAsyncComponent&#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title class_">Test</span> = <span class="title function_">defineAsyncComponent</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;./components/test.vue&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">msg</span>: <span class="string">&#x27;hello vue3&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">onSayHello</span>(<span class="params">info</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello&#x27;</span>, info)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Test</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="子组件"><a href="#子组件" class="headerlink" title="子组件"></a>子组件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">resolve</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">msg</span>: <span class="string">&quot;suspense组件&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">      &#125;, <span class="number">3000</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite.config.ts详细配置</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/vite/vite.config.ts%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/vite/vite.config.ts%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="base打包"><a href="#base打包" class="headerlink" title="base打包"></a>base打包</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">base</span>: <span class="string">&quot;./&quot;</span>,</span><br><span class="line">  <span class="comment">// 配置相对路径，打包后的文件，会是相对路径（生产环境），以免部署到服务器。找不到文件时，会报错。</span></span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="别名设置"><a href="#别名设置" class="headerlink" title="别名设置"></a>别名设置</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; resolve &#125; <span class="keyword">from</span> <span class="string">&quot;path&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">base</span>: <span class="string">&quot;./&quot;</span>,</span><br><span class="line">  <span class="comment">// 配置相对路径，打包后的文件，会是相对路径（生产环境），以免部署到服务器。找不到文件时，会报错。</span></span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="comment">// __dirname 有报什么找不到。</span></span><br><span class="line">      <span class="comment">// 安装 npm install --dev @types/node</span></span><br><span class="line">      <span class="attr">testCom</span>: <span class="title function_">resolve</span>(__dirname, <span class="string">&quot;src/components/test/&quot;</span>), <span class="comment">//组件别名</span></span><br><span class="line">      <span class="string">&quot;/testImg&quot;</span>: <span class="string">&quot;/src/assets/&quot;</span>, <span class="comment">//静态文件别名</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">app.vue---------------</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import HelloWorld from &quot;./components/HelloWorld.vue&quot;;</span><br><span class="line">import testCom from &quot;testCom/index.vue&quot;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;testCom /&gt;</span><br><span class="line">  &lt;HelloWorld msg=&quot;HelloWorld&quot; /&gt;</span><br><span class="line">  &lt;img src=&quot;/testImg/logo.png&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="清除build项目的console-log"><a href="#清除build项目的console-log" class="headerlink" title="清除build项目的console.log"></a>清除build项目的console.log</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; resolve &#125; <span class="keyword">from</span> <span class="string">&quot;path&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">base</span>: <span class="string">&quot;./&quot;</span>,</span><br><span class="line">  <span class="comment">// 配置相对路径，打包后的文件，会是相对路径（生产环境），以免部署到服务器。找不到文件时，会报错。</span></span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="comment">// __dirname 有报什么找不到。</span></span><br><span class="line">      <span class="comment">// 安装 npm install --dev @types/node</span></span><br><span class="line">      <span class="attr">testCom</span>: <span class="title function_">resolve</span>(__dirname, <span class="string">&quot;src/components/test/&quot;</span>), <span class="comment">//组件别名</span></span><br><span class="line">      <span class="string">&quot;/testImg&quot;</span>: <span class="string">&quot;/src/assets/&quot;</span>, <span class="comment">//静态文件别名</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">build</span>: &#123;</span><br><span class="line">    <span class="attr">minify</span>: <span class="string">&quot;terser&quot;</span>,</span><br><span class="line">    <span class="comment">// 清除build项目的console.log</span></span><br><span class="line">    <span class="attr">terserOptions</span>: &#123;</span><br><span class="line">      <span class="attr">compress</span>: &#123;</span><br><span class="line">        <span class="attr">drop_console</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">drop_debugger</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="rollup打包-指定dist里输出的文件夹"><a href="#rollup打包-指定dist里输出的文件夹" class="headerlink" title="rollup打包 指定dist里输出的文件夹"></a>rollup打包 指定dist里输出的文件夹</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; resolve &#125; <span class="keyword">from</span> <span class="string">&quot;path&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">base</span>: <span class="string">&quot;./&quot;</span>,</span><br><span class="line">  <span class="comment">// 配置相对路径，打包后的文件，会是相对路径（生产环境），以免部署到服务器。找不到文件时，会报错。</span></span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="comment">// __dirname 有报什么找不到。</span></span><br><span class="line">      <span class="comment">// 安装 npm install --dev @types/node</span></span><br><span class="line">      <span class="attr">testCom</span>: <span class="title function_">resolve</span>(__dirname, <span class="string">&quot;src/components/test/&quot;</span>), <span class="comment">//组件别名</span></span><br><span class="line">      <span class="string">&quot;/testImg&quot;</span>: <span class="string">&quot;/src/assets/&quot;</span>, <span class="comment">//静态文件别名</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">build</span>: &#123;</span><br><span class="line">    <span class="attr">minify</span>: <span class="string">&quot;terser&quot;</span>,</span><br><span class="line">    <span class="comment">// 清除build项目的console.log</span></span><br><span class="line">    <span class="attr">terserOptions</span>: &#123;</span><br><span class="line">      <span class="attr">compress</span>: &#123;</span><br><span class="line">        <span class="attr">drop_console</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">drop_debugger</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">rollupOptions</span>: &#123;</span><br><span class="line">      <span class="comment">//rollup打包 指定dist里输出的文件夹</span></span><br><span class="line">      <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">chunkFileNames</span>: <span class="string">&quot;js/[name]-[hash].js&quot;</span>,</span><br><span class="line">        <span class="attr">entryFileNames</span>: <span class="string">&quot;js/[name]-[hash].js&quot;</span>,</span><br><span class="line">        <span class="attr">assetFileNames</span>: <span class="string">&quot;[ext]/[name]-[hash].[ext]&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="element-plus"><a href="#element-plus" class="headerlink" title="element-plus"></a>element-plus</h2><h3 id="element-plus完整引入"><a href="#element-plus完整引入" class="headerlink" title="element-plus完整引入"></a>element-plus完整引入</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus --save</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-plus/dist/index.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>)</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="element-plus-按需引入"><a href="#element-plus-按需引入" class="headerlink" title="element-plus 按需引入"></a>element-plus 按需引入</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus --save</span><br><span class="line">npm install -D unplugin-vue-components unplugin-auto-<span class="keyword">import</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.ts</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AutoImport</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-auto-import/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElementPlusResolver</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/resolvers&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AutoImport</span> = <span class="built_in">require</span>(<span class="string">&#x27;unplugin-auto-import/webpack&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Components</span> = <span class="built_in">require</span>(<span class="string">&#x27;unplugin-vue-components/webpack&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">ElementPlusResolver</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;unplugin-vue-components/resolvers&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vite-mock"><a href="#vite-mock" class="headerlink" title="vite-mock"></a>vite-mock</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i vite-plugin-mock mockjs -D</span><br><span class="line"><span class="comment">//vite-plugin-mock 网站 https://github.com/vbenjs/vite-plugin-mock</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.ts</span></span><br><span class="line"><span class="comment">//mockjs</span></span><br><span class="line"><span class="keyword">import</span> &#123; viteMockServe &#125; <span class="keyword">from</span> <span class="string">&quot;vite-plugin-mock&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">viteMockServe</span>(&#123;</span><br><span class="line">      <span class="attr">mockPath</span>: <span class="string">&quot;mock&quot;</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="proxy开发代理"><a href="#proxy开发代理" class="headerlink" title="proxy开发代理"></a>proxy开发代理</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="comment">// alias: [</span></span><br><span class="line">    <span class="comment">//     &#123; find: &#x27;@&#x27;, replacement: resolve(__dirname, &#x27;src&#x27;) &#125;</span></span><br><span class="line">    <span class="comment">// ],</span></span><br><span class="line">    <span class="attr">alias</span>:&#123;</span><br><span class="line">      <span class="string">&quot;@&quot;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./src&quot;</span>),</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">   <span class="attr">server</span>: &#123;</span><br><span class="line">     <span class="attr">open</span>: <span class="literal">false</span>,</span><br><span class="line">     <span class="attr">host</span>:<span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">     <span class="attr">port</span>:<span class="number">8080</span>,</span><br><span class="line">     <span class="attr">proxy</span>:&#123;</span><br><span class="line">       <span class="string">&quot;/api&quot;</span>:&#123;</span><br><span class="line">         <span class="attr">target</span>:<span class="string">&quot;http://localhost:3000&quot;</span></span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="env环境变量"><a href="#env环境变量" class="headerlink" title="env环境变量"></a>env环境变量</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//package.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite-learn&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite --mode dev&quot;</span><span class="punctuation">,</span> <span class="comment">//--mode 指定谁，就加载哪个env文件</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue-tsc --noEmit &amp;&amp; vite build&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;preview&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite preview&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//.env.dev</span><br><span class="line">VITE_BASE_API = http://dev.com</span><br><span class="line"></span><br><span class="line">//.env.prod</span><br><span class="line">VITE_BASE_API = http://prod.com</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_BASE_API</span>);</span><br></pre></td></tr></table></figure><h2 id="gzip压缩"><a href="#gzip压缩" class="headerlink" title="gzip压缩"></a>gzip压缩</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vite-plugin-compression -D</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.ts</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//gzip</span></span><br><span class="line"><span class="keyword">import</span> viteCompression <span class="keyword">from</span> <span class="string">&quot;vite-plugin-compression&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">viteCompression</span>(),</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vite-plugin-imagemin -D</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> viteImagemin <span class="keyword">from</span> <span class="string">&#x27;vite-plugin-imagemin&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">      <span class="title function_">viteImagemin</span>(&#123;</span><br><span class="line">        <span class="attr">gifsicle</span>: &#123;</span><br><span class="line">          <span class="attr">optimizationLevel</span>: <span class="number">7</span>,</span><br><span class="line">          <span class="attr">interlaced</span>: <span class="literal">false</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">optipng</span>: &#123;</span><br><span class="line">          <span class="attr">optimizationLevel</span>: <span class="number">7</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">mozjpeg</span>: &#123;</span><br><span class="line">          <span class="attr">quality</span>: <span class="number">20</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">pngquant</span>: &#123;</span><br><span class="line">          <span class="attr">quality</span>: [<span class="number">0.8</span>, <span class="number">0.9</span>],</span><br><span class="line">          <span class="attr">speed</span>: <span class="number">4</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">svgo</span>: &#123;</span><br><span class="line">          <span class="attr">plugins</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">name</span>: <span class="string">&#x27;removeViewBox&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">name</span>: <span class="string">&#x27;removeEmptyAttrs&#x27;</span>,</span><br><span class="line">              <span class="attr">active</span>: <span class="literal">false</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">    ],</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite.config.ts部分配置</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/vite/vite.config.ts%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/vite/vite.config.ts%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>; <span class="comment">// 使用 defineConfig 工具函数获取类型提示：</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; viteMockServe &#125; <span class="keyword">from</span> <span class="string">&quot;vite-plugin-mock&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">    <span class="attr">base</span>: <span class="string">&quot;/foo/&quot;</span>, <span class="comment">// 开发或生产环境服务的公共基础路径</span></span><br><span class="line">    <span class="attr">optimizeDeps</span>: &#123;</span><br><span class="line">        <span class="attr">force</span>: <span class="literal">true</span>, <span class="comment">// 强制进行依赖预构建</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">css</span>: &#123;</span><br><span class="line">        <span class="attr">preprocessorOptions</span>: &#123;</span><br><span class="line">            <span class="attr">scss</span>: &#123;</span><br><span class="line">                <span class="attr">additionalData</span>: <span class="string">`@import &#x27;/src/assets/styles/variables.scss&#x27;;`</span>, <span class="comment">// 引入全局变量文件</span></span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">postcss</span>: &#123;</span><br><span class="line">            <span class="attr">plugins</span>: [</span><br><span class="line">                <span class="comment">// viewport 布局适配</span></span><br><span class="line">                <span class="title function_">postcssPxToViewport</span>(&#123;</span><br><span class="line">                    <span class="attr">viewportWidth</span>: <span class="number">375</span>,</span><br><span class="line">                &#125;),</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">resolve</span>: &#123;</span><br><span class="line">        <span class="attr">alias</span>: &#123;</span><br><span class="line">            <span class="string">&quot;@&quot;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./src&quot;</span>), <span class="comment">// 路径别名</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">extensions</span>: [<span class="string">&quot;.js&quot;</span>, <span class="string">&quot;.ts&quot;</span>, <span class="string">&quot;.json&quot;</span>], <span class="comment">// 导入时想要省略的扩展名列表</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">server</span>: &#123;</span><br><span class="line">        <span class="attr">host</span>: <span class="literal">true</span>, <span class="comment">// 监听所有地址</span></span><br><span class="line">        <span class="attr">proxy</span>: &#123;</span><br><span class="line">            <span class="comment">// 字符串简写写法</span></span><br><span class="line">            <span class="string">&quot;/foo&quot;</span>: <span class="string">&quot;http://localhost:4567&quot;</span>,</span><br><span class="line">            <span class="comment">// 选项写法</span></span><br><span class="line">            <span class="string">&quot;/api&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&quot;http://jsonplaceholder.typicode.com&quot;</span>,</span><br><span class="line">                <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 正则表达式写法</span></span><br><span class="line">            <span class="string">&quot;^/fallback/.*&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&quot;http://jsonplaceholder.typicode.com&quot;</span>,</span><br><span class="line">                <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/fallback/</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 使用 proxy 实例</span></span><br><span class="line">            <span class="string">&quot;/api&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&quot;http://jsonplaceholder.typicode.com&quot;</span>,</span><br><span class="line">                <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">configure</span>: <span class="function">(<span class="params">proxy, options</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// proxy 是 &#x27;http-proxy&#x27; 的实例</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// Proxying websockets or socket.io</span></span><br><span class="line">            <span class="string">&quot;/socket.io&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&quot;ws://localhost:3000&quot;</span>,</span><br><span class="line">                <span class="attr">ws</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">build</span>: &#123;</span><br><span class="line">        <span class="attr">outDir</span>: <span class="string">&quot;build&quot;</span>, <span class="comment">// 打包文件的输出目录</span></span><br><span class="line">        <span class="attr">assetsDir</span>: <span class="string">&quot;static&quot;</span>, <span class="comment">// 静态资源的存放目录</span></span><br><span class="line">        <span class="attr">assetsInlineLimit</span>: <span class="number">4096</span>, <span class="comment">// 图片转 base64 编码的阈值</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [<span class="title function_">vue</span>(), <span class="title function_">viteMockServe</span>()],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite环境变量使用</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/vite/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/vite/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite --host --mode dev&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite build&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;serve&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite preview&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//--mode dev 代表加载package.json同级的.env.dev文件</span></span><br><span class="line"><span class="comment">//--mode prod 代表加载package.json同级的.env.prod文件</span></span><br><span class="line"><span class="comment">//可以在js中使用 console.log(import.meta.env); 获取.env文件里的数据</span></span><br></pre></td></tr></table></figure><h2 id="env文件"><a href="#env文件" class="headerlink" title="env文件"></a>env文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.env                # 所有情况下都会加载</span><br><span class="line">.env.local          # 所有情况下都会加载，但会被 git 忽略</span><br><span class="line">.env.[mode]         # 只在指定模式下加载</span><br><span class="line">.env.[mode].local   # 只在指定模式下加载，但会被 git 忽略</span><br></pre></td></tr></table></figure><h2 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h2><p>默认情况下，开发服务器 (<code>dev</code> 命令) 运行在 <code>development</code> (开发) 模式，而 <code>build</code> 命令则运行在 <code>production</code> (生产) 模式。</p><p>这意味着当执行 <code>vite build</code> 时，它会自动加载 <code>.env.production</code> 中可能存在的环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># .env.production</span><br><span class="line">VITE_APP_TITLE=My App</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pinia使用</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/vue/pinia%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/vue/pinia%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="解构"><a href="#解构" class="headerlink" title="解构"></a>解构</h3><p>使用storeToRefs，取值必须的使用 .value</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; defineComponent, ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; storeToRefs &#125; from &#x27;pinia&#x27;;</span><br><span class="line">import &#123; useUserStore &#125; from &#x27;@/stores/user.js&#x27;;</span><br><span class="line"></span><br><span class="line">const userStore = useUserStore();</span><br><span class="line">// 使用storeToRefs，取值必须的使用 .value</span><br><span class="line">const &#123; isLogin, userInfo &#125; = storeToRefs(userStore);</span><br><span class="line"></span><br><span class="line">const takein = () =&gt; &#123;</span><br><span class="line">if (!isLogin.value) &#123;</span><br><span class="line">uni.navigateTo(&#123;</span><br><span class="line">url: &#x27;/pages/login/login&#x27;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="映射state和getter"><a href="#映射state和getter" class="headerlink" title="映射state和getter"></a>映射state和getter</h3><h4 id="useCounterStore"><a href="#useCounterStore" class="headerlink" title="useCounterStore"></a>useCounterStore</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// stores/counter.js</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">defineStore</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCounterStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;counter&#x27;</span>, &#123;</span><br><span class="line"><span class="attr">state</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line"><span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 也可以这样定义</span></span><br><span class="line"><span class="comment">// state: () =&gt; (&#123; count: 0 &#125;)</span></span><br><span class="line"><span class="attr">actions</span>: &#123;</span><br><span class="line"><span class="title function_">increment</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">count</span>++;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">count</span>);</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">getters</span>: &#123;</span><br><span class="line"><span class="attr">doubleCount</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">count</span> * <span class="number">2</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">unistorage</span>: <span class="literal">true</span> <span class="comment">// 开启后对 state 的数据读写都将持久化</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="使用-script-setup"><a href="#使用-script-setup" class="headerlink" title="使用 script setup"></a>使用 script setup</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"> const store = useStore()</span><br><span class="line"></span><br><span class="line"> store.counter = 3</span><br><span class="line"> store.doubleCount // 6</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="使用defineComponent"><a href="#使用defineComponent" class="headerlink" title="使用defineComponent"></a>使用defineComponent</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; defineComponent, ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; mapState, mapGetters &#125; from &#x27;pinia&#x27;;</span><br><span class="line">import &#123; useCounterStore &#125; from &#x27;@/stores/counter&#x27;;</span><br><span class="line"></span><br><span class="line">export default defineComponent(&#123;</span><br><span class="line">computed: &#123;</span><br><span class="line">...mapState(useCounterStore, [&#x27;count&#x27;]),</span><br><span class="line">...mapGetters(useCounterStore, [&#x27;doubleCount&#x27;])</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开启gzip</title>
      <link href="/2023/11/11/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/gzip/"/>
      <url>/2023/11/11/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/gzip/</url>
      
        <content type="html"><![CDATA[<ol><li><p><code>npm i -D compression-webpack-plugin</code></p></li><li><p>修改 <em>vue.config.js</em> 配置</p></li></ol>   <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CompressionPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;compression-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line"> ...</span><br><span class="line">  <span class="attr">configureWebpack</span>: <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">plugins</span>: [</span><br><span class="line">          <span class="keyword">new</span> <span class="title class_">CompressionPlugin</span>(&#123;</span><br><span class="line">            <span class="attr">test</span>: <span class="regexp">/\.js$|\.html$|\.css$|\.jpg$|\.jpeg$|\.png/</span>, <span class="comment">// 需要压缩的文件类型</span></span><br><span class="line">            <span class="attr">threshold</span>: <span class="number">10240</span>, <span class="comment">// 归档需要进行压缩的文件大小最小值，这里是10K以上的进行压缩</span></span><br><span class="line">            <span class="attr">deleteOriginalAssets</span>: <span class="literal">false</span> <span class="comment">// 是否删除原文件</span></span><br><span class="line">          &#125;)</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>nginx启用gzip<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="comment"># 开启|关闭 gzip。</span></span><br><span class="line">    <span class="attribute">gzip</span> <span class="literal">on</span>|<span class="literal">off</span>;</span><br><span class="line">      <span class="comment"># 文件大于指定 size 才压缩，以 kb 为单位。</span></span><br><span class="line">      <span class="attribute">gzip_min_length</span> <span class="number">10</span>;</span><br><span class="line">      <span class="comment"># 压缩级别，1-9，值越大压缩比越大，但更加占用 CPU，且压缩效率越来越低。</span></span><br><span class="line">      <span class="attribute">gzip_comp_level</span> <span class="number">2</span>;</span><br><span class="line">      <span class="comment"># 压缩的文件类型。</span></span><br><span class="line">      <span class="attribute">gzip_types</span> text/plain application/javascript application/x-javascript text/css application/xml text/javascript;</span><br><span class="line">      <span class="comment"># 开启后如果能找到 .gz 文件，直接返回该文件，不会启用服务端压缩。</span></span><br><span class="line">      <span class="attribute">gzip_static</span> <span class="literal">on</span>|<span class="literal">off</span></span><br><span class="line">      <span class="comment"># 是否添加响应头 Vary: Accept-Encoding 建议开启。</span></span><br><span class="line">      gzip_vary <span class="literal">on</span>;</span><br><span class="line">      <span class="comment"># 请求压缩的缓冲区数量和大小，以 4k 为单位，32 为倍数。</span></span><br><span class="line">      <span class="attribute">gzip_buffers</span> <span class="number">32</span> <span class="number">4K</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 性能优化 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>uniapp 基础</title>
      <link href="/2023/11/11/%E5%89%8D%E7%AB%AF/uniapp/mvvm/"/>
      <url>/2023/11/11/%E5%89%8D%E7%AB%AF/uniapp/mvvm/</url>
      
        <content type="html"><![CDATA[<blockquote><p>软件就像做爱。一次犯错，你需要用余下一生来维护支持。—— Michael Sinz</p></blockquote><p>本章我们来学习 Vue 基础，认识 Vue 开发。</p><p>为什么是了解 Vue 基础呢？因为 Uniapp 设计的开发标准是：Vue的语法 + 小程序的API + 条件编译扩展平台个性化能力。了解完 Vue 基本开发原理就可使用 Uniapp 了。</p><h2 id="什么是-MVC-与-MVVM-？"><a href="#什么是-MVC-与-MVVM-？" class="headerlink" title="什么是 MVC 与 MVVM ？"></a>什么是 MVC 与 MVVM ？</h2><p>在开始之前，我们先来了解什么是 MVC 与 MVVM ？才能一步一步深入了解 Vue 框架的出现和 Vue 可以解决的问题。</p><p>MVC 的定义：MVC 是 Model-View-Controller 的简写。即模型-视图-控制器。</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/18/170ec6e02ca8e1a4~tplv-t2oaga2asx-watermark.awebp" alt="img"></p><ul><li><strong>模型</strong>（Model）指的是后端传递的数据（比如数据库记录列表）。</li><li><strong>视图</strong>（View）指的是所看到的页面，显示数据（数据记录）。</li><li><strong>控制器</strong>（Controller）是应用程序中处理用户交互的部分，处理输入（写入数据库记录）。</li></ul><p>在前端并不成熟的时期，很多业务逻辑是在后端实现的，MVC 允许在不改变视图的情况下改变视图对用户输入的响应方式，用户对视图的操作交给了 Controller 处理，在 Controller 中响应 View 的事件调用 Model 的接口对数据进行操作，一旦 Model 发生变化便通知相关视图进行更新。</p><p>这里只是简略的去说 MVC ，感兴趣的小伙伴可以去网上查一下关于这方面的知识。使用 MVC 的目的就是将 Model 和 View 的代码分离。MVC 是单向通信。也就是 View 跟 Model，必须通过 Controller 来承上启下。但是 MVC 中大量的 DOM 操作又加上视图的二次加载更新，用户看到的更新数据页面会慢一些，并且页面渲染性能降低，影响了用户体验。</p><p>为解决这样的问题，MVVM 就出现了。</p><p>在过去的10年中，我们已经把很多传统的服务端代码放到了浏览器中，这样就产生了成千上万行的 javascript 代码，它们连接了各式各样的 HTML 和 CSS 文件，但缺乏正规的组织形式，这也就是为什么越来越多的开发者使用 javascript 框架，比如：Angular、React、Vue。浏览器的兼容性问题已经不再是前端的阻碍。前端的项目越来越大，项目的可维护性和扩展性、安全性等成了主要问题。当年为了解决浏览器兼容性问题，出现了很多类库，其中最典型的就是 jQuery。但是这类库没有实现对业务和逻辑的分层，所以在后期项目越来越庞大时，维护性和扩展性并不理想。</p><p>综合上面原因，衍生出了 MVVM 模式一类框架的出现，通过数据的单向流动，维护性和扩展性得到极大的提高。Vue 就是基于 MVVM 模式实现的这样一套框架。</p><p>下面来看一下 MVVM。</p><p>MVVM 是 Model-View-ViewModel 的简写，即模型-视图-视图模型。MVVM 模式是通过以下三个核心组件组成：</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/18/170ec6e39f709d44~tplv-t2oaga2asx-watermark.awebp" alt="img"></p><ul><li><strong>模型</strong>（Model）指的是后端传递的数据，包含了业务和验证逻辑的数据模型。</li><li><strong>视图</strong>（View）指的是所看到的页面，定义屏幕中 View 的结构，布局和外观。</li><li><strong>视图模型</strong>（ViewModel） 是 MVVM 模式的核心，它是连接 View 和 Model 的桥梁，帮忙处理 View 的全部业务逻辑。</li></ul><p>ViewModel 的角色就是将<strong>视图</strong>与<strong>模型</strong>之间来回转化：</p><ul><li><strong>模型</strong>转化为<strong>视图</strong>：将服务器发送的数据转化成我们看到的页面内容。这就是 <code>&#123;&#123;&#125;&#125;</code> 进行数据对应的作用。</li><li><strong>视图</strong>转化为<strong>模型</strong>：将页面内容及用户操作信息转化成服务器的数据。这部分是指令与 dom 事件对应的作用。</li></ul><p><strong>视图</strong>与<strong>模型</strong>这两者之间的来回转化，我们称之为数据的双向绑定。</p><h2 id="双向绑定的使用"><a href="#双向绑定的使用" class="headerlink" title="双向绑定的使用"></a>双向绑定的使用</h2><p>来看一个添加名单的应用页面的 index.vue 结构，用户可以在输入框输入名字，书写的内容可以即时反映显示在文本中，用户可以操作添加，把该名字插入列表数据中：</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/11/16/16e71f120e22121a~tplv-t2oaga2asx-watermark.awebp" alt="img"></p><p>在 Vue 中可以发现：</p><ul><li>Model：data 处存放的数据</li><li>View：template 中 HTML 代码展示的视图</li><li>ViewModel：是 methods 里的 JS 逻辑代码</li></ul><p>如此一来，我们已经对 MVVM 有了初步的认识。</p><p>DOM 的数据通过 Vue 的 directives（指令）来改变，所以直接改变 model 的数据就可以直接将数据反映在 DOM 上面。前面的 <code>v-model</code> 指令就是用户在输入框操作时反映显示在视图中（你要添加的名字:  ），所以我们使用 Vue 这样的框架时，想要改变视图样式不是直接像 jQuery 操作 DOM 一样去操作，而是改变数据，让数据去驱动视图样式的改变。</p><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><p>Vue 实例有一个完整的生命周期，也就是说从开始创建、初始化数据、编译模板、挂在DOM、渲染-更新-渲染、卸载等一系列过程。Vue 实例的生命周期钩子就是在某个阶段给你一个做某些处理的机会。比如 Vue 整个渲染完 DOM 的时候，你才可以操作 DOM，如果在 DOM 未渲染完之前去操作 DOM，由于 DOM 不存在而操作失败。</p><p>由于 Uniapp 是集成多端的，因此完整的支持 Vue 实例的生命周期，同时还支持<code>应用生命周期</code>及<code>页面生命周期</code>，区别在于你是开发 h5，小程序员，app。</p><h3 id="应用生命周期"><a href="#应用生命周期" class="headerlink" title="应用生命周期"></a>应用生命周期</h3><p>函数名 | 说明<br>-|-|- onLaunch | 初始化完成时触发（全局只触发一次），例如：点击分享页面进入应用，可以捕获在分享链接的参数 onShow | 启动，或从后台进入前台显示 onHide | 从前台进入后台 onError | 报错时触发</p><h3 id="页面生命周期"><a href="#页面生命周期" class="headerlink" title="页面生命周期"></a>页面生命周期</h3><p>函数名 | 说明<br>-|-|- onLoad | 监听页面加载，每个页面触发一次，其参数为上个页面传递的数据，参数类型为Object（用于页面传参） onShow | 监听页面显示。页面每次出现在屏幕上都触发，包括从下级页面点返回露出当前页面 onReady | 监听页面初次渲染完成。如果渲染速度快，会在页面进入动画完成前触发 onHide | 监听页面隐藏 onUnload | 监听页面卸载 onResize | 监听窗口尺寸变化 onPullDownRefresh | 监听下拉刷新 onReachBottom | 监听触底上拉加载 onShareAppMessage | 监听点击右上角分享 onPageScroll | 监听页面滚动 onBackPress | 监听左上角返回按钮或 android 返回键</p><p>以上的生命周期在项目中会经常使用到。看着挺多的不好记住，不要急，我将在进阶中详细演示，并提供一个页面模板给你使用。</p><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><p>来一个简单的基于 HTML 的模板语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">:title</span>=<span class="string">&quot;singer&quot;</span>&gt;</span>喜欢的歌手是: &#123;&#123;singer&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>更换名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">singer</span>: <span class="string">&#x27;周杰伦&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            changeName () &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">singer</span> = <span class="string">&#x27;张学友&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Vue 数据绑定最常见的形式就是使用 <code>Mustache</code> 语法 (双大括号) 的文本插值，比如 <code>&#123;&#123;singer&#125;&#125;</code>，Mustache 标签将会被替代为对应数据对象上 singer 属性的值。无论何时，绑定的数据对象上 singer 属性发生了改变，插值处的内容都会更新，<code>&#123;&#123;singer&#125;&#125;</code> 会被渲染成 <code>周杰伦</code>。</p><p>Mustache 语法不能作用在 HTML 特性上，遇到这种情况应该使用 v-bind 指令：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;singer&quot;</span>&gt;</span>喜欢的歌手是: &#123;&#123;singer&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 渲染成</span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">title</span>=<span class="string">&quot;周杰伦&quot;</span>&gt;</span>喜欢的歌手是: 周杰伦<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可使用简写 <code>v-bind</code> 指令，将 <code>v-bind:title=&quot;singer&quot;</code> 写成 <code>:title=&quot;singer&quot;</code>，直接用 <code>:</code> 代替。</p><p>当然模板语法提供了完全的 JavaScript 表达式支持，你可以写一些简单的表达式，下面这些表达式会在所属 Vue 实例的数据作用域下作为 JavaScript 被解析：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; number + <span class="number">1</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; ok ? <span class="string">&#x27;YES&#x27;</span> : <span class="string">&#x27;NO&#x27;</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; message.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>) &#125;&#125;</span><br><span class="line"></span><br><span class="line">&lt;div v-<span class="attr">bind</span>:id=<span class="string">&quot;&#x27;list-&#x27; + id&quot;</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p>在上面的代码块中，有个 methods 对象，Vue 把所有的事件都放在 methods 属性中，对应具体的方法函数：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">:title</span>=<span class="string">&quot;singer&quot;</span>&gt;</span>喜欢的歌手是: &#123;&#123;singer&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>更换名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">singer</span>: <span class="string">&#x27;周杰伦&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            changeName () &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">singer</span> = <span class="string">&#x27;张学友&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样的方式可以统一集中处理事件，并且开发者可以直观知道事件绑定在哪个元素中，比如 <code>changeName</code> 方法绑定在 button 中，如果想要解除事件直接删除就可，而不用担心别的元素隐形绑定该事件而导致报错。</p><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><p>模板内的表达式非常便利，但是设计它们的初衷是用于简单运算的。在模板中放入太多的逻辑会让模板过重且难以维护。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;) &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果你在处理一个比较复杂的变量，那么在 <code>&#123;&#123;&#125;&#125;</code> 书写就不合适了，看到长长的代码都能让你头大。对于任何复杂逻辑，你都应当使用计算属性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span>&gt;</span>喜欢的歌手是: &#123;&#123;singer&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span>&gt;</span>喜欢的歌手是: &#123;&#123;computedSinger&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">singer</span>: <span class="string">&#x27;周杰伦&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 对singer二次加工处理</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">computedSinger</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="comment">// `this` 指向 Vue 实例</span></span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">singer</span>.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            changeName () &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">singer</span> = <span class="string">&#x27;张学友&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">喜欢的歌手是: 周杰伦</span><br><span class="line">喜欢的歌手是: 伦杰周</span><br></pre></td></tr></table></figure><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><p>在 Vue 中指令是带有 <code>v-</code> 前缀的特殊属性，通过属性来操作元素。</p><p>常见的指令有：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-text：在元素当中插入值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-text</span>=<span class="string">&#x27;singer&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-for：根据变量的值来循环渲染元素 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in list&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;item&#125;&#125;--&#123;&#123;index&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-if和v-else：根据表达式的真假值来动态插入和移除元素 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>我会显示<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-else</span>&gt;</span>我不会显示，但是我要跟有 v-if 指令的元素并齐<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-model：把input的值和变量绑定了，实现了数据和视图的双向绑定 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;singer&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-bind：绑定元素的属性并执行相应的操作 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;t1: isBig&#125;&quot;</span>&gt;</span>isBig 为 true 时，该元素class类名会变为 t1<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上面v-bind可以简写 : --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;t1: isBig&#125;&quot;</span>&gt;</span>isBig 为 true 时，该元素class类名会变为 t1<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-on：监听元素事件，并执行相应的操作 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-on:click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>该元素绑定了点击事件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上面 v-on：可以简写 @ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> @<span class="attr">click</span>=<span class="string">&quot;change&quot;</span>&gt;</span>该元素绑定了点击事件<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">singer</span>: <span class="string">&#x27;周杰伦&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">list</span>:[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">isShow</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">isBig</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            change () &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// ...</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="和"><a href="#和" class="headerlink" title="&lt;template/&gt; 和 &lt;block/&gt;"></a><code>&lt;template/&gt;</code> 和 <code>&lt;block/&gt;</code></h3><p>Uniapp 支持在 template 模板中嵌套 <code>&lt;template/&gt;</code> 和 <code>&lt;block/&gt;</code>，用来进行 列表渲染 和 条件渲染。</p><p><code>&lt;template/&gt;</code> 和 <code>&lt;block/&gt;</code> 并不是一个组件，它们仅仅是一个包装元素，不会在页面中做任何渲染，只接受控制属性。</p><p>代码示例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">view</span>&gt;</span>test 为 true 时显示<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">view</span>&gt;</span>test 为 false 时显示<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 列表渲染 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">block</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;item&#125;&#125; - &#123;&#123;index&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="全局变量-状态管理"><a href="#全局变量-状态管理" class="headerlink" title="全局变量(状态管理)"></a>全局变量(状态管理)</h2><p>在 Vue（Uniapp）中有多种处理全局变量，全局方法的做法：</p><h3 id="1-挂载-Vue-prototype"><a href="#1-挂载-Vue-prototype" class="headerlink" title="1. 挂载 Vue.prototype"></a>1. 挂载 Vue.prototype</h3><p>将一些使用频率较高的常量或者方法，直接扩展到 Vue.prototype 上，每个 Vue 对象都会“继承”下来。</p><p>注意这种方式只支持多个 Vue 页面或多个 nVue 页面之间公用，Vue 和 nVue 之间不公用。</p><p>示例如下：</p><p>在 main.js 中挂载属性&#x2F;方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">websiteUrl</span> = <span class="string">&#x27;http://localhost:3000&#x27;</span>;  </span><br></pre></td></tr></table></figure><p>然后在 pages&#x2F;index&#x2F;index.Vue 中调用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;  </span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;  </span><br><span class="line">        <span class="attr">methods</span>: &#123;  </span><br><span class="line">            <span class="title function_">getBanner</span>(<span class="params"></span>) &#123;</span><br><span class="line">                uni.<span class="title function_">request</span>(&#123;</span><br><span class="line">                    <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">websiteUrl</span> + <span class="string">&#x27;/banner&#x27;</span>,</span><br><span class="line">                    <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">                    <span class="attr">data</span>: &#123;&#125;,</span><br><span class="line">                    <span class="attr">success</span>: <span class="function"><span class="params">res</span> =&gt;</span> &#123;&#125;,</span><br><span class="line">                    <span class="attr">fail</span>: <span class="function">() =&gt;</span> &#123;&#125;,</span><br><span class="line">                    <span class="attr">complete</span>: <span class="function">() =&gt;</span> &#123;&#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这种方式，只需要在 main.js 中定义好即可在每个页面中直接调用。但要注意的是，当前的this指向的是当前模块，稍微不注意就可能出现重复命名的情况。</p><p>建议在 Vue.prototype 上挂载的属性或方法，可以加一个统一的前缀<code>$</code>。比如<code>$url</code> 、<code>$global_url</code>这样，在阅读代码时也容易与当前页面的内容区分开。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$websiteUrl</span> = <span class="string">&#x27;http://localhost:3000&#x27;</span>;  </span><br><span class="line"><span class="comment">// 访问</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="variable language_">this</span>.<span class="property">$websiteUrl</span></span><br></pre></td></tr></table></figure><p>使用 <code>this.$websiteUrl</code> 的时候，与你协作的开发人员一看 <code>$</code> 开头就知道是全局扩展的属性。</p><p>那如果只是简单的变量呢？</p><h3 id="2-globalData"><a href="#2-globalData" class="headerlink" title="2. globalData"></a>2. globalData</h3><p>如果你了解开发小程序的话，恭喜你，这个就是基于小程序延伸过来的。如果你还不熟悉，可以往下看</p><p>但从字面上来看 globalData 单词，可以翻译为全局变量。Uniapp 也把 globalData 作为一种比较简单的全局变量使用方式，但是有一点要清楚，globalData 走内存，storage 走缓存，即小程序退出 globalData 会清空，storage 则不会。</p><p>在 App.vue 可以定义 globalData ，也可以使用 API 读写这个值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;  </span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;  </span><br><span class="line">        <span class="attr">globalData</span>: &#123;  </span><br><span class="line">           <span class="attr">websiteUrl</span>: <span class="string">&#x27;http://localhost:3000&#x27;</span>  </span><br><span class="line">        &#125;,  </span><br><span class="line">        <span class="attr">onLaunch</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;  </span><br><span class="line">           <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;App Launch&#x27;</span>)  </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;  </span><br><span class="line">&lt;/script&gt; </span><br></pre></td></tr></table></figure><p>js 中操作 globalData 的方式如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">赋值：<span class="title function_">getApp</span>().<span class="property">globalData</span>.<span class="property">websiteUrl</span> = <span class="string">&#x27;http://localhost:3000&#x27;</span>  </span><br><span class="line"></span><br><span class="line">取值：<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getApp</span>().<span class="property">globalData</span>.<span class="property">websiteUrl</span>) <span class="comment">// &#x27;http://localhost:3000&#x27;  </span></span><br></pre></td></tr></table></figure><h3 id="3-Vuex"><a href="#3-Vuex" class="headerlink" title="3. Vuex"></a>3. Vuex</h3><p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/18/170ec6f33375f853~tplv-t2oaga2asx-watermark.awebp" alt="img"></p><p>关于<code>Vuex</code>东西不少，我打算开一章来详细讲解。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ol><li>MVVM 是解决 MVC 的一些问题而出现的。</li><li>Vue 是以数据驱动来改变视图的，所有的元素属性，文字节点，事件都可以进行管理；</li><li>全局变量可以让你在项目中管理整个状态，类似使用”全局变量”。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/11/11/hello-world/"/>
      <url>/2023/11/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
